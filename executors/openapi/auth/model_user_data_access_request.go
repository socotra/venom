/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UserDataAccessRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDataAccessRequest{}

// UserDataAccessRequest struct for UserDataAccessRequest
type UserDataAccessRequest struct {
	MaskingLevel        string                         `json:"maskingLevel"`
	AccessControlFields map[string]map[string][]string `json:"accessControlFields"`
}

type _UserDataAccessRequest UserDataAccessRequest

// NewUserDataAccessRequest instantiates a new UserDataAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDataAccessRequest(maskingLevel string, accessControlFields map[string]map[string][]string) *UserDataAccessRequest {
	this := UserDataAccessRequest{}
	this.MaskingLevel = maskingLevel
	this.AccessControlFields = accessControlFields
	return &this
}

// NewUserDataAccessRequestWithDefaults instantiates a new UserDataAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDataAccessRequestWithDefaults() *UserDataAccessRequest {
	this := UserDataAccessRequest{}
	return &this
}

// GetMaskingLevel returns the MaskingLevel field value
func (o *UserDataAccessRequest) GetMaskingLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaskingLevel
}

// GetMaskingLevelOk returns a tuple with the MaskingLevel field value
// and a boolean to check if the value has been set.
func (o *UserDataAccessRequest) GetMaskingLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaskingLevel, true
}

// SetMaskingLevel sets field value
func (o *UserDataAccessRequest) SetMaskingLevel(v string) {
	o.MaskingLevel = v
}

// GetAccessControlFields returns the AccessControlFields field value
func (o *UserDataAccessRequest) GetAccessControlFields() map[string]map[string][]string {
	if o == nil {
		var ret map[string]map[string][]string
		return ret
	}

	return o.AccessControlFields
}

// GetAccessControlFieldsOk returns a tuple with the AccessControlFields field value
// and a boolean to check if the value has been set.
func (o *UserDataAccessRequest) GetAccessControlFieldsOk() (*map[string]map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessControlFields, true
}

// SetAccessControlFields sets field value
func (o *UserDataAccessRequest) SetAccessControlFields(v map[string]map[string][]string) {
	o.AccessControlFields = v
}

func (o UserDataAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDataAccessRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["maskingLevel"] = o.MaskingLevel
	toSerialize["accessControlFields"] = o.AccessControlFields
	return toSerialize, nil
}

func (o *UserDataAccessRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"maskingLevel",
		"accessControlFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserDataAccessRequest := _UserDataAccessRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserDataAccessRequest)

	if err != nil {
		return err
	}

	*o = UserDataAccessRequest(varUserDataAccessRequest)

	return err
}

type NullableUserDataAccessRequest struct {
	value *UserDataAccessRequest
	isSet bool
}

func (v NullableUserDataAccessRequest) Get() *UserDataAccessRequest {
	return v.value
}

func (v *NullableUserDataAccessRequest) Set(val *UserDataAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDataAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDataAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDataAccessRequest(val *UserDataAccessRequest) *NullableUserDataAccessRequest {
	return &NullableUserDataAccessRequest{value: val, isSet: true}
}

func (v NullableUserDataAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDataAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
