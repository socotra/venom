/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateOIDCIdentityProviderReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOIDCIdentityProviderReq{}

// CreateOIDCIdentityProviderReq struct for CreateOIDCIdentityProviderReq
type CreateOIDCIdentityProviderReq struct {
	Id              string `json:"id"`
	DisplayName     string `json:"displayName"`
	ImportConfigUrl string `json:"importConfigUrl"`
	ClientId        string `json:"clientId"`
	ClientSecret    string `json:"clientSecret"`
}

type _CreateOIDCIdentityProviderReq CreateOIDCIdentityProviderReq

// NewCreateOIDCIdentityProviderReq instantiates a new CreateOIDCIdentityProviderReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOIDCIdentityProviderReq(id string, displayName string, importConfigUrl string, clientId string, clientSecret string) *CreateOIDCIdentityProviderReq {
	this := CreateOIDCIdentityProviderReq{}
	this.Id = id
	this.DisplayName = displayName
	this.ImportConfigUrl = importConfigUrl
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	return &this
}

// NewCreateOIDCIdentityProviderReqWithDefaults instantiates a new CreateOIDCIdentityProviderReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOIDCIdentityProviderReqWithDefaults() *CreateOIDCIdentityProviderReq {
	this := CreateOIDCIdentityProviderReq{}
	return &this
}

// GetId returns the Id field value
func (o *CreateOIDCIdentityProviderReq) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateOIDCIdentityProviderReq) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateOIDCIdentityProviderReq) SetId(v string) {
	o.Id = v
}

// GetDisplayName returns the DisplayName field value
func (o *CreateOIDCIdentityProviderReq) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CreateOIDCIdentityProviderReq) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CreateOIDCIdentityProviderReq) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetImportConfigUrl returns the ImportConfigUrl field value
func (o *CreateOIDCIdentityProviderReq) GetImportConfigUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImportConfigUrl
}

// GetImportConfigUrlOk returns a tuple with the ImportConfigUrl field value
// and a boolean to check if the value has been set.
func (o *CreateOIDCIdentityProviderReq) GetImportConfigUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImportConfigUrl, true
}

// SetImportConfigUrl sets field value
func (o *CreateOIDCIdentityProviderReq) SetImportConfigUrl(v string) {
	o.ImportConfigUrl = v
}

// GetClientId returns the ClientId field value
func (o *CreateOIDCIdentityProviderReq) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *CreateOIDCIdentityProviderReq) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *CreateOIDCIdentityProviderReq) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *CreateOIDCIdentityProviderReq) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *CreateOIDCIdentityProviderReq) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *CreateOIDCIdentityProviderReq) SetClientSecret(v string) {
	o.ClientSecret = v
}

func (o CreateOIDCIdentityProviderReq) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOIDCIdentityProviderReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["displayName"] = o.DisplayName
	toSerialize["importConfigUrl"] = o.ImportConfigUrl
	toSerialize["clientId"] = o.ClientId
	toSerialize["clientSecret"] = o.ClientSecret
	return toSerialize, nil
}

func (o *CreateOIDCIdentityProviderReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"displayName",
		"importConfigUrl",
		"clientId",
		"clientSecret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOIDCIdentityProviderReq := _CreateOIDCIdentityProviderReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOIDCIdentityProviderReq)

	if err != nil {
		return err
	}

	*o = CreateOIDCIdentityProviderReq(varCreateOIDCIdentityProviderReq)

	return err
}

type NullableCreateOIDCIdentityProviderReq struct {
	value *CreateOIDCIdentityProviderReq
	isSet bool
}

func (v NullableCreateOIDCIdentityProviderReq) Get() *CreateOIDCIdentityProviderReq {
	return v.value
}

func (v *NullableCreateOIDCIdentityProviderReq) Set(val *CreateOIDCIdentityProviderReq) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOIDCIdentityProviderReq) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOIDCIdentityProviderReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOIDCIdentityProviderReq(val *CreateOIDCIdentityProviderReq) *NullableCreateOIDCIdentityProviderReq {
	return &NullableCreateOIDCIdentityProviderReq{value: val, isSet: true}
}

func (v NullableCreateOIDCIdentityProviderReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOIDCIdentityProviderReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
