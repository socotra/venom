/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateUserReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserReq{}

// CreateUserReq struct for CreateUserReq
type CreateUserReq struct {
	UserName          string   `json:"userName"`
	FirstName         string   `json:"firstName"`
	LastName          string   `json:"lastName"`
	Password          string   `json:"password"`
	TemporaryPassword bool     `json:"temporaryPassword"`
	Email             string   `json:"email"`
	Tenants           []string `json:"tenants"`
	Roles             []string `json:"roles"`
}

type _CreateUserReq CreateUserReq

// NewCreateUserReq instantiates a new CreateUserReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserReq(userName string, firstName string, lastName string, password string, temporaryPassword bool, email string, tenants []string, roles []string) *CreateUserReq {
	this := CreateUserReq{}
	this.UserName = userName
	this.FirstName = firstName
	this.LastName = lastName
	this.Password = password
	this.TemporaryPassword = temporaryPassword
	this.Email = email
	this.Tenants = tenants
	this.Roles = roles
	return &this
}

// NewCreateUserReqWithDefaults instantiates a new CreateUserReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserReqWithDefaults() *CreateUserReq {
	this := CreateUserReq{}
	return &this
}

// GetUserName returns the UserName field value
func (o *CreateUserReq) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *CreateUserReq) SetUserName(v string) {
	o.UserName = v
}

// GetFirstName returns the FirstName field value
func (o *CreateUserReq) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CreateUserReq) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *CreateUserReq) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CreateUserReq) SetLastName(v string) {
	o.LastName = v
}

// GetPassword returns the Password field value
func (o *CreateUserReq) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CreateUserReq) SetPassword(v string) {
	o.Password = v
}

// GetTemporaryPassword returns the TemporaryPassword field value
func (o *CreateUserReq) GetTemporaryPassword() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TemporaryPassword
}

// GetTemporaryPasswordOk returns a tuple with the TemporaryPassword field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetTemporaryPasswordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemporaryPassword, true
}

// SetTemporaryPassword sets field value
func (o *CreateUserReq) SetTemporaryPassword(v bool) {
	o.TemporaryPassword = v
}

// GetEmail returns the Email field value
func (o *CreateUserReq) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateUserReq) SetEmail(v string) {
	o.Email = v
}

// GetTenants returns the Tenants field value
func (o *CreateUserReq) GetTenants() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetTenantsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenants, true
}

// SetTenants sets field value
func (o *CreateUserReq) SetTenants(v []string) {
	o.Tenants = v
}

// GetRoles returns the Roles field value
func (o *CreateUserReq) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *CreateUserReq) GetRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
func (o *CreateUserReq) SetRoles(v []string) {
	o.Roles = v
}

func (o CreateUserReq) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userName"] = o.UserName
	toSerialize["firstName"] = o.FirstName
	toSerialize["lastName"] = o.LastName
	toSerialize["password"] = o.Password
	toSerialize["temporaryPassword"] = o.TemporaryPassword
	toSerialize["email"] = o.Email
	toSerialize["tenants"] = o.Tenants
	toSerialize["roles"] = o.Roles
	return toSerialize, nil
}

func (o *CreateUserReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userName",
		"firstName",
		"lastName",
		"password",
		"temporaryPassword",
		"email",
		"tenants",
		"roles",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUserReq := _CreateUserReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUserReq)

	if err != nil {
		return err
	}

	*o = CreateUserReq(varCreateUserReq)

	return err
}

type NullableCreateUserReq struct {
	value *CreateUserReq
	isSet bool
}

func (v NullableCreateUserReq) Get() *CreateUserReq {
	return v.value
}

func (v *NullableCreateUserReq) Set(val *CreateUserReq) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserReq) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserReq(val *CreateUserReq) *NullableCreateUserReq {
	return &NullableCreateUserReq{value: val, isSet: true}
}

func (v NullableCreateUserReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
