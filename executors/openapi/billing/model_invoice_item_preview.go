/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the InvoiceItemPreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceItemPreview{}

// InvoiceItemPreview struct for InvoiceItemPreview
type InvoiceItemPreview struct {
	ChargeType           string   `json:"chargeType"`
	ChargeCategory       string   `json:"chargeCategory"`
	Amount               float32  `json:"amount"`
	QuoteLocator         *string  `json:"quoteLocator,omitempty"`
	PolicyLocator        *string  `json:"policyLocator,omitempty"`
	ElementType          string   `json:"elementType"`
	ElementStaticLocator string   `json:"elementStaticLocator"`
	TransactionLocators  []string `json:"transactionLocators"`
}

type _InvoiceItemPreview InvoiceItemPreview

// NewInvoiceItemPreview instantiates a new InvoiceItemPreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceItemPreview(chargeType string, chargeCategory string, amount float32, elementType string, elementStaticLocator string, transactionLocators []string) *InvoiceItemPreview {
	this := InvoiceItemPreview{}
	this.ChargeType = chargeType
	this.ChargeCategory = chargeCategory
	this.Amount = amount
	this.ElementType = elementType
	this.ElementStaticLocator = elementStaticLocator
	this.TransactionLocators = transactionLocators
	return &this
}

// NewInvoiceItemPreviewWithDefaults instantiates a new InvoiceItemPreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceItemPreviewWithDefaults() *InvoiceItemPreview {
	this := InvoiceItemPreview{}
	return &this
}

// GetChargeType returns the ChargeType field value
func (o *InvoiceItemPreview) GetChargeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetChargeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeType, true
}

// SetChargeType sets field value
func (o *InvoiceItemPreview) SetChargeType(v string) {
	o.ChargeType = v
}

// GetChargeCategory returns the ChargeCategory field value
func (o *InvoiceItemPreview) GetChargeCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeCategory
}

// GetChargeCategoryOk returns a tuple with the ChargeCategory field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetChargeCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeCategory, true
}

// SetChargeCategory sets field value
func (o *InvoiceItemPreview) SetChargeCategory(v string) {
	o.ChargeCategory = v
}

// GetAmount returns the Amount field value
func (o *InvoiceItemPreview) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InvoiceItemPreview) SetAmount(v float32) {
	o.Amount = v
}

// GetQuoteLocator returns the QuoteLocator field value if set, zero value otherwise.
func (o *InvoiceItemPreview) GetQuoteLocator() string {
	if o == nil || IsNil(o.QuoteLocator) {
		var ret string
		return ret
	}
	return *o.QuoteLocator
}

// GetQuoteLocatorOk returns a tuple with the QuoteLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetQuoteLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteLocator) {
		return nil, false
	}
	return o.QuoteLocator, true
}

// HasQuoteLocator returns a boolean if a field has been set.
func (o *InvoiceItemPreview) HasQuoteLocator() bool {
	if o != nil && !IsNil(o.QuoteLocator) {
		return true
	}

	return false
}

// SetQuoteLocator gets a reference to the given string and assigns it to the QuoteLocator field.
func (o *InvoiceItemPreview) SetQuoteLocator(v string) {
	o.QuoteLocator = &v
}

// GetPolicyLocator returns the PolicyLocator field value if set, zero value otherwise.
func (o *InvoiceItemPreview) GetPolicyLocator() string {
	if o == nil || IsNil(o.PolicyLocator) {
		var ret string
		return ret
	}
	return *o.PolicyLocator
}

// GetPolicyLocatorOk returns a tuple with the PolicyLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetPolicyLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyLocator) {
		return nil, false
	}
	return o.PolicyLocator, true
}

// HasPolicyLocator returns a boolean if a field has been set.
func (o *InvoiceItemPreview) HasPolicyLocator() bool {
	if o != nil && !IsNil(o.PolicyLocator) {
		return true
	}

	return false
}

// SetPolicyLocator gets a reference to the given string and assigns it to the PolicyLocator field.
func (o *InvoiceItemPreview) SetPolicyLocator(v string) {
	o.PolicyLocator = &v
}

// GetElementType returns the ElementType field value
func (o *InvoiceItemPreview) GetElementType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetElementTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElementType, true
}

// SetElementType sets field value
func (o *InvoiceItemPreview) SetElementType(v string) {
	o.ElementType = v
}

// GetElementStaticLocator returns the ElementStaticLocator field value
func (o *InvoiceItemPreview) GetElementStaticLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ElementStaticLocator
}

// GetElementStaticLocatorOk returns a tuple with the ElementStaticLocator field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetElementStaticLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElementStaticLocator, true
}

// SetElementStaticLocator sets field value
func (o *InvoiceItemPreview) SetElementStaticLocator(v string) {
	o.ElementStaticLocator = v
}

// GetTransactionLocators returns the TransactionLocators field value
func (o *InvoiceItemPreview) GetTransactionLocators() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TransactionLocators
}

// GetTransactionLocatorsOk returns a tuple with the TransactionLocators field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemPreview) GetTransactionLocatorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionLocators, true
}

// SetTransactionLocators sets field value
func (o *InvoiceItemPreview) SetTransactionLocators(v []string) {
	o.TransactionLocators = v
}

func (o InvoiceItemPreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceItemPreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chargeType"] = o.ChargeType
	toSerialize["chargeCategory"] = o.ChargeCategory
	toSerialize["amount"] = o.Amount
	if !IsNil(o.QuoteLocator) {
		toSerialize["quoteLocator"] = o.QuoteLocator
	}
	if !IsNil(o.PolicyLocator) {
		toSerialize["policyLocator"] = o.PolicyLocator
	}
	toSerialize["elementType"] = o.ElementType
	toSerialize["elementStaticLocator"] = o.ElementStaticLocator
	toSerialize["transactionLocators"] = o.TransactionLocators
	return toSerialize, nil
}

func (o *InvoiceItemPreview) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chargeType",
		"chargeCategory",
		"amount",
		"elementType",
		"elementStaticLocator",
		"transactionLocators",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceItemPreview := _InvoiceItemPreview{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceItemPreview)

	if err != nil {
		return err
	}

	*o = InvoiceItemPreview(varInvoiceItemPreview)

	return err
}

type NullableInvoiceItemPreview struct {
	value *InvoiceItemPreview
	isSet bool
}

func (v NullableInvoiceItemPreview) Get() *InvoiceItemPreview {
	return v.value
}

func (v *NullableInvoiceItemPreview) Set(val *InvoiceItemPreview) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceItemPreview) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceItemPreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceItemPreview(val *InvoiceItemPreview) *NullableInvoiceItemPreview {
	return &NullableInvoiceItemPreview{value: val, isSet: true}
}

func (v NullableInvoiceItemPreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceItemPreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
