/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the LedgerAccountLineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LedgerAccountLineItem{}

// LedgerAccountLineItem struct for LedgerAccountLineItem
type LedgerAccountLineItem struct {
	Amount               float32   `json:"amount"`
	FaTransactionLocator string    `json:"faTransactionLocator"`
	FaTransactionTime    time.Time `json:"faTransactionTime"`
	FaTransactionNote    string    `json:"faTransactionNote"`
	AccountingType       string    `json:"accountingType"`
}

type _LedgerAccountLineItem LedgerAccountLineItem

// NewLedgerAccountLineItem instantiates a new LedgerAccountLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedgerAccountLineItem(amount float32, faTransactionLocator string, faTransactionTime time.Time, faTransactionNote string, accountingType string) *LedgerAccountLineItem {
	this := LedgerAccountLineItem{}
	this.Amount = amount
	this.FaTransactionLocator = faTransactionLocator
	this.FaTransactionTime = faTransactionTime
	this.FaTransactionNote = faTransactionNote
	this.AccountingType = accountingType
	return &this
}

// NewLedgerAccountLineItemWithDefaults instantiates a new LedgerAccountLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedgerAccountLineItemWithDefaults() *LedgerAccountLineItem {
	this := LedgerAccountLineItem{}
	return &this
}

// GetAmount returns the Amount field value
func (o *LedgerAccountLineItem) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *LedgerAccountLineItem) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *LedgerAccountLineItem) SetAmount(v float32) {
	o.Amount = v
}

// GetFaTransactionLocator returns the FaTransactionLocator field value
func (o *LedgerAccountLineItem) GetFaTransactionLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FaTransactionLocator
}

// GetFaTransactionLocatorOk returns a tuple with the FaTransactionLocator field value
// and a boolean to check if the value has been set.
func (o *LedgerAccountLineItem) GetFaTransactionLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FaTransactionLocator, true
}

// SetFaTransactionLocator sets field value
func (o *LedgerAccountLineItem) SetFaTransactionLocator(v string) {
	o.FaTransactionLocator = v
}

// GetFaTransactionTime returns the FaTransactionTime field value
func (o *LedgerAccountLineItem) GetFaTransactionTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FaTransactionTime
}

// GetFaTransactionTimeOk returns a tuple with the FaTransactionTime field value
// and a boolean to check if the value has been set.
func (o *LedgerAccountLineItem) GetFaTransactionTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FaTransactionTime, true
}

// SetFaTransactionTime sets field value
func (o *LedgerAccountLineItem) SetFaTransactionTime(v time.Time) {
	o.FaTransactionTime = v
}

// GetFaTransactionNote returns the FaTransactionNote field value
func (o *LedgerAccountLineItem) GetFaTransactionNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FaTransactionNote
}

// GetFaTransactionNoteOk returns a tuple with the FaTransactionNote field value
// and a boolean to check if the value has been set.
func (o *LedgerAccountLineItem) GetFaTransactionNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FaTransactionNote, true
}

// SetFaTransactionNote sets field value
func (o *LedgerAccountLineItem) SetFaTransactionNote(v string) {
	o.FaTransactionNote = v
}

// GetAccountingType returns the AccountingType field value
func (o *LedgerAccountLineItem) GetAccountingType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountingType
}

// GetAccountingTypeOk returns a tuple with the AccountingType field value
// and a boolean to check if the value has been set.
func (o *LedgerAccountLineItem) GetAccountingTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountingType, true
}

// SetAccountingType sets field value
func (o *LedgerAccountLineItem) SetAccountingType(v string) {
	o.AccountingType = v
}

func (o LedgerAccountLineItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LedgerAccountLineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["faTransactionLocator"] = o.FaTransactionLocator
	toSerialize["faTransactionTime"] = o.FaTransactionTime
	toSerialize["faTransactionNote"] = o.FaTransactionNote
	toSerialize["accountingType"] = o.AccountingType
	return toSerialize, nil
}

func (o *LedgerAccountLineItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"faTransactionLocator",
		"faTransactionTime",
		"faTransactionNote",
		"accountingType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLedgerAccountLineItem := _LedgerAccountLineItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLedgerAccountLineItem)

	if err != nil {
		return err
	}

	*o = LedgerAccountLineItem(varLedgerAccountLineItem)

	return err
}

type NullableLedgerAccountLineItem struct {
	value *LedgerAccountLineItem
	isSet bool
}

func (v NullableLedgerAccountLineItem) Get() *LedgerAccountLineItem {
	return v.value
}

func (v *NullableLedgerAccountLineItem) Set(val *LedgerAccountLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableLedgerAccountLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableLedgerAccountLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedgerAccountLineItem(val *LedgerAccountLineItem) *NullableLedgerAccountLineItem {
	return &NullableLedgerAccountLineItem{value: val, isSet: true}
}

func (v NullableLedgerAccountLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedgerAccountLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
