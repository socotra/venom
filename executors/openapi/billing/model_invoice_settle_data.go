/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the InvoiceSettleData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceSettleData{}

// InvoiceSettleData struct for InvoiceSettleData
type InvoiceSettleData struct {
	InvoiceLocator string               `json:"invoiceLocator"`
	AccountLocator string               `json:"accountLocator"`
	PolicyLocators ListPageResponseULID `json:"policyLocators"`
}

type _InvoiceSettleData InvoiceSettleData

// NewInvoiceSettleData instantiates a new InvoiceSettleData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceSettleData(invoiceLocator string, accountLocator string, policyLocators ListPageResponseULID) *InvoiceSettleData {
	this := InvoiceSettleData{}
	this.InvoiceLocator = invoiceLocator
	this.AccountLocator = accountLocator
	this.PolicyLocators = policyLocators
	return &this
}

// NewInvoiceSettleDataWithDefaults instantiates a new InvoiceSettleData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceSettleDataWithDefaults() *InvoiceSettleData {
	this := InvoiceSettleData{}
	return &this
}

// GetInvoiceLocator returns the InvoiceLocator field value
func (o *InvoiceSettleData) GetInvoiceLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceLocator
}

// GetInvoiceLocatorOk returns a tuple with the InvoiceLocator field value
// and a boolean to check if the value has been set.
func (o *InvoiceSettleData) GetInvoiceLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceLocator, true
}

// SetInvoiceLocator sets field value
func (o *InvoiceSettleData) SetInvoiceLocator(v string) {
	o.InvoiceLocator = v
}

// GetAccountLocator returns the AccountLocator field value
func (o *InvoiceSettleData) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *InvoiceSettleData) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *InvoiceSettleData) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetPolicyLocators returns the PolicyLocators field value
func (o *InvoiceSettleData) GetPolicyLocators() ListPageResponseULID {
	if o == nil {
		var ret ListPageResponseULID
		return ret
	}

	return o.PolicyLocators
}

// GetPolicyLocatorsOk returns a tuple with the PolicyLocators field value
// and a boolean to check if the value has been set.
func (o *InvoiceSettleData) GetPolicyLocatorsOk() (*ListPageResponseULID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyLocators, true
}

// SetPolicyLocators sets field value
func (o *InvoiceSettleData) SetPolicyLocators(v ListPageResponseULID) {
	o.PolicyLocators = v
}

func (o InvoiceSettleData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceSettleData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["invoiceLocator"] = o.InvoiceLocator
	toSerialize["accountLocator"] = o.AccountLocator
	toSerialize["policyLocators"] = o.PolicyLocators
	return toSerialize, nil
}

func (o *InvoiceSettleData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"invoiceLocator",
		"accountLocator",
		"policyLocators",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceSettleData := _InvoiceSettleData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceSettleData)

	if err != nil {
		return err
	}

	*o = InvoiceSettleData(varInvoiceSettleData)

	return err
}

type NullableInvoiceSettleData struct {
	value *InvoiceSettleData
	isSet bool
}

func (v NullableInvoiceSettleData) Get() *InvoiceSettleData {
	return v.value
}

func (v *NullableInvoiceSettleData) Set(val *InvoiceSettleData) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceSettleData) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceSettleData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceSettleData(val *InvoiceSettleData) *NullableInvoiceSettleData {
	return &NullableInvoiceSettleData{value: val, isSet: true}
}

func (v NullableInvoiceSettleData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceSettleData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
