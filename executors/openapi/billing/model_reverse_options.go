/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ReverseOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReverseOptions{}

// ReverseOptions struct for ReverseOptions
type ReverseOptions struct {
	ReversalType string `json:"reversalType"`
}

type _ReverseOptions ReverseOptions

// NewReverseOptions instantiates a new ReverseOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReverseOptions(reversalType string) *ReverseOptions {
	this := ReverseOptions{}
	this.ReversalType = reversalType
	return &this
}

// NewReverseOptionsWithDefaults instantiates a new ReverseOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReverseOptionsWithDefaults() *ReverseOptions {
	this := ReverseOptions{}
	return &this
}

// GetReversalType returns the ReversalType field value
func (o *ReverseOptions) GetReversalType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReversalType
}

// GetReversalTypeOk returns a tuple with the ReversalType field value
// and a boolean to check if the value has been set.
func (o *ReverseOptions) GetReversalTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReversalType, true
}

// SetReversalType sets field value
func (o *ReverseOptions) SetReversalType(v string) {
	o.ReversalType = v
}

func (o ReverseOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReverseOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["reversalType"] = o.ReversalType
	return toSerialize, nil
}

func (o *ReverseOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reversalType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReverseOptions := _ReverseOptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReverseOptions)

	if err != nil {
		return err
	}

	*o = ReverseOptions(varReverseOptions)

	return err
}

type NullableReverseOptions struct {
	value *ReverseOptions
	isSet bool
}

func (v NullableReverseOptions) Get() *ReverseOptions {
	return v.value
}

func (v *NullableReverseOptions) Set(val *ReverseOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableReverseOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableReverseOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReverseOptions(val *ReverseOptions) *NullableReverseOptions {
	return &NullableReverseOptions{value: val, isSet: true}
}

func (v NullableReverseOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReverseOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
