/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
	"time"
)

// checks if the PatchDelinquency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchDelinquency{}

// PatchDelinquency struct for PatchDelinquency
type PatchDelinquency struct {
	GraceEndAt *time.Time `json:"graceEndAt,omitempty"`
}

// NewPatchDelinquency instantiates a new PatchDelinquency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchDelinquency() *PatchDelinquency {
	this := PatchDelinquency{}
	return &this
}

// NewPatchDelinquencyWithDefaults instantiates a new PatchDelinquency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchDelinquencyWithDefaults() *PatchDelinquency {
	this := PatchDelinquency{}
	return &this
}

// GetGraceEndAt returns the GraceEndAt field value if set, zero value otherwise.
func (o *PatchDelinquency) GetGraceEndAt() time.Time {
	if o == nil || IsNil(o.GraceEndAt) {
		var ret time.Time
		return ret
	}
	return *o.GraceEndAt
}

// GetGraceEndAtOk returns a tuple with the GraceEndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchDelinquency) GetGraceEndAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.GraceEndAt) {
		return nil, false
	}
	return o.GraceEndAt, true
}

// HasGraceEndAt returns a boolean if a field has been set.
func (o *PatchDelinquency) HasGraceEndAt() bool {
	if o != nil && !IsNil(o.GraceEndAt) {
		return true
	}

	return false
}

// SetGraceEndAt gets a reference to the given time.Time and assigns it to the GraceEndAt field.
func (o *PatchDelinquency) SetGraceEndAt(v time.Time) {
	o.GraceEndAt = &v
}

func (o PatchDelinquency) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchDelinquency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GraceEndAt) {
		toSerialize["graceEndAt"] = o.GraceEndAt
	}
	return toSerialize, nil
}

type NullablePatchDelinquency struct {
	value *PatchDelinquency
	isSet bool
}

func (v NullablePatchDelinquency) Get() *PatchDelinquency {
	return v.value
}

func (v *NullablePatchDelinquency) Set(val *PatchDelinquency) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchDelinquency) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchDelinquency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchDelinquency(val *PatchDelinquency) *NullablePatchDelinquency {
	return &NullablePatchDelinquency{value: val, isSet: true}
}

func (v NullablePatchDelinquency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchDelinquency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
