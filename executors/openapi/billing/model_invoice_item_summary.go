/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the InvoiceItemSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceItemSummary{}

// InvoiceItemSummary struct for InvoiceItemSummary
type InvoiceItemSummary struct {
	InvoiceItemLocator       string                   `json:"invoiceItemLocator"`
	ElementType              *string                  `json:"elementType,omitempty"`
	ElementStaticLocator     *string                  `json:"elementStaticLocator,omitempty"`
	ChargeType               string                   `json:"chargeType"`
	ChargeCategory           string                   `json:"chargeCategory"`
	Amount                   float32                  `json:"amount"`
	RemainingAmount          float32                  `json:"remainingAmount"`
	SettlementTime           *time.Time               `json:"settlementTime,omitempty"`
	InstallmentItemSummaries []InstallmentItemSummary `json:"installmentItemSummaries"`
}

type _InvoiceItemSummary InvoiceItemSummary

// NewInvoiceItemSummary instantiates a new InvoiceItemSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceItemSummary(invoiceItemLocator string, chargeType string, chargeCategory string, amount float32, remainingAmount float32, installmentItemSummaries []InstallmentItemSummary) *InvoiceItemSummary {
	this := InvoiceItemSummary{}
	this.InvoiceItemLocator = invoiceItemLocator
	this.ChargeType = chargeType
	this.ChargeCategory = chargeCategory
	this.Amount = amount
	this.RemainingAmount = remainingAmount
	this.InstallmentItemSummaries = installmentItemSummaries
	return &this
}

// NewInvoiceItemSummaryWithDefaults instantiates a new InvoiceItemSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceItemSummaryWithDefaults() *InvoiceItemSummary {
	this := InvoiceItemSummary{}
	return &this
}

// GetInvoiceItemLocator returns the InvoiceItemLocator field value
func (o *InvoiceItemSummary) GetInvoiceItemLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceItemLocator
}

// GetInvoiceItemLocatorOk returns a tuple with the InvoiceItemLocator field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetInvoiceItemLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceItemLocator, true
}

// SetInvoiceItemLocator sets field value
func (o *InvoiceItemSummary) SetInvoiceItemLocator(v string) {
	o.InvoiceItemLocator = v
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *InvoiceItemSummary) GetElementType() string {
	if o == nil || IsNil(o.ElementType) {
		var ret string
		return ret
	}
	return *o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetElementTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ElementType) {
		return nil, false
	}
	return o.ElementType, true
}

// HasElementType returns a boolean if a field has been set.
func (o *InvoiceItemSummary) HasElementType() bool {
	if o != nil && !IsNil(o.ElementType) {
		return true
	}

	return false
}

// SetElementType gets a reference to the given string and assigns it to the ElementType field.
func (o *InvoiceItemSummary) SetElementType(v string) {
	o.ElementType = &v
}

// GetElementStaticLocator returns the ElementStaticLocator field value if set, zero value otherwise.
func (o *InvoiceItemSummary) GetElementStaticLocator() string {
	if o == nil || IsNil(o.ElementStaticLocator) {
		var ret string
		return ret
	}
	return *o.ElementStaticLocator
}

// GetElementStaticLocatorOk returns a tuple with the ElementStaticLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetElementStaticLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.ElementStaticLocator) {
		return nil, false
	}
	return o.ElementStaticLocator, true
}

// HasElementStaticLocator returns a boolean if a field has been set.
func (o *InvoiceItemSummary) HasElementStaticLocator() bool {
	if o != nil && !IsNil(o.ElementStaticLocator) {
		return true
	}

	return false
}

// SetElementStaticLocator gets a reference to the given string and assigns it to the ElementStaticLocator field.
func (o *InvoiceItemSummary) SetElementStaticLocator(v string) {
	o.ElementStaticLocator = &v
}

// GetChargeType returns the ChargeType field value
func (o *InvoiceItemSummary) GetChargeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetChargeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeType, true
}

// SetChargeType sets field value
func (o *InvoiceItemSummary) SetChargeType(v string) {
	o.ChargeType = v
}

// GetChargeCategory returns the ChargeCategory field value
func (o *InvoiceItemSummary) GetChargeCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeCategory
}

// GetChargeCategoryOk returns a tuple with the ChargeCategory field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetChargeCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeCategory, true
}

// SetChargeCategory sets field value
func (o *InvoiceItemSummary) SetChargeCategory(v string) {
	o.ChargeCategory = v
}

// GetAmount returns the Amount field value
func (o *InvoiceItemSummary) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InvoiceItemSummary) SetAmount(v float32) {
	o.Amount = v
}

// GetRemainingAmount returns the RemainingAmount field value
func (o *InvoiceItemSummary) GetRemainingAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RemainingAmount
}

// GetRemainingAmountOk returns a tuple with the RemainingAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetRemainingAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingAmount, true
}

// SetRemainingAmount sets field value
func (o *InvoiceItemSummary) SetRemainingAmount(v float32) {
	o.RemainingAmount = v
}

// GetSettlementTime returns the SettlementTime field value if set, zero value otherwise.
func (o *InvoiceItemSummary) GetSettlementTime() time.Time {
	if o == nil || IsNil(o.SettlementTime) {
		var ret time.Time
		return ret
	}
	return *o.SettlementTime
}

// GetSettlementTimeOk returns a tuple with the SettlementTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetSettlementTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SettlementTime) {
		return nil, false
	}
	return o.SettlementTime, true
}

// HasSettlementTime returns a boolean if a field has been set.
func (o *InvoiceItemSummary) HasSettlementTime() bool {
	if o != nil && !IsNil(o.SettlementTime) {
		return true
	}

	return false
}

// SetSettlementTime gets a reference to the given time.Time and assigns it to the SettlementTime field.
func (o *InvoiceItemSummary) SetSettlementTime(v time.Time) {
	o.SettlementTime = &v
}

// GetInstallmentItemSummaries returns the InstallmentItemSummaries field value
func (o *InvoiceItemSummary) GetInstallmentItemSummaries() []InstallmentItemSummary {
	if o == nil {
		var ret []InstallmentItemSummary
		return ret
	}

	return o.InstallmentItemSummaries
}

// GetInstallmentItemSummariesOk returns a tuple with the InstallmentItemSummaries field value
// and a boolean to check if the value has been set.
func (o *InvoiceItemSummary) GetInstallmentItemSummariesOk() ([]InstallmentItemSummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstallmentItemSummaries, true
}

// SetInstallmentItemSummaries sets field value
func (o *InvoiceItemSummary) SetInstallmentItemSummaries(v []InstallmentItemSummary) {
	o.InstallmentItemSummaries = v
}

func (o InvoiceItemSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceItemSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["invoiceItemLocator"] = o.InvoiceItemLocator
	if !IsNil(o.ElementType) {
		toSerialize["elementType"] = o.ElementType
	}
	if !IsNil(o.ElementStaticLocator) {
		toSerialize["elementStaticLocator"] = o.ElementStaticLocator
	}
	toSerialize["chargeType"] = o.ChargeType
	toSerialize["chargeCategory"] = o.ChargeCategory
	toSerialize["amount"] = o.Amount
	toSerialize["remainingAmount"] = o.RemainingAmount
	if !IsNil(o.SettlementTime) {
		toSerialize["settlementTime"] = o.SettlementTime
	}
	toSerialize["installmentItemSummaries"] = o.InstallmentItemSummaries
	return toSerialize, nil
}

func (o *InvoiceItemSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"invoiceItemLocator",
		"chargeType",
		"chargeCategory",
		"amount",
		"remainingAmount",
		"installmentItemSummaries",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceItemSummary := _InvoiceItemSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceItemSummary)

	if err != nil {
		return err
	}

	*o = InvoiceItemSummary(varInvoiceItemSummary)

	return err
}

type NullableInvoiceItemSummary struct {
	value *InvoiceItemSummary
	isSet bool
}

func (v NullableInvoiceItemSummary) Get() *InvoiceItemSummary {
	return v.value
}

func (v *NullableInvoiceItemSummary) Set(val *InvoiceItemSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceItemSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceItemSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceItemSummary(val *InvoiceItemSummary) *NullableInvoiceItemSummary {
	return &NullableInvoiceItemSummary{value: val, isSet: true}
}

func (v NullableInvoiceItemSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceItemSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
