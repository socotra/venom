/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the EarlyInvoicingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EarlyInvoicingRequest{}

// EarlyInvoicingRequest struct for EarlyInvoicingRequest
type EarlyInvoicingRequest struct {
	AccountLocator      *string    `json:"accountLocator,omitempty"`
	InvoiceThroughTime  *time.Time `json:"invoiceThroughTime,omitempty"`
	InstallmentLocators []string   `json:"installmentLocators"`
	InvoiceDueTime      *time.Time `json:"invoiceDueTime,omitempty"`
	Timezone            *string    `json:"timezone,omitempty"`
	IgnoreHolds         bool       `json:"ignoreHolds"`
}

type _EarlyInvoicingRequest EarlyInvoicingRequest

// NewEarlyInvoicingRequest instantiates a new EarlyInvoicingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEarlyInvoicingRequest(installmentLocators []string, ignoreHolds bool) *EarlyInvoicingRequest {
	this := EarlyInvoicingRequest{}
	this.InstallmentLocators = installmentLocators
	this.IgnoreHolds = ignoreHolds
	return &this
}

// NewEarlyInvoicingRequestWithDefaults instantiates a new EarlyInvoicingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEarlyInvoicingRequestWithDefaults() *EarlyInvoicingRequest {
	this := EarlyInvoicingRequest{}
	return &this
}

// GetAccountLocator returns the AccountLocator field value if set, zero value otherwise.
func (o *EarlyInvoicingRequest) GetAccountLocator() string {
	if o == nil || IsNil(o.AccountLocator) {
		var ret string
		return ret
	}
	return *o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingRequest) GetAccountLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.AccountLocator) {
		return nil, false
	}
	return o.AccountLocator, true
}

// HasAccountLocator returns a boolean if a field has been set.
func (o *EarlyInvoicingRequest) HasAccountLocator() bool {
	if o != nil && !IsNil(o.AccountLocator) {
		return true
	}

	return false
}

// SetAccountLocator gets a reference to the given string and assigns it to the AccountLocator field.
func (o *EarlyInvoicingRequest) SetAccountLocator(v string) {
	o.AccountLocator = &v
}

// GetInvoiceThroughTime returns the InvoiceThroughTime field value if set, zero value otherwise.
func (o *EarlyInvoicingRequest) GetInvoiceThroughTime() time.Time {
	if o == nil || IsNil(o.InvoiceThroughTime) {
		var ret time.Time
		return ret
	}
	return *o.InvoiceThroughTime
}

// GetInvoiceThroughTimeOk returns a tuple with the InvoiceThroughTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingRequest) GetInvoiceThroughTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InvoiceThroughTime) {
		return nil, false
	}
	return o.InvoiceThroughTime, true
}

// HasInvoiceThroughTime returns a boolean if a field has been set.
func (o *EarlyInvoicingRequest) HasInvoiceThroughTime() bool {
	if o != nil && !IsNil(o.InvoiceThroughTime) {
		return true
	}

	return false
}

// SetInvoiceThroughTime gets a reference to the given time.Time and assigns it to the InvoiceThroughTime field.
func (o *EarlyInvoicingRequest) SetInvoiceThroughTime(v time.Time) {
	o.InvoiceThroughTime = &v
}

// GetInstallmentLocators returns the InstallmentLocators field value
func (o *EarlyInvoicingRequest) GetInstallmentLocators() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InstallmentLocators
}

// GetInstallmentLocatorsOk returns a tuple with the InstallmentLocators field value
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingRequest) GetInstallmentLocatorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstallmentLocators, true
}

// SetInstallmentLocators sets field value
func (o *EarlyInvoicingRequest) SetInstallmentLocators(v []string) {
	o.InstallmentLocators = v
}

// GetInvoiceDueTime returns the InvoiceDueTime field value if set, zero value otherwise.
func (o *EarlyInvoicingRequest) GetInvoiceDueTime() time.Time {
	if o == nil || IsNil(o.InvoiceDueTime) {
		var ret time.Time
		return ret
	}
	return *o.InvoiceDueTime
}

// GetInvoiceDueTimeOk returns a tuple with the InvoiceDueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingRequest) GetInvoiceDueTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InvoiceDueTime) {
		return nil, false
	}
	return o.InvoiceDueTime, true
}

// HasInvoiceDueTime returns a boolean if a field has been set.
func (o *EarlyInvoicingRequest) HasInvoiceDueTime() bool {
	if o != nil && !IsNil(o.InvoiceDueTime) {
		return true
	}

	return false
}

// SetInvoiceDueTime gets a reference to the given time.Time and assigns it to the InvoiceDueTime field.
func (o *EarlyInvoicingRequest) SetInvoiceDueTime(v time.Time) {
	o.InvoiceDueTime = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *EarlyInvoicingRequest) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingRequest) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *EarlyInvoicingRequest) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *EarlyInvoicingRequest) SetTimezone(v string) {
	o.Timezone = &v
}

// GetIgnoreHolds returns the IgnoreHolds field value
func (o *EarlyInvoicingRequest) GetIgnoreHolds() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IgnoreHolds
}

// GetIgnoreHoldsOk returns a tuple with the IgnoreHolds field value
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingRequest) GetIgnoreHoldsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IgnoreHolds, true
}

// SetIgnoreHolds sets field value
func (o *EarlyInvoicingRequest) SetIgnoreHolds(v bool) {
	o.IgnoreHolds = v
}

func (o EarlyInvoicingRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EarlyInvoicingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountLocator) {
		toSerialize["accountLocator"] = o.AccountLocator
	}
	if !IsNil(o.InvoiceThroughTime) {
		toSerialize["invoiceThroughTime"] = o.InvoiceThroughTime
	}
	toSerialize["installmentLocators"] = o.InstallmentLocators
	if !IsNil(o.InvoiceDueTime) {
		toSerialize["invoiceDueTime"] = o.InvoiceDueTime
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	toSerialize["ignoreHolds"] = o.IgnoreHolds
	return toSerialize, nil
}

func (o *EarlyInvoicingRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"installmentLocators",
		"ignoreHolds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEarlyInvoicingRequest := _EarlyInvoicingRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEarlyInvoicingRequest)

	if err != nil {
		return err
	}

	*o = EarlyInvoicingRequest(varEarlyInvoicingRequest)

	return err
}

type NullableEarlyInvoicingRequest struct {
	value *EarlyInvoicingRequest
	isSet bool
}

func (v NullableEarlyInvoicingRequest) Get() *EarlyInvoicingRequest {
	return v.value
}

func (v *NullableEarlyInvoicingRequest) Set(val *EarlyInvoicingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEarlyInvoicingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEarlyInvoicingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEarlyInvoicingRequest(val *EarlyInvoicingRequest) *NullableEarlyInvoicingRequest {
	return &NullableEarlyInvoicingRequest{value: val, isSet: true}
}

func (v NullableEarlyInvoicingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEarlyInvoicingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
