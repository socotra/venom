/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the InvoicePreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoicePreview{}

// InvoicePreview struct for InvoicePreview
type InvoicePreview struct {
	GenerateTime time.Time            `json:"generateTime"`
	DueTime      time.Time            `json:"dueTime"`
	StartTime    time.Time            `json:"startTime"`
	EndTime      time.Time            `json:"endTime"`
	InvoiceItems []InvoiceItemPreview `json:"invoiceItems"`
	TotalAmount  float32              `json:"totalAmount"`
}

type _InvoicePreview InvoicePreview

// NewInvoicePreview instantiates a new InvoicePreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoicePreview(generateTime time.Time, dueTime time.Time, startTime time.Time, endTime time.Time, invoiceItems []InvoiceItemPreview, totalAmount float32) *InvoicePreview {
	this := InvoicePreview{}
	this.GenerateTime = generateTime
	this.DueTime = dueTime
	this.StartTime = startTime
	this.EndTime = endTime
	this.InvoiceItems = invoiceItems
	this.TotalAmount = totalAmount
	return &this
}

// NewInvoicePreviewWithDefaults instantiates a new InvoicePreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoicePreviewWithDefaults() *InvoicePreview {
	this := InvoicePreview{}
	return &this
}

// GetGenerateTime returns the GenerateTime field value
func (o *InvoicePreview) GetGenerateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.GenerateTime
}

// GetGenerateTimeOk returns a tuple with the GenerateTime field value
// and a boolean to check if the value has been set.
func (o *InvoicePreview) GetGenerateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GenerateTime, true
}

// SetGenerateTime sets field value
func (o *InvoicePreview) SetGenerateTime(v time.Time) {
	o.GenerateTime = v
}

// GetDueTime returns the DueTime field value
func (o *InvoicePreview) GetDueTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DueTime
}

// GetDueTimeOk returns a tuple with the DueTime field value
// and a boolean to check if the value has been set.
func (o *InvoicePreview) GetDueTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DueTime, true
}

// SetDueTime sets field value
func (o *InvoicePreview) SetDueTime(v time.Time) {
	o.DueTime = v
}

// GetStartTime returns the StartTime field value
func (o *InvoicePreview) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *InvoicePreview) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *InvoicePreview) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *InvoicePreview) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *InvoicePreview) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *InvoicePreview) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetInvoiceItems returns the InvoiceItems field value
func (o *InvoicePreview) GetInvoiceItems() []InvoiceItemPreview {
	if o == nil {
		var ret []InvoiceItemPreview
		return ret
	}

	return o.InvoiceItems
}

// GetInvoiceItemsOk returns a tuple with the InvoiceItems field value
// and a boolean to check if the value has been set.
func (o *InvoicePreview) GetInvoiceItemsOk() ([]InvoiceItemPreview, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceItems, true
}

// SetInvoiceItems sets field value
func (o *InvoicePreview) SetInvoiceItems(v []InvoiceItemPreview) {
	o.InvoiceItems = v
}

// GetTotalAmount returns the TotalAmount field value
func (o *InvoicePreview) GetTotalAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *InvoicePreview) GetTotalAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *InvoicePreview) SetTotalAmount(v float32) {
	o.TotalAmount = v
}

func (o InvoicePreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoicePreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["generateTime"] = o.GenerateTime
	toSerialize["dueTime"] = o.DueTime
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["invoiceItems"] = o.InvoiceItems
	toSerialize["totalAmount"] = o.TotalAmount
	return toSerialize, nil
}

func (o *InvoicePreview) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"generateTime",
		"dueTime",
		"startTime",
		"endTime",
		"invoiceItems",
		"totalAmount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoicePreview := _InvoicePreview{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoicePreview)

	if err != nil {
		return err
	}

	*o = InvoicePreview(varInvoicePreview)

	return err
}

type NullableInvoicePreview struct {
	value *InvoicePreview
	isSet bool
}

func (v NullableInvoicePreview) Get() *InvoicePreview {
	return v.value
}

func (v *NullableInvoicePreview) Set(val *InvoicePreview) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoicePreview) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoicePreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoicePreview(val *InvoicePreview) *NullableInvoicePreview {
	return &NullableInvoicePreview{value: val, isSet: true}
}

func (v NullableInvoicePreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoicePreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
