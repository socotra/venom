/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ListPageResponsePaymentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPageResponsePaymentResponse{}

// ListPageResponsePaymentResponse struct for ListPageResponsePaymentResponse
type ListPageResponsePaymentResponse struct {
	ListCompleted bool              `json:"listCompleted"`
	Items         []PaymentResponse `json:"items"`
}

type _ListPageResponsePaymentResponse ListPageResponsePaymentResponse

// NewListPageResponsePaymentResponse instantiates a new ListPageResponsePaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPageResponsePaymentResponse(listCompleted bool, items []PaymentResponse) *ListPageResponsePaymentResponse {
	this := ListPageResponsePaymentResponse{}
	this.ListCompleted = listCompleted
	this.Items = items
	return &this
}

// NewListPageResponsePaymentResponseWithDefaults instantiates a new ListPageResponsePaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPageResponsePaymentResponseWithDefaults() *ListPageResponsePaymentResponse {
	this := ListPageResponsePaymentResponse{}
	return &this
}

// GetListCompleted returns the ListCompleted field value
func (o *ListPageResponsePaymentResponse) GetListCompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ListCompleted
}

// GetListCompletedOk returns a tuple with the ListCompleted field value
// and a boolean to check if the value has been set.
func (o *ListPageResponsePaymentResponse) GetListCompletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListCompleted, true
}

// SetListCompleted sets field value
func (o *ListPageResponsePaymentResponse) SetListCompleted(v bool) {
	o.ListCompleted = v
}

// GetItems returns the Items field value
func (o *ListPageResponsePaymentResponse) GetItems() []PaymentResponse {
	if o == nil {
		var ret []PaymentResponse
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ListPageResponsePaymentResponse) GetItemsOk() ([]PaymentResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ListPageResponsePaymentResponse) SetItems(v []PaymentResponse) {
	o.Items = v
}

func (o ListPageResponsePaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPageResponsePaymentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["listCompleted"] = o.ListCompleted
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

func (o *ListPageResponsePaymentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"listCompleted",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListPageResponsePaymentResponse := _ListPageResponsePaymentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListPageResponsePaymentResponse)

	if err != nil {
		return err
	}

	*o = ListPageResponsePaymentResponse(varListPageResponsePaymentResponse)

	return err
}

type NullableListPageResponsePaymentResponse struct {
	value *ListPageResponsePaymentResponse
	isSet bool
}

func (v NullableListPageResponsePaymentResponse) Get() *ListPageResponsePaymentResponse {
	return v.value
}

func (v *NullableListPageResponsePaymentResponse) Set(val *ListPageResponsePaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPageResponsePaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPageResponsePaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPageResponsePaymentResponse(val *ListPageResponsePaymentResponse) *NullableListPageResponsePaymentResponse {
	return &NullableListPageResponsePaymentResponse{value: val, isSet: true}
}

func (v NullableListPageResponsePaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPageResponsePaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
