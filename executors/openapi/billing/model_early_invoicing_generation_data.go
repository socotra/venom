/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the EarlyInvoicingGenerationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EarlyInvoicingGenerationData{}

// EarlyInvoicingGenerationData struct for EarlyInvoicingGenerationData
type EarlyInvoicingGenerationData struct {
	InvoicingData
	AccountLocator           string     `json:"accountLocator"`
	InstallmentsToBeInvoiced []string   `json:"installmentsToBeInvoiced"`
	InvoiceDueTime           *time.Time `json:"invoiceDueTime,omitempty"`
	InvoiceThroughTime       *time.Time `json:"invoiceThroughTime,omitempty"`
	Timezone                 *string    `json:"timezone,omitempty"`
}

type _EarlyInvoicingGenerationData EarlyInvoicingGenerationData

// NewEarlyInvoicingGenerationData instantiates a new EarlyInvoicingGenerationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEarlyInvoicingGenerationData(accountLocator string, installmentsToBeInvoiced []string, invoicingType string) *EarlyInvoicingGenerationData {
	this := EarlyInvoicingGenerationData{}
	this.InvoicingType = invoicingType
	this.AccountLocator = accountLocator
	this.InstallmentsToBeInvoiced = installmentsToBeInvoiced
	return &this
}

// NewEarlyInvoicingGenerationDataWithDefaults instantiates a new EarlyInvoicingGenerationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEarlyInvoicingGenerationDataWithDefaults() *EarlyInvoicingGenerationData {
	this := EarlyInvoicingGenerationData{}
	return &this
}

// GetAccountLocator returns the AccountLocator field value
func (o *EarlyInvoicingGenerationData) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingGenerationData) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *EarlyInvoicingGenerationData) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetInstallmentsToBeInvoiced returns the InstallmentsToBeInvoiced field value
func (o *EarlyInvoicingGenerationData) GetInstallmentsToBeInvoiced() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InstallmentsToBeInvoiced
}

// GetInstallmentsToBeInvoicedOk returns a tuple with the InstallmentsToBeInvoiced field value
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingGenerationData) GetInstallmentsToBeInvoicedOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstallmentsToBeInvoiced, true
}

// SetInstallmentsToBeInvoiced sets field value
func (o *EarlyInvoicingGenerationData) SetInstallmentsToBeInvoiced(v []string) {
	o.InstallmentsToBeInvoiced = v
}

// GetInvoiceDueTime returns the InvoiceDueTime field value if set, zero value otherwise.
func (o *EarlyInvoicingGenerationData) GetInvoiceDueTime() time.Time {
	if o == nil || IsNil(o.InvoiceDueTime) {
		var ret time.Time
		return ret
	}
	return *o.InvoiceDueTime
}

// GetInvoiceDueTimeOk returns a tuple with the InvoiceDueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingGenerationData) GetInvoiceDueTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InvoiceDueTime) {
		return nil, false
	}
	return o.InvoiceDueTime, true
}

// HasInvoiceDueTime returns a boolean if a field has been set.
func (o *EarlyInvoicingGenerationData) HasInvoiceDueTime() bool {
	if o != nil && !IsNil(o.InvoiceDueTime) {
		return true
	}

	return false
}

// SetInvoiceDueTime gets a reference to the given time.Time and assigns it to the InvoiceDueTime field.
func (o *EarlyInvoicingGenerationData) SetInvoiceDueTime(v time.Time) {
	o.InvoiceDueTime = &v
}

// GetInvoiceThroughTime returns the InvoiceThroughTime field value if set, zero value otherwise.
func (o *EarlyInvoicingGenerationData) GetInvoiceThroughTime() time.Time {
	if o == nil || IsNil(o.InvoiceThroughTime) {
		var ret time.Time
		return ret
	}
	return *o.InvoiceThroughTime
}

// GetInvoiceThroughTimeOk returns a tuple with the InvoiceThroughTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingGenerationData) GetInvoiceThroughTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InvoiceThroughTime) {
		return nil, false
	}
	return o.InvoiceThroughTime, true
}

// HasInvoiceThroughTime returns a boolean if a field has been set.
func (o *EarlyInvoicingGenerationData) HasInvoiceThroughTime() bool {
	if o != nil && !IsNil(o.InvoiceThroughTime) {
		return true
	}

	return false
}

// SetInvoiceThroughTime gets a reference to the given time.Time and assigns it to the InvoiceThroughTime field.
func (o *EarlyInvoicingGenerationData) SetInvoiceThroughTime(v time.Time) {
	o.InvoiceThroughTime = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *EarlyInvoicingGenerationData) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyInvoicingGenerationData) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *EarlyInvoicingGenerationData) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *EarlyInvoicingGenerationData) SetTimezone(v string) {
	o.Timezone = &v
}

func (o EarlyInvoicingGenerationData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EarlyInvoicingGenerationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountLocator"] = o.AccountLocator
	toSerialize["installmentsToBeInvoiced"] = o.InstallmentsToBeInvoiced
	if !IsNil(o.InvoiceDueTime) {
		toSerialize["invoiceDueTime"] = o.InvoiceDueTime
	}
	if !IsNil(o.InvoiceThroughTime) {
		toSerialize["invoiceThroughTime"] = o.InvoiceThroughTime
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	return toSerialize, nil
}

func (o *EarlyInvoicingGenerationData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountLocator",
		"installmentsToBeInvoiced",
		"invoicingType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEarlyInvoicingGenerationData := _EarlyInvoicingGenerationData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEarlyInvoicingGenerationData)

	if err != nil {
		return err
	}

	*o = EarlyInvoicingGenerationData(varEarlyInvoicingGenerationData)

	return err
}

type NullableEarlyInvoicingGenerationData struct {
	value *EarlyInvoicingGenerationData
	isSet bool
}

func (v NullableEarlyInvoicingGenerationData) Get() *EarlyInvoicingGenerationData {
	return v.value
}

func (v *NullableEarlyInvoicingGenerationData) Set(val *EarlyInvoicingGenerationData) {
	v.value = val
	v.isSet = true
}

func (v NullableEarlyInvoicingGenerationData) IsSet() bool {
	return v.isSet
}

func (v *NullableEarlyInvoicingGenerationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEarlyInvoicingGenerationData(val *EarlyInvoicingGenerationData) *NullableEarlyInvoicingGenerationData {
	return &NullableEarlyInvoicingGenerationData{value: val, isSet: true}
}

func (v NullableEarlyInvoicingGenerationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEarlyInvoicingGenerationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
