/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ExcludedDebitsAmountResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExcludedDebitsAmountResult{}

// ExcludedDebitsAmountResult struct for ExcludedDebitsAmountResult
type ExcludedDebitsAmountResult struct {
	CalculationType           string          `json:"calculationType"`
	EntitiesUsedInCalculation []ExcludedDebit `json:"entitiesUsedInCalculation"`
	Currency                  string          `json:"currency"`
	AmountToExclude           float32         `json:"amountToExclude"`
}

type _ExcludedDebitsAmountResult ExcludedDebitsAmountResult

// NewExcludedDebitsAmountResult instantiates a new ExcludedDebitsAmountResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExcludedDebitsAmountResult(calculationType string, entitiesUsedInCalculation []ExcludedDebit, currency string, amountToExclude float32) *ExcludedDebitsAmountResult {
	this := ExcludedDebitsAmountResult{}
	this.CalculationType = calculationType
	this.EntitiesUsedInCalculation = entitiesUsedInCalculation
	this.Currency = currency
	this.AmountToExclude = amountToExclude
	return &this
}

// NewExcludedDebitsAmountResultWithDefaults instantiates a new ExcludedDebitsAmountResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExcludedDebitsAmountResultWithDefaults() *ExcludedDebitsAmountResult {
	this := ExcludedDebitsAmountResult{}
	return &this
}

// GetCalculationType returns the CalculationType field value
func (o *ExcludedDebitsAmountResult) GetCalculationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CalculationType
}

// GetCalculationTypeOk returns a tuple with the CalculationType field value
// and a boolean to check if the value has been set.
func (o *ExcludedDebitsAmountResult) GetCalculationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CalculationType, true
}

// SetCalculationType sets field value
func (o *ExcludedDebitsAmountResult) SetCalculationType(v string) {
	o.CalculationType = v
}

// GetEntitiesUsedInCalculation returns the EntitiesUsedInCalculation field value
func (o *ExcludedDebitsAmountResult) GetEntitiesUsedInCalculation() []ExcludedDebit {
	if o == nil {
		var ret []ExcludedDebit
		return ret
	}

	return o.EntitiesUsedInCalculation
}

// GetEntitiesUsedInCalculationOk returns a tuple with the EntitiesUsedInCalculation field value
// and a boolean to check if the value has been set.
func (o *ExcludedDebitsAmountResult) GetEntitiesUsedInCalculationOk() ([]ExcludedDebit, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntitiesUsedInCalculation, true
}

// SetEntitiesUsedInCalculation sets field value
func (o *ExcludedDebitsAmountResult) SetEntitiesUsedInCalculation(v []ExcludedDebit) {
	o.EntitiesUsedInCalculation = v
}

// GetCurrency returns the Currency field value
func (o *ExcludedDebitsAmountResult) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *ExcludedDebitsAmountResult) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ExcludedDebitsAmountResult) SetCurrency(v string) {
	o.Currency = v
}

// GetAmountToExclude returns the AmountToExclude field value
func (o *ExcludedDebitsAmountResult) GetAmountToExclude() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AmountToExclude
}

// GetAmountToExcludeOk returns a tuple with the AmountToExclude field value
// and a boolean to check if the value has been set.
func (o *ExcludedDebitsAmountResult) GetAmountToExcludeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountToExclude, true
}

// SetAmountToExclude sets field value
func (o *ExcludedDebitsAmountResult) SetAmountToExclude(v float32) {
	o.AmountToExclude = v
}

func (o ExcludedDebitsAmountResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExcludedDebitsAmountResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["calculationType"] = o.CalculationType
	toSerialize["entitiesUsedInCalculation"] = o.EntitiesUsedInCalculation
	toSerialize["currency"] = o.Currency
	toSerialize["amountToExclude"] = o.AmountToExclude
	return toSerialize, nil
}

func (o *ExcludedDebitsAmountResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"calculationType",
		"entitiesUsedInCalculation",
		"currency",
		"amountToExclude",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExcludedDebitsAmountResult := _ExcludedDebitsAmountResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExcludedDebitsAmountResult)

	if err != nil {
		return err
	}

	*o = ExcludedDebitsAmountResult(varExcludedDebitsAmountResult)

	return err
}

type NullableExcludedDebitsAmountResult struct {
	value *ExcludedDebitsAmountResult
	isSet bool
}

func (v NullableExcludedDebitsAmountResult) Get() *ExcludedDebitsAmountResult {
	return v.value
}

func (v *NullableExcludedDebitsAmountResult) Set(val *ExcludedDebitsAmountResult) {
	v.value = val
	v.isSet = true
}

func (v NullableExcludedDebitsAmountResult) IsSet() bool {
	return v.isSet
}

func (v *NullableExcludedDebitsAmountResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExcludedDebitsAmountResult(val *ExcludedDebitsAmountResult) *NullableExcludedDebitsAmountResult {
	return &NullableExcludedDebitsAmountResult{value: val, isSet: true}
}

func (v NullableExcludedDebitsAmountResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExcludedDebitsAmountResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
