/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccountExcessHandlingResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountExcessHandlingResult{}

// AccountExcessHandlingResult struct for AccountExcessHandlingResult
type AccountExcessHandlingResult struct {
	AccountLocator             string                                `json:"accountLocator"`
	Currency                   string                                `json:"currency"`
	AccountCreditBalance       float32                               `json:"accountCreditBalance"`
	ExcludedDebitsAmountResult ExcludedDebitsAmountResult            `json:"excludedDebitsAmountResult"`
	ThresholdUsed              *float32                              `json:"thresholdUsed,omitempty"`
	CreateDisbursementResult   *ExcessCreditCreateDisbursementResult `json:"createDisbursementResult,omitempty"`
	Errors                     []string                              `json:"errors"`
}

type _AccountExcessHandlingResult AccountExcessHandlingResult

// NewAccountExcessHandlingResult instantiates a new AccountExcessHandlingResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountExcessHandlingResult(accountLocator string, currency string, accountCreditBalance float32, excludedDebitsAmountResult ExcludedDebitsAmountResult, errors []string) *AccountExcessHandlingResult {
	this := AccountExcessHandlingResult{}
	this.AccountLocator = accountLocator
	this.Currency = currency
	this.AccountCreditBalance = accountCreditBalance
	this.ExcludedDebitsAmountResult = excludedDebitsAmountResult
	this.Errors = errors
	return &this
}

// NewAccountExcessHandlingResultWithDefaults instantiates a new AccountExcessHandlingResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountExcessHandlingResultWithDefaults() *AccountExcessHandlingResult {
	this := AccountExcessHandlingResult{}
	return &this
}

// GetAccountLocator returns the AccountLocator field value
func (o *AccountExcessHandlingResult) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *AccountExcessHandlingResult) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *AccountExcessHandlingResult) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetCurrency returns the Currency field value
func (o *AccountExcessHandlingResult) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *AccountExcessHandlingResult) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *AccountExcessHandlingResult) SetCurrency(v string) {
	o.Currency = v
}

// GetAccountCreditBalance returns the AccountCreditBalance field value
func (o *AccountExcessHandlingResult) GetAccountCreditBalance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AccountCreditBalance
}

// GetAccountCreditBalanceOk returns a tuple with the AccountCreditBalance field value
// and a boolean to check if the value has been set.
func (o *AccountExcessHandlingResult) GetAccountCreditBalanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountCreditBalance, true
}

// SetAccountCreditBalance sets field value
func (o *AccountExcessHandlingResult) SetAccountCreditBalance(v float32) {
	o.AccountCreditBalance = v
}

// GetExcludedDebitsAmountResult returns the ExcludedDebitsAmountResult field value
func (o *AccountExcessHandlingResult) GetExcludedDebitsAmountResult() ExcludedDebitsAmountResult {
	if o == nil {
		var ret ExcludedDebitsAmountResult
		return ret
	}

	return o.ExcludedDebitsAmountResult
}

// GetExcludedDebitsAmountResultOk returns a tuple with the ExcludedDebitsAmountResult field value
// and a boolean to check if the value has been set.
func (o *AccountExcessHandlingResult) GetExcludedDebitsAmountResultOk() (*ExcludedDebitsAmountResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExcludedDebitsAmountResult, true
}

// SetExcludedDebitsAmountResult sets field value
func (o *AccountExcessHandlingResult) SetExcludedDebitsAmountResult(v ExcludedDebitsAmountResult) {
	o.ExcludedDebitsAmountResult = v
}

// GetThresholdUsed returns the ThresholdUsed field value if set, zero value otherwise.
func (o *AccountExcessHandlingResult) GetThresholdUsed() float32 {
	if o == nil || IsNil(o.ThresholdUsed) {
		var ret float32
		return ret
	}
	return *o.ThresholdUsed
}

// GetThresholdUsedOk returns a tuple with the ThresholdUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExcessHandlingResult) GetThresholdUsedOk() (*float32, bool) {
	if o == nil || IsNil(o.ThresholdUsed) {
		return nil, false
	}
	return o.ThresholdUsed, true
}

// HasThresholdUsed returns a boolean if a field has been set.
func (o *AccountExcessHandlingResult) HasThresholdUsed() bool {
	if o != nil && !IsNil(o.ThresholdUsed) {
		return true
	}

	return false
}

// SetThresholdUsed gets a reference to the given float32 and assigns it to the ThresholdUsed field.
func (o *AccountExcessHandlingResult) SetThresholdUsed(v float32) {
	o.ThresholdUsed = &v
}

// GetCreateDisbursementResult returns the CreateDisbursementResult field value if set, zero value otherwise.
func (o *AccountExcessHandlingResult) GetCreateDisbursementResult() ExcessCreditCreateDisbursementResult {
	if o == nil || IsNil(o.CreateDisbursementResult) {
		var ret ExcessCreditCreateDisbursementResult
		return ret
	}
	return *o.CreateDisbursementResult
}

// GetCreateDisbursementResultOk returns a tuple with the CreateDisbursementResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountExcessHandlingResult) GetCreateDisbursementResultOk() (*ExcessCreditCreateDisbursementResult, bool) {
	if o == nil || IsNil(o.CreateDisbursementResult) {
		return nil, false
	}
	return o.CreateDisbursementResult, true
}

// HasCreateDisbursementResult returns a boolean if a field has been set.
func (o *AccountExcessHandlingResult) HasCreateDisbursementResult() bool {
	if o != nil && !IsNil(o.CreateDisbursementResult) {
		return true
	}

	return false
}

// SetCreateDisbursementResult gets a reference to the given ExcessCreditCreateDisbursementResult and assigns it to the CreateDisbursementResult field.
func (o *AccountExcessHandlingResult) SetCreateDisbursementResult(v ExcessCreditCreateDisbursementResult) {
	o.CreateDisbursementResult = &v
}

// GetErrors returns the Errors field value
func (o *AccountExcessHandlingResult) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *AccountExcessHandlingResult) GetErrorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *AccountExcessHandlingResult) SetErrors(v []string) {
	o.Errors = v
}

func (o AccountExcessHandlingResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountExcessHandlingResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountLocator"] = o.AccountLocator
	toSerialize["currency"] = o.Currency
	toSerialize["accountCreditBalance"] = o.AccountCreditBalance
	toSerialize["excludedDebitsAmountResult"] = o.ExcludedDebitsAmountResult
	if !IsNil(o.ThresholdUsed) {
		toSerialize["thresholdUsed"] = o.ThresholdUsed
	}
	if !IsNil(o.CreateDisbursementResult) {
		toSerialize["createDisbursementResult"] = o.CreateDisbursementResult
	}
	toSerialize["errors"] = o.Errors
	return toSerialize, nil
}

func (o *AccountExcessHandlingResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountLocator",
		"currency",
		"accountCreditBalance",
		"excludedDebitsAmountResult",
		"errors",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountExcessHandlingResult := _AccountExcessHandlingResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountExcessHandlingResult)

	if err != nil {
		return err
	}

	*o = AccountExcessHandlingResult(varAccountExcessHandlingResult)

	return err
}

type NullableAccountExcessHandlingResult struct {
	value *AccountExcessHandlingResult
	isSet bool
}

func (v NullableAccountExcessHandlingResult) Get() *AccountExcessHandlingResult {
	return v.value
}

func (v *NullableAccountExcessHandlingResult) Set(val *AccountExcessHandlingResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountExcessHandlingResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountExcessHandlingResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountExcessHandlingResult(val *AccountExcessHandlingResult) *NullableAccountExcessHandlingResult {
	return &NullableAccountExcessHandlingResult{value: val, isSet: true}
}

func (v NullableAccountExcessHandlingResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountExcessHandlingResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
