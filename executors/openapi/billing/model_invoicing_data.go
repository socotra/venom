/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the InvoicingData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoicingData{}

// InvoicingData struct for InvoicingData
type InvoicingData struct {
	InvoicingType string `json:"invoicingType"`
}

type _InvoicingData InvoicingData

// NewInvoicingData instantiates a new InvoicingData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoicingData(invoicingType string) *InvoicingData {
	this := InvoicingData{}
	this.InvoicingType = invoicingType
	return &this
}

// NewInvoicingDataWithDefaults instantiates a new InvoicingData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoicingDataWithDefaults() *InvoicingData {
	this := InvoicingData{}
	return &this
}

// GetInvoicingType returns the InvoicingType field value
func (o *InvoicingData) GetInvoicingType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoicingType
}

// GetInvoicingTypeOk returns a tuple with the InvoicingType field value
// and a boolean to check if the value has been set.
func (o *InvoicingData) GetInvoicingTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoicingType, true
}

// SetInvoicingType sets field value
func (o *InvoicingData) SetInvoicingType(v string) {
	o.InvoicingType = v
}

func (o InvoicingData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoicingData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["invoicingType"] = o.InvoicingType
	return toSerialize, nil
}

func (o *InvoicingData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"invoicingType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoicingData := _InvoicingData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoicingData)

	if err != nil {
		return err
	}

	*o = InvoicingData(varInvoicingData)

	return err
}

type NullableInvoicingData struct {
	value *InvoicingData
	isSet bool
}

func (v NullableInvoicingData) Get() *InvoicingData {
	return v.value
}

func (v *NullableInvoicingData) Set(val *InvoicingData) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoicingData) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoicingData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoicingData(val *InvoicingData) *NullableInvoicingData {
	return &NullableInvoicingData{value: val, isSet: true}
}

func (v NullableInvoicingData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoicingData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
