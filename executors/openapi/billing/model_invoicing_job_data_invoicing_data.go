/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// InvoicingJobDataInvoicingData - struct for InvoicingJobDataInvoicingData
type InvoicingJobDataInvoicingData struct {
	EarlyInvoicingGenerationData *EarlyInvoicingGenerationData
	ImmediateInvoicingData       *ImmediateInvoicingData
}

// EarlyInvoicingGenerationDataAsInvoicingJobDataInvoicingData is a convenience function that returns EarlyInvoicingGenerationData wrapped in InvoicingJobDataInvoicingData
func EarlyInvoicingGenerationDataAsInvoicingJobDataInvoicingData(v *EarlyInvoicingGenerationData) InvoicingJobDataInvoicingData {
	return InvoicingJobDataInvoicingData{
		EarlyInvoicingGenerationData: v,
	}
}

// ImmediateInvoicingDataAsInvoicingJobDataInvoicingData is a convenience function that returns ImmediateInvoicingData wrapped in InvoicingJobDataInvoicingData
func ImmediateInvoicingDataAsInvoicingJobDataInvoicingData(v *ImmediateInvoicingData) InvoicingJobDataInvoicingData {
	return InvoicingJobDataInvoicingData{
		ImmediateInvoicingData: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *InvoicingJobDataInvoicingData) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into EarlyInvoicingGenerationData
	err = newStrictDecoder(data).Decode(&dst.EarlyInvoicingGenerationData)
	if err == nil {
		jsonEarlyInvoicingGenerationData, _ := json.Marshal(dst.EarlyInvoicingGenerationData)
		if string(jsonEarlyInvoicingGenerationData) == "{}" { // empty struct
			dst.EarlyInvoicingGenerationData = nil
		} else {
			if err = validator.Validate(dst.EarlyInvoicingGenerationData); err != nil {
				dst.EarlyInvoicingGenerationData = nil
			} else {
				match++
			}
		}
	} else {
		dst.EarlyInvoicingGenerationData = nil
	}

	// try to unmarshal data into ImmediateInvoicingData
	err = newStrictDecoder(data).Decode(&dst.ImmediateInvoicingData)
	if err == nil {
		jsonImmediateInvoicingData, _ := json.Marshal(dst.ImmediateInvoicingData)
		if string(jsonImmediateInvoicingData) == "{}" { // empty struct
			dst.ImmediateInvoicingData = nil
		} else {
			if err = validator.Validate(dst.ImmediateInvoicingData); err != nil {
				dst.ImmediateInvoicingData = nil
			} else {
				match++
			}
		}
	} else {
		dst.ImmediateInvoicingData = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.EarlyInvoicingGenerationData = nil
		dst.ImmediateInvoicingData = nil

		return fmt.Errorf("data matches more than one schema in oneOf(InvoicingJobDataInvoicingData)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(InvoicingJobDataInvoicingData)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src InvoicingJobDataInvoicingData) MarshalJSON() ([]byte, error) {
	if src.EarlyInvoicingGenerationData != nil {
		return json.Marshal(&src.EarlyInvoicingGenerationData)
	}

	if src.ImmediateInvoicingData != nil {
		return json.Marshal(&src.ImmediateInvoicingData)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *InvoicingJobDataInvoicingData) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.EarlyInvoicingGenerationData != nil {
		return obj.EarlyInvoicingGenerationData
	}

	if obj.ImmediateInvoicingData != nil {
		return obj.ImmediateInvoicingData
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj InvoicingJobDataInvoicingData) GetActualInstanceValue() interface{} {
	if obj.EarlyInvoicingGenerationData != nil {
		return *obj.EarlyInvoicingGenerationData
	}

	if obj.ImmediateInvoicingData != nil {
		return *obj.ImmediateInvoicingData
	}

	// all schemas are nil
	return nil
}

type NullableInvoicingJobDataInvoicingData struct {
	value *InvoicingJobDataInvoicingData
	isSet bool
}

func (v NullableInvoicingJobDataInvoicingData) Get() *InvoicingJobDataInvoicingData {
	return v.value
}

func (v *NullableInvoicingJobDataInvoicingData) Set(val *InvoicingJobDataInvoicingData) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoicingJobDataInvoicingData) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoicingJobDataInvoicingData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoicingJobDataInvoicingData(val *InvoicingJobDataInvoicingData) *NullableInvoicingJobDataInvoicingData {
	return &NullableInvoicingJobDataInvoicingData{value: val, isSet: true}
}

func (v NullableInvoicingJobDataInvoicingData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoicingJobDataInvoicingData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
