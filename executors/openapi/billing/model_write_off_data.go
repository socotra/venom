/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WriteOffData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WriteOffData{}

// WriteOffData struct for WriteOffData
type WriteOffData struct {
	WriteOffLocator string               `json:"writeOffLocator"`
	PolicyLocators  ListPageResponseULID `json:"policyLocators"`
}

type _WriteOffData WriteOffData

// NewWriteOffData instantiates a new WriteOffData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWriteOffData(writeOffLocator string, policyLocators ListPageResponseULID) *WriteOffData {
	this := WriteOffData{}
	this.WriteOffLocator = writeOffLocator
	this.PolicyLocators = policyLocators
	return &this
}

// NewWriteOffDataWithDefaults instantiates a new WriteOffData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteOffDataWithDefaults() *WriteOffData {
	this := WriteOffData{}
	return &this
}

// GetWriteOffLocator returns the WriteOffLocator field value
func (o *WriteOffData) GetWriteOffLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WriteOffLocator
}

// GetWriteOffLocatorOk returns a tuple with the WriteOffLocator field value
// and a boolean to check if the value has been set.
func (o *WriteOffData) GetWriteOffLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WriteOffLocator, true
}

// SetWriteOffLocator sets field value
func (o *WriteOffData) SetWriteOffLocator(v string) {
	o.WriteOffLocator = v
}

// GetPolicyLocators returns the PolicyLocators field value
func (o *WriteOffData) GetPolicyLocators() ListPageResponseULID {
	if o == nil {
		var ret ListPageResponseULID
		return ret
	}

	return o.PolicyLocators
}

// GetPolicyLocatorsOk returns a tuple with the PolicyLocators field value
// and a boolean to check if the value has been set.
func (o *WriteOffData) GetPolicyLocatorsOk() (*ListPageResponseULID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyLocators, true
}

// SetPolicyLocators sets field value
func (o *WriteOffData) SetPolicyLocators(v ListPageResponseULID) {
	o.PolicyLocators = v
}

func (o WriteOffData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WriteOffData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["writeOffLocator"] = o.WriteOffLocator
	toSerialize["policyLocators"] = o.PolicyLocators
	return toSerialize, nil
}

func (o *WriteOffData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"writeOffLocator",
		"policyLocators",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWriteOffData := _WriteOffData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWriteOffData)

	if err != nil {
		return err
	}

	*o = WriteOffData(varWriteOffData)

	return err
}

type NullableWriteOffData struct {
	value *WriteOffData
	isSet bool
}

func (v NullableWriteOffData) Get() *WriteOffData {
	return v.value
}

func (v *NullableWriteOffData) Set(val *WriteOffData) {
	v.value = val
	v.isSet = true
}

func (v NullableWriteOffData) IsSet() bool {
	return v.isSet
}

func (v *NullableWriteOffData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWriteOffData(val *WriteOffData) *NullableWriteOffData {
	return &NullableWriteOffData{value: val, isSet: true}
}

func (v NullableWriteOffData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWriteOffData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
