/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
)

// checks if the WriteOffEvents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WriteOffEvents{}

// WriteOffEvents struct for WriteOffEvents
type WriteOffEvents struct {
	BillingWriteoffReverse    *WriteOffData `json:"billing.writeoff.reverse,omitempty"`
	BillingWriteoffCreate     *WriteOffData `json:"billing.writeoff.create,omitempty"`
	BillingWriteoffDistribute *WriteOffData `json:"billing.writeoff.distribute,omitempty"`
}

// NewWriteOffEvents instantiates a new WriteOffEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWriteOffEvents() *WriteOffEvents {
	this := WriteOffEvents{}
	return &this
}

// NewWriteOffEventsWithDefaults instantiates a new WriteOffEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWriteOffEventsWithDefaults() *WriteOffEvents {
	this := WriteOffEvents{}
	return &this
}

// GetBillingWriteoffReverse returns the BillingWriteoffReverse field value if set, zero value otherwise.
func (o *WriteOffEvents) GetBillingWriteoffReverse() WriteOffData {
	if o == nil || IsNil(o.BillingWriteoffReverse) {
		var ret WriteOffData
		return ret
	}
	return *o.BillingWriteoffReverse
}

// GetBillingWriteoffReverseOk returns a tuple with the BillingWriteoffReverse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WriteOffEvents) GetBillingWriteoffReverseOk() (*WriteOffData, bool) {
	if o == nil || IsNil(o.BillingWriteoffReverse) {
		return nil, false
	}
	return o.BillingWriteoffReverse, true
}

// HasBillingWriteoffReverse returns a boolean if a field has been set.
func (o *WriteOffEvents) HasBillingWriteoffReverse() bool {
	if o != nil && !IsNil(o.BillingWriteoffReverse) {
		return true
	}

	return false
}

// SetBillingWriteoffReverse gets a reference to the given WriteOffData and assigns it to the BillingWriteoffReverse field.
func (o *WriteOffEvents) SetBillingWriteoffReverse(v WriteOffData) {
	o.BillingWriteoffReverse = &v
}

// GetBillingWriteoffCreate returns the BillingWriteoffCreate field value if set, zero value otherwise.
func (o *WriteOffEvents) GetBillingWriteoffCreate() WriteOffData {
	if o == nil || IsNil(o.BillingWriteoffCreate) {
		var ret WriteOffData
		return ret
	}
	return *o.BillingWriteoffCreate
}

// GetBillingWriteoffCreateOk returns a tuple with the BillingWriteoffCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WriteOffEvents) GetBillingWriteoffCreateOk() (*WriteOffData, bool) {
	if o == nil || IsNil(o.BillingWriteoffCreate) {
		return nil, false
	}
	return o.BillingWriteoffCreate, true
}

// HasBillingWriteoffCreate returns a boolean if a field has been set.
func (o *WriteOffEvents) HasBillingWriteoffCreate() bool {
	if o != nil && !IsNil(o.BillingWriteoffCreate) {
		return true
	}

	return false
}

// SetBillingWriteoffCreate gets a reference to the given WriteOffData and assigns it to the BillingWriteoffCreate field.
func (o *WriteOffEvents) SetBillingWriteoffCreate(v WriteOffData) {
	o.BillingWriteoffCreate = &v
}

// GetBillingWriteoffDistribute returns the BillingWriteoffDistribute field value if set, zero value otherwise.
func (o *WriteOffEvents) GetBillingWriteoffDistribute() WriteOffData {
	if o == nil || IsNil(o.BillingWriteoffDistribute) {
		var ret WriteOffData
		return ret
	}
	return *o.BillingWriteoffDistribute
}

// GetBillingWriteoffDistributeOk returns a tuple with the BillingWriteoffDistribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WriteOffEvents) GetBillingWriteoffDistributeOk() (*WriteOffData, bool) {
	if o == nil || IsNil(o.BillingWriteoffDistribute) {
		return nil, false
	}
	return o.BillingWriteoffDistribute, true
}

// HasBillingWriteoffDistribute returns a boolean if a field has been set.
func (o *WriteOffEvents) HasBillingWriteoffDistribute() bool {
	if o != nil && !IsNil(o.BillingWriteoffDistribute) {
		return true
	}

	return false
}

// SetBillingWriteoffDistribute gets a reference to the given WriteOffData and assigns it to the BillingWriteoffDistribute field.
func (o *WriteOffEvents) SetBillingWriteoffDistribute(v WriteOffData) {
	o.BillingWriteoffDistribute = &v
}

func (o WriteOffEvents) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WriteOffEvents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingWriteoffReverse) {
		toSerialize["billing.writeoff.reverse"] = o.BillingWriteoffReverse
	}
	if !IsNil(o.BillingWriteoffCreate) {
		toSerialize["billing.writeoff.create"] = o.BillingWriteoffCreate
	}
	if !IsNil(o.BillingWriteoffDistribute) {
		toSerialize["billing.writeoff.distribute"] = o.BillingWriteoffDistribute
	}
	return toSerialize, nil
}

type NullableWriteOffEvents struct {
	value *WriteOffEvents
	isSet bool
}

func (v NullableWriteOffEvents) Get() *WriteOffEvents {
	return v.value
}

func (v *NullableWriteOffEvents) Set(val *WriteOffEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableWriteOffEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableWriteOffEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWriteOffEvents(val *WriteOffEvents) *NullableWriteOffEvents {
	return &NullableWriteOffEvents{value: val, isSet: true}
}

func (v NullableWriteOffEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWriteOffEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
