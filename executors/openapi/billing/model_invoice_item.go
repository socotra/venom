/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the InvoiceItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceItem{}

// InvoiceItem struct for InvoiceItem
type InvoiceItem struct {
	Locator                 string     `json:"locator"`
	ChargeType              string     `json:"chargeType"`
	ChargeCategory          string     `json:"chargeCategory"`
	Amount                  float32    `json:"amount"`
	RemainingAmount         *float32   `json:"remainingAmount,omitempty"`
	SettlementTime          *time.Time `json:"settlementTime,omitempty"`
	InvoiceLocator          string     `json:"invoiceLocator"`
	InstallmentItemLocators []string   `json:"installmentItemLocators"`
	Timezone                string     `json:"timezone"`
	QuoteLocator            *string    `json:"quoteLocator,omitempty"`
	PolicyLocator           *string    `json:"policyLocator,omitempty"`
	TransactionLocator      *string    `json:"transactionLocator,omitempty"`
	ElementStaticLocator    *string    `json:"elementStaticLocator,omitempty"`
	ElementType             *string    `json:"elementType,omitempty"`
	TransactionLocators     []string   `json:"transactionLocators"`
}

type _InvoiceItem InvoiceItem

// NewInvoiceItem instantiates a new InvoiceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceItem(locator string, chargeType string, chargeCategory string, amount float32, invoiceLocator string, installmentItemLocators []string, timezone string, transactionLocators []string) *InvoiceItem {
	this := InvoiceItem{}
	this.Locator = locator
	this.ChargeType = chargeType
	this.ChargeCategory = chargeCategory
	this.Amount = amount
	this.InvoiceLocator = invoiceLocator
	this.InstallmentItemLocators = installmentItemLocators
	this.Timezone = timezone
	this.TransactionLocators = transactionLocators
	return &this
}

// NewInvoiceItemWithDefaults instantiates a new InvoiceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceItemWithDefaults() *InvoiceItem {
	this := InvoiceItem{}
	return &this
}

// GetLocator returns the Locator field value
func (o *InvoiceItem) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *InvoiceItem) SetLocator(v string) {
	o.Locator = v
}

// GetChargeType returns the ChargeType field value
func (o *InvoiceItem) GetChargeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetChargeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeType, true
}

// SetChargeType sets field value
func (o *InvoiceItem) SetChargeType(v string) {
	o.ChargeType = v
}

// GetChargeCategory returns the ChargeCategory field value
func (o *InvoiceItem) GetChargeCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeCategory
}

// GetChargeCategoryOk returns a tuple with the ChargeCategory field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetChargeCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeCategory, true
}

// SetChargeCategory sets field value
func (o *InvoiceItem) SetChargeCategory(v string) {
	o.ChargeCategory = v
}

// GetAmount returns the Amount field value
func (o *InvoiceItem) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InvoiceItem) SetAmount(v float32) {
	o.Amount = v
}

// GetRemainingAmount returns the RemainingAmount field value if set, zero value otherwise.
func (o *InvoiceItem) GetRemainingAmount() float32 {
	if o == nil || IsNil(o.RemainingAmount) {
		var ret float32
		return ret
	}
	return *o.RemainingAmount
}

// GetRemainingAmountOk returns a tuple with the RemainingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetRemainingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.RemainingAmount) {
		return nil, false
	}
	return o.RemainingAmount, true
}

// HasRemainingAmount returns a boolean if a field has been set.
func (o *InvoiceItem) HasRemainingAmount() bool {
	if o != nil && !IsNil(o.RemainingAmount) {
		return true
	}

	return false
}

// SetRemainingAmount gets a reference to the given float32 and assigns it to the RemainingAmount field.
func (o *InvoiceItem) SetRemainingAmount(v float32) {
	o.RemainingAmount = &v
}

// GetSettlementTime returns the SettlementTime field value if set, zero value otherwise.
func (o *InvoiceItem) GetSettlementTime() time.Time {
	if o == nil || IsNil(o.SettlementTime) {
		var ret time.Time
		return ret
	}
	return *o.SettlementTime
}

// GetSettlementTimeOk returns a tuple with the SettlementTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetSettlementTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SettlementTime) {
		return nil, false
	}
	return o.SettlementTime, true
}

// HasSettlementTime returns a boolean if a field has been set.
func (o *InvoiceItem) HasSettlementTime() bool {
	if o != nil && !IsNil(o.SettlementTime) {
		return true
	}

	return false
}

// SetSettlementTime gets a reference to the given time.Time and assigns it to the SettlementTime field.
func (o *InvoiceItem) SetSettlementTime(v time.Time) {
	o.SettlementTime = &v
}

// GetInvoiceLocator returns the InvoiceLocator field value
func (o *InvoiceItem) GetInvoiceLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceLocator
}

// GetInvoiceLocatorOk returns a tuple with the InvoiceLocator field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetInvoiceLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceLocator, true
}

// SetInvoiceLocator sets field value
func (o *InvoiceItem) SetInvoiceLocator(v string) {
	o.InvoiceLocator = v
}

// GetInstallmentItemLocators returns the InstallmentItemLocators field value
func (o *InvoiceItem) GetInstallmentItemLocators() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InstallmentItemLocators
}

// GetInstallmentItemLocatorsOk returns a tuple with the InstallmentItemLocators field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetInstallmentItemLocatorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstallmentItemLocators, true
}

// SetInstallmentItemLocators sets field value
func (o *InvoiceItem) SetInstallmentItemLocators(v []string) {
	o.InstallmentItemLocators = v
}

// GetTimezone returns the Timezone field value
func (o *InvoiceItem) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *InvoiceItem) SetTimezone(v string) {
	o.Timezone = v
}

// GetQuoteLocator returns the QuoteLocator field value if set, zero value otherwise.
func (o *InvoiceItem) GetQuoteLocator() string {
	if o == nil || IsNil(o.QuoteLocator) {
		var ret string
		return ret
	}
	return *o.QuoteLocator
}

// GetQuoteLocatorOk returns a tuple with the QuoteLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetQuoteLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteLocator) {
		return nil, false
	}
	return o.QuoteLocator, true
}

// HasQuoteLocator returns a boolean if a field has been set.
func (o *InvoiceItem) HasQuoteLocator() bool {
	if o != nil && !IsNil(o.QuoteLocator) {
		return true
	}

	return false
}

// SetQuoteLocator gets a reference to the given string and assigns it to the QuoteLocator field.
func (o *InvoiceItem) SetQuoteLocator(v string) {
	o.QuoteLocator = &v
}

// GetPolicyLocator returns the PolicyLocator field value if set, zero value otherwise.
func (o *InvoiceItem) GetPolicyLocator() string {
	if o == nil || IsNil(o.PolicyLocator) {
		var ret string
		return ret
	}
	return *o.PolicyLocator
}

// GetPolicyLocatorOk returns a tuple with the PolicyLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetPolicyLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyLocator) {
		return nil, false
	}
	return o.PolicyLocator, true
}

// HasPolicyLocator returns a boolean if a field has been set.
func (o *InvoiceItem) HasPolicyLocator() bool {
	if o != nil && !IsNil(o.PolicyLocator) {
		return true
	}

	return false
}

// SetPolicyLocator gets a reference to the given string and assigns it to the PolicyLocator field.
func (o *InvoiceItem) SetPolicyLocator(v string) {
	o.PolicyLocator = &v
}

// GetTransactionLocator returns the TransactionLocator field value if set, zero value otherwise.
func (o *InvoiceItem) GetTransactionLocator() string {
	if o == nil || IsNil(o.TransactionLocator) {
		var ret string
		return ret
	}
	return *o.TransactionLocator
}

// GetTransactionLocatorOk returns a tuple with the TransactionLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetTransactionLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionLocator) {
		return nil, false
	}
	return o.TransactionLocator, true
}

// HasTransactionLocator returns a boolean if a field has been set.
func (o *InvoiceItem) HasTransactionLocator() bool {
	if o != nil && !IsNil(o.TransactionLocator) {
		return true
	}

	return false
}

// SetTransactionLocator gets a reference to the given string and assigns it to the TransactionLocator field.
func (o *InvoiceItem) SetTransactionLocator(v string) {
	o.TransactionLocator = &v
}

// GetElementStaticLocator returns the ElementStaticLocator field value if set, zero value otherwise.
func (o *InvoiceItem) GetElementStaticLocator() string {
	if o == nil || IsNil(o.ElementStaticLocator) {
		var ret string
		return ret
	}
	return *o.ElementStaticLocator
}

// GetElementStaticLocatorOk returns a tuple with the ElementStaticLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetElementStaticLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.ElementStaticLocator) {
		return nil, false
	}
	return o.ElementStaticLocator, true
}

// HasElementStaticLocator returns a boolean if a field has been set.
func (o *InvoiceItem) HasElementStaticLocator() bool {
	if o != nil && !IsNil(o.ElementStaticLocator) {
		return true
	}

	return false
}

// SetElementStaticLocator gets a reference to the given string and assigns it to the ElementStaticLocator field.
func (o *InvoiceItem) SetElementStaticLocator(v string) {
	o.ElementStaticLocator = &v
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *InvoiceItem) GetElementType() string {
	if o == nil || IsNil(o.ElementType) {
		var ret string
		return ret
	}
	return *o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetElementTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ElementType) {
		return nil, false
	}
	return o.ElementType, true
}

// HasElementType returns a boolean if a field has been set.
func (o *InvoiceItem) HasElementType() bool {
	if o != nil && !IsNil(o.ElementType) {
		return true
	}

	return false
}

// SetElementType gets a reference to the given string and assigns it to the ElementType field.
func (o *InvoiceItem) SetElementType(v string) {
	o.ElementType = &v
}

// GetTransactionLocators returns the TransactionLocators field value
func (o *InvoiceItem) GetTransactionLocators() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TransactionLocators
}

// GetTransactionLocatorsOk returns a tuple with the TransactionLocators field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetTransactionLocatorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionLocators, true
}

// SetTransactionLocators sets field value
func (o *InvoiceItem) SetTransactionLocators(v []string) {
	o.TransactionLocators = v
}

func (o InvoiceItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["chargeType"] = o.ChargeType
	toSerialize["chargeCategory"] = o.ChargeCategory
	toSerialize["amount"] = o.Amount
	if !IsNil(o.RemainingAmount) {
		toSerialize["remainingAmount"] = o.RemainingAmount
	}
	if !IsNil(o.SettlementTime) {
		toSerialize["settlementTime"] = o.SettlementTime
	}
	toSerialize["invoiceLocator"] = o.InvoiceLocator
	toSerialize["installmentItemLocators"] = o.InstallmentItemLocators
	toSerialize["timezone"] = o.Timezone
	if !IsNil(o.QuoteLocator) {
		toSerialize["quoteLocator"] = o.QuoteLocator
	}
	if !IsNil(o.PolicyLocator) {
		toSerialize["policyLocator"] = o.PolicyLocator
	}
	if !IsNil(o.TransactionLocator) {
		toSerialize["transactionLocator"] = o.TransactionLocator
	}
	if !IsNil(o.ElementStaticLocator) {
		toSerialize["elementStaticLocator"] = o.ElementStaticLocator
	}
	if !IsNil(o.ElementType) {
		toSerialize["elementType"] = o.ElementType
	}
	toSerialize["transactionLocators"] = o.TransactionLocators
	return toSerialize, nil
}

func (o *InvoiceItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"chargeType",
		"chargeCategory",
		"amount",
		"invoiceLocator",
		"installmentItemLocators",
		"timezone",
		"transactionLocators",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceItem := _InvoiceItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceItem)

	if err != nil {
		return err
	}

	*o = InvoiceItem(varInvoiceItem)

	return err
}

type NullableInvoiceItem struct {
	value *InvoiceItem
	isSet bool
}

func (v NullableInvoiceItem) Get() *InvoiceItem {
	return v.value
}

func (v *NullableInvoiceItem) Set(val *InvoiceItem) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceItem) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceItem(val *InvoiceItem) *NullableInvoiceItem {
	return &NullableInvoiceItem{value: val, isSet: true}
}

func (v NullableInvoiceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
