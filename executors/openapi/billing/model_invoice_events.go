/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
)

// checks if the InvoiceEvents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceEvents{}

// InvoiceEvents struct for InvoiceEvents
type InvoiceEvents struct {
	BillingInvoiceGenerate *InvoiceGenerateData `json:"billing.invoice.generate,omitempty"`
	BillingInvoiceSettle   *InvoiceSettleData   `json:"billing.invoice.settle,omitempty"`
	BillingInvoiceUnsettle *InvoiceSettleData   `json:"billing.invoice.unsettle,omitempty"`
}

// NewInvoiceEvents instantiates a new InvoiceEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceEvents() *InvoiceEvents {
	this := InvoiceEvents{}
	return &this
}

// NewInvoiceEventsWithDefaults instantiates a new InvoiceEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceEventsWithDefaults() *InvoiceEvents {
	this := InvoiceEvents{}
	return &this
}

// GetBillingInvoiceGenerate returns the BillingInvoiceGenerate field value if set, zero value otherwise.
func (o *InvoiceEvents) GetBillingInvoiceGenerate() InvoiceGenerateData {
	if o == nil || IsNil(o.BillingInvoiceGenerate) {
		var ret InvoiceGenerateData
		return ret
	}
	return *o.BillingInvoiceGenerate
}

// GetBillingInvoiceGenerateOk returns a tuple with the BillingInvoiceGenerate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceEvents) GetBillingInvoiceGenerateOk() (*InvoiceGenerateData, bool) {
	if o == nil || IsNil(o.BillingInvoiceGenerate) {
		return nil, false
	}
	return o.BillingInvoiceGenerate, true
}

// HasBillingInvoiceGenerate returns a boolean if a field has been set.
func (o *InvoiceEvents) HasBillingInvoiceGenerate() bool {
	if o != nil && !IsNil(o.BillingInvoiceGenerate) {
		return true
	}

	return false
}

// SetBillingInvoiceGenerate gets a reference to the given InvoiceGenerateData and assigns it to the BillingInvoiceGenerate field.
func (o *InvoiceEvents) SetBillingInvoiceGenerate(v InvoiceGenerateData) {
	o.BillingInvoiceGenerate = &v
}

// GetBillingInvoiceSettle returns the BillingInvoiceSettle field value if set, zero value otherwise.
func (o *InvoiceEvents) GetBillingInvoiceSettle() InvoiceSettleData {
	if o == nil || IsNil(o.BillingInvoiceSettle) {
		var ret InvoiceSettleData
		return ret
	}
	return *o.BillingInvoiceSettle
}

// GetBillingInvoiceSettleOk returns a tuple with the BillingInvoiceSettle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceEvents) GetBillingInvoiceSettleOk() (*InvoiceSettleData, bool) {
	if o == nil || IsNil(o.BillingInvoiceSettle) {
		return nil, false
	}
	return o.BillingInvoiceSettle, true
}

// HasBillingInvoiceSettle returns a boolean if a field has been set.
func (o *InvoiceEvents) HasBillingInvoiceSettle() bool {
	if o != nil && !IsNil(o.BillingInvoiceSettle) {
		return true
	}

	return false
}

// SetBillingInvoiceSettle gets a reference to the given InvoiceSettleData and assigns it to the BillingInvoiceSettle field.
func (o *InvoiceEvents) SetBillingInvoiceSettle(v InvoiceSettleData) {
	o.BillingInvoiceSettle = &v
}

// GetBillingInvoiceUnsettle returns the BillingInvoiceUnsettle field value if set, zero value otherwise.
func (o *InvoiceEvents) GetBillingInvoiceUnsettle() InvoiceSettleData {
	if o == nil || IsNil(o.BillingInvoiceUnsettle) {
		var ret InvoiceSettleData
		return ret
	}
	return *o.BillingInvoiceUnsettle
}

// GetBillingInvoiceUnsettleOk returns a tuple with the BillingInvoiceUnsettle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceEvents) GetBillingInvoiceUnsettleOk() (*InvoiceSettleData, bool) {
	if o == nil || IsNil(o.BillingInvoiceUnsettle) {
		return nil, false
	}
	return o.BillingInvoiceUnsettle, true
}

// HasBillingInvoiceUnsettle returns a boolean if a field has been set.
func (o *InvoiceEvents) HasBillingInvoiceUnsettle() bool {
	if o != nil && !IsNil(o.BillingInvoiceUnsettle) {
		return true
	}

	return false
}

// SetBillingInvoiceUnsettle gets a reference to the given InvoiceSettleData and assigns it to the BillingInvoiceUnsettle field.
func (o *InvoiceEvents) SetBillingInvoiceUnsettle(v InvoiceSettleData) {
	o.BillingInvoiceUnsettle = &v
}

func (o InvoiceEvents) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceEvents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingInvoiceGenerate) {
		toSerialize["billing.invoice.generate"] = o.BillingInvoiceGenerate
	}
	if !IsNil(o.BillingInvoiceSettle) {
		toSerialize["billing.invoice.settle"] = o.BillingInvoiceSettle
	}
	if !IsNil(o.BillingInvoiceUnsettle) {
		toSerialize["billing.invoice.unsettle"] = o.BillingInvoiceUnsettle
	}
	return toSerialize, nil
}

type NullableInvoiceEvents struct {
	value *InvoiceEvents
	isSet bool
}

func (v NullableInvoiceEvents) Get() *InvoiceEvents {
	return v.value
}

func (v *NullableInvoiceEvents) Set(val *InvoiceEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceEvents(val *InvoiceEvents) *NullableInvoiceEvents {
	return &NullableInvoiceEvents{value: val, isSet: true}
}

func (v NullableInvoiceEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
