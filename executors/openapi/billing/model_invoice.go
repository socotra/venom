/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Invoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Invoice{}

// Invoice struct for Invoice
type Invoice struct {
	Locator              string        `json:"locator"`
	AccountLocator       string        `json:"accountLocator"`
	InvoiceState         string        `json:"invoiceState"`
	InvoiceItems         []InvoiceItem `json:"invoiceItems"`
	GeneratedTime        time.Time     `json:"generatedTime"`
	DueTime              time.Time     `json:"dueTime"`
	Currency             string        `json:"currency"`
	StartTime            time.Time     `json:"startTime"`
	EndTime              time.Time     `json:"endTime"`
	UnsettledTime        *time.Time    `json:"unsettledTime,omitempty"`
	Timezone             string        `json:"timezone"`
	InvoiceNumber        *string       `json:"invoiceNumber,omitempty"`
	TotalAmount          *float32      `json:"totalAmount,omitempty"`
	TotalRemainingAmount *float32      `json:"totalRemainingAmount,omitempty"`
}

type _Invoice Invoice

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice(locator string, accountLocator string, invoiceState string, invoiceItems []InvoiceItem, generatedTime time.Time, dueTime time.Time, currency string, startTime time.Time, endTime time.Time, timezone string) *Invoice {
	this := Invoice{}
	this.Locator = locator
	this.AccountLocator = accountLocator
	this.InvoiceState = invoiceState
	this.InvoiceItems = invoiceItems
	this.GeneratedTime = generatedTime
	this.DueTime = dueTime
	this.Currency = currency
	this.StartTime = startTime
	this.EndTime = endTime
	this.Timezone = timezone
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetLocator returns the Locator field value
func (o *Invoice) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *Invoice) SetLocator(v string) {
	o.Locator = v
}

// GetAccountLocator returns the AccountLocator field value
func (o *Invoice) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *Invoice) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetInvoiceState returns the InvoiceState field value
func (o *Invoice) GetInvoiceState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceState
}

// GetInvoiceStateOk returns a tuple with the InvoiceState field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceState, true
}

// SetInvoiceState sets field value
func (o *Invoice) SetInvoiceState(v string) {
	o.InvoiceState = v
}

// GetInvoiceItems returns the InvoiceItems field value
func (o *Invoice) GetInvoiceItems() []InvoiceItem {
	if o == nil {
		var ret []InvoiceItem
		return ret
	}

	return o.InvoiceItems
}

// GetInvoiceItemsOk returns a tuple with the InvoiceItems field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceItemsOk() ([]InvoiceItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceItems, true
}

// SetInvoiceItems sets field value
func (o *Invoice) SetInvoiceItems(v []InvoiceItem) {
	o.InvoiceItems = v
}

// GetGeneratedTime returns the GeneratedTime field value
func (o *Invoice) GetGeneratedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.GeneratedTime
}

// GetGeneratedTimeOk returns a tuple with the GeneratedTime field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetGeneratedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GeneratedTime, true
}

// SetGeneratedTime sets field value
func (o *Invoice) SetGeneratedTime(v time.Time) {
	o.GeneratedTime = v
}

// GetDueTime returns the DueTime field value
func (o *Invoice) GetDueTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DueTime
}

// GetDueTimeOk returns a tuple with the DueTime field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetDueTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DueTime, true
}

// SetDueTime sets field value
func (o *Invoice) SetDueTime(v time.Time) {
	o.DueTime = v
}

// GetCurrency returns the Currency field value
func (o *Invoice) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *Invoice) SetCurrency(v string) {
	o.Currency = v
}

// GetStartTime returns the StartTime field value
func (o *Invoice) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *Invoice) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *Invoice) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *Invoice) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetUnsettledTime returns the UnsettledTime field value if set, zero value otherwise.
func (o *Invoice) GetUnsettledTime() time.Time {
	if o == nil || IsNil(o.UnsettledTime) {
		var ret time.Time
		return ret
	}
	return *o.UnsettledTime
}

// GetUnsettledTimeOk returns a tuple with the UnsettledTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetUnsettledTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UnsettledTime) {
		return nil, false
	}
	return o.UnsettledTime, true
}

// HasUnsettledTime returns a boolean if a field has been set.
func (o *Invoice) HasUnsettledTime() bool {
	if o != nil && !IsNil(o.UnsettledTime) {
		return true
	}

	return false
}

// SetUnsettledTime gets a reference to the given time.Time and assigns it to the UnsettledTime field.
func (o *Invoice) SetUnsettledTime(v time.Time) {
	o.UnsettledTime = &v
}

// GetTimezone returns the Timezone field value
func (o *Invoice) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *Invoice) SetTimezone(v string) {
	o.Timezone = v
}

// GetInvoiceNumber returns the InvoiceNumber field value if set, zero value otherwise.
func (o *Invoice) GetInvoiceNumber() string {
	if o == nil || IsNil(o.InvoiceNumber) {
		var ret string
		return ret
	}
	return *o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceNumber) {
		return nil, false
	}
	return o.InvoiceNumber, true
}

// HasInvoiceNumber returns a boolean if a field has been set.
func (o *Invoice) HasInvoiceNumber() bool {
	if o != nil && !IsNil(o.InvoiceNumber) {
		return true
	}

	return false
}

// SetInvoiceNumber gets a reference to the given string and assigns it to the InvoiceNumber field.
func (o *Invoice) SetInvoiceNumber(v string) {
	o.InvoiceNumber = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *Invoice) GetTotalAmount() float32 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret float32
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *Invoice) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given float32 and assigns it to the TotalAmount field.
func (o *Invoice) SetTotalAmount(v float32) {
	o.TotalAmount = &v
}

// GetTotalRemainingAmount returns the TotalRemainingAmount field value if set, zero value otherwise.
func (o *Invoice) GetTotalRemainingAmount() float32 {
	if o == nil || IsNil(o.TotalRemainingAmount) {
		var ret float32
		return ret
	}
	return *o.TotalRemainingAmount
}

// GetTotalRemainingAmountOk returns a tuple with the TotalRemainingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalRemainingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalRemainingAmount) {
		return nil, false
	}
	return o.TotalRemainingAmount, true
}

// HasTotalRemainingAmount returns a boolean if a field has been set.
func (o *Invoice) HasTotalRemainingAmount() bool {
	if o != nil && !IsNil(o.TotalRemainingAmount) {
		return true
	}

	return false
}

// SetTotalRemainingAmount gets a reference to the given float32 and assigns it to the TotalRemainingAmount field.
func (o *Invoice) SetTotalRemainingAmount(v float32) {
	o.TotalRemainingAmount = &v
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Invoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["accountLocator"] = o.AccountLocator
	toSerialize["invoiceState"] = o.InvoiceState
	toSerialize["invoiceItems"] = o.InvoiceItems
	toSerialize["generatedTime"] = o.GeneratedTime
	toSerialize["dueTime"] = o.DueTime
	toSerialize["currency"] = o.Currency
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	if !IsNil(o.UnsettledTime) {
		toSerialize["unsettledTime"] = o.UnsettledTime
	}
	toSerialize["timezone"] = o.Timezone
	if !IsNil(o.InvoiceNumber) {
		toSerialize["invoiceNumber"] = o.InvoiceNumber
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalRemainingAmount) {
		toSerialize["totalRemainingAmount"] = o.TotalRemainingAmount
	}
	return toSerialize, nil
}

func (o *Invoice) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"accountLocator",
		"invoiceState",
		"invoiceItems",
		"generatedTime",
		"dueTime",
		"currency",
		"startTime",
		"endTime",
		"timezone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoice := _Invoice{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoice)

	if err != nil {
		return err
	}

	*o = Invoice(varInvoice)

	return err
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
