/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DisbursementEventData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisbursementEventData{}

// DisbursementEventData struct for DisbursementEventData
type DisbursementEventData struct {
	DisbursementLocator string `json:"disbursementLocator"`
}

type _DisbursementEventData DisbursementEventData

// NewDisbursementEventData instantiates a new DisbursementEventData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisbursementEventData(disbursementLocator string) *DisbursementEventData {
	this := DisbursementEventData{}
	this.DisbursementLocator = disbursementLocator
	return &this
}

// NewDisbursementEventDataWithDefaults instantiates a new DisbursementEventData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisbursementEventDataWithDefaults() *DisbursementEventData {
	this := DisbursementEventData{}
	return &this
}

// GetDisbursementLocator returns the DisbursementLocator field value
func (o *DisbursementEventData) GetDisbursementLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisbursementLocator
}

// GetDisbursementLocatorOk returns a tuple with the DisbursementLocator field value
// and a boolean to check if the value has been set.
func (o *DisbursementEventData) GetDisbursementLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisbursementLocator, true
}

// SetDisbursementLocator sets field value
func (o *DisbursementEventData) SetDisbursementLocator(v string) {
	o.DisbursementLocator = v
}

func (o DisbursementEventData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisbursementEventData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["disbursementLocator"] = o.DisbursementLocator
	return toSerialize, nil
}

func (o *DisbursementEventData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"disbursementLocator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDisbursementEventData := _DisbursementEventData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDisbursementEventData)

	if err != nil {
		return err
	}

	*o = DisbursementEventData(varDisbursementEventData)

	return err
}

type NullableDisbursementEventData struct {
	value *DisbursementEventData
	isSet bool
}

func (v NullableDisbursementEventData) Get() *DisbursementEventData {
	return v.value
}

func (v *NullableDisbursementEventData) Set(val *DisbursementEventData) {
	v.value = val
	v.isSet = true
}

func (v NullableDisbursementEventData) IsSet() bool {
	return v.isSet
}

func (v *NullableDisbursementEventData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisbursementEventData(val *DisbursementEventData) *NullableDisbursementEventData {
	return &NullableDisbursementEventData{value: val, isSet: true}
}

func (v NullableDisbursementEventData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisbursementEventData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
