/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
)

// checks if the DelinquencyEvents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelinquencyEvents{}

// DelinquencyEvents struct for DelinquencyEvents
type DelinquencyEvents struct {
	BillingDelinquencyCreate *DelinquencyEventData `json:"billing.delinquency.create,omitempty"`
	BillingDelinquencySettle *DelinquencyEventData `json:"billing.delinquency.settle,omitempty"`
	BillingDelinquencyLapse  *DelinquencyEventData `json:"billing.delinquency.lapse,omitempty"`
}

// NewDelinquencyEvents instantiates a new DelinquencyEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelinquencyEvents() *DelinquencyEvents {
	this := DelinquencyEvents{}
	return &this
}

// NewDelinquencyEventsWithDefaults instantiates a new DelinquencyEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelinquencyEventsWithDefaults() *DelinquencyEvents {
	this := DelinquencyEvents{}
	return &this
}

// GetBillingDelinquencyCreate returns the BillingDelinquencyCreate field value if set, zero value otherwise.
func (o *DelinquencyEvents) GetBillingDelinquencyCreate() DelinquencyEventData {
	if o == nil || IsNil(o.BillingDelinquencyCreate) {
		var ret DelinquencyEventData
		return ret
	}
	return *o.BillingDelinquencyCreate
}

// GetBillingDelinquencyCreateOk returns a tuple with the BillingDelinquencyCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEvents) GetBillingDelinquencyCreateOk() (*DelinquencyEventData, bool) {
	if o == nil || IsNil(o.BillingDelinquencyCreate) {
		return nil, false
	}
	return o.BillingDelinquencyCreate, true
}

// HasBillingDelinquencyCreate returns a boolean if a field has been set.
func (o *DelinquencyEvents) HasBillingDelinquencyCreate() bool {
	if o != nil && !IsNil(o.BillingDelinquencyCreate) {
		return true
	}

	return false
}

// SetBillingDelinquencyCreate gets a reference to the given DelinquencyEventData and assigns it to the BillingDelinquencyCreate field.
func (o *DelinquencyEvents) SetBillingDelinquencyCreate(v DelinquencyEventData) {
	o.BillingDelinquencyCreate = &v
}

// GetBillingDelinquencySettle returns the BillingDelinquencySettle field value if set, zero value otherwise.
func (o *DelinquencyEvents) GetBillingDelinquencySettle() DelinquencyEventData {
	if o == nil || IsNil(o.BillingDelinquencySettle) {
		var ret DelinquencyEventData
		return ret
	}
	return *o.BillingDelinquencySettle
}

// GetBillingDelinquencySettleOk returns a tuple with the BillingDelinquencySettle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEvents) GetBillingDelinquencySettleOk() (*DelinquencyEventData, bool) {
	if o == nil || IsNil(o.BillingDelinquencySettle) {
		return nil, false
	}
	return o.BillingDelinquencySettle, true
}

// HasBillingDelinquencySettle returns a boolean if a field has been set.
func (o *DelinquencyEvents) HasBillingDelinquencySettle() bool {
	if o != nil && !IsNil(o.BillingDelinquencySettle) {
		return true
	}

	return false
}

// SetBillingDelinquencySettle gets a reference to the given DelinquencyEventData and assigns it to the BillingDelinquencySettle field.
func (o *DelinquencyEvents) SetBillingDelinquencySettle(v DelinquencyEventData) {
	o.BillingDelinquencySettle = &v
}

// GetBillingDelinquencyLapse returns the BillingDelinquencyLapse field value if set, zero value otherwise.
func (o *DelinquencyEvents) GetBillingDelinquencyLapse() DelinquencyEventData {
	if o == nil || IsNil(o.BillingDelinquencyLapse) {
		var ret DelinquencyEventData
		return ret
	}
	return *o.BillingDelinquencyLapse
}

// GetBillingDelinquencyLapseOk returns a tuple with the BillingDelinquencyLapse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEvents) GetBillingDelinquencyLapseOk() (*DelinquencyEventData, bool) {
	if o == nil || IsNil(o.BillingDelinquencyLapse) {
		return nil, false
	}
	return o.BillingDelinquencyLapse, true
}

// HasBillingDelinquencyLapse returns a boolean if a field has been set.
func (o *DelinquencyEvents) HasBillingDelinquencyLapse() bool {
	if o != nil && !IsNil(o.BillingDelinquencyLapse) {
		return true
	}

	return false
}

// SetBillingDelinquencyLapse gets a reference to the given DelinquencyEventData and assigns it to the BillingDelinquencyLapse field.
func (o *DelinquencyEvents) SetBillingDelinquencyLapse(v DelinquencyEventData) {
	o.BillingDelinquencyLapse = &v
}

func (o DelinquencyEvents) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelinquencyEvents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingDelinquencyCreate) {
		toSerialize["billing.delinquency.create"] = o.BillingDelinquencyCreate
	}
	if !IsNil(o.BillingDelinquencySettle) {
		toSerialize["billing.delinquency.settle"] = o.BillingDelinquencySettle
	}
	if !IsNil(o.BillingDelinquencyLapse) {
		toSerialize["billing.delinquency.lapse"] = o.BillingDelinquencyLapse
	}
	return toSerialize, nil
}

type NullableDelinquencyEvents struct {
	value *DelinquencyEvents
	isSet bool
}

func (v NullableDelinquencyEvents) Get() *DelinquencyEvents {
	return v.value
}

func (v *NullableDelinquencyEvents) Set(val *DelinquencyEvents) {
	v.value = val
	v.isSet = true
}

func (v NullableDelinquencyEvents) IsSet() bool {
	return v.isSet
}

func (v *NullableDelinquencyEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelinquencyEvents(val *DelinquencyEvents) *NullableDelinquencyEvents {
	return &NullableDelinquencyEvents{value: val, isSet: true}
}

func (v NullableDelinquencyEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelinquencyEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
