/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DelinquencyEventJobData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelinquencyEventJobData{}

// DelinquencyEventJobData struct for DelinquencyEventJobData
type DelinquencyEventJobData struct {
	Locator                         string    `json:"locator"`
	DelinquencyLocator              string    `json:"delinquencyLocator"`
	DelinquencyEventLocator         string    `json:"delinquencyEventLocator"`
	TriggerTime                     time.Time `json:"triggerTime"`
	JobStatus                       string    `json:"jobStatus"`
	CreatedAt                       time.Time `json:"createdAt"`
	UpdatedAt                       time.Time `json:"updatedAt"`
	Cancelled                       *bool     `json:"cancelled,omitempty"`
	CancellationType                *string   `json:"cancellationType,omitempty"`
	UpdatedDelinquencyEventLocators []string  `json:"updatedDelinquencyEventLocators"`
	ProcessingErrors                *string   `json:"processingErrors,omitempty"`
	RescheduledByLocator            *string   `json:"rescheduledByLocator,omitempty"`
}

type _DelinquencyEventJobData DelinquencyEventJobData

// NewDelinquencyEventJobData instantiates a new DelinquencyEventJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelinquencyEventJobData(locator string, delinquencyLocator string, delinquencyEventLocator string, triggerTime time.Time, jobStatus string, createdAt time.Time, updatedAt time.Time, updatedDelinquencyEventLocators []string) *DelinquencyEventJobData {
	this := DelinquencyEventJobData{}
	this.Locator = locator
	this.DelinquencyLocator = delinquencyLocator
	this.DelinquencyEventLocator = delinquencyEventLocator
	this.TriggerTime = triggerTime
	this.JobStatus = jobStatus
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.UpdatedDelinquencyEventLocators = updatedDelinquencyEventLocators
	return &this
}

// NewDelinquencyEventJobDataWithDefaults instantiates a new DelinquencyEventJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelinquencyEventJobDataWithDefaults() *DelinquencyEventJobData {
	this := DelinquencyEventJobData{}
	return &this
}

// GetLocator returns the Locator field value
func (o *DelinquencyEventJobData) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *DelinquencyEventJobData) SetLocator(v string) {
	o.Locator = v
}

// GetDelinquencyLocator returns the DelinquencyLocator field value
func (o *DelinquencyEventJobData) GetDelinquencyLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DelinquencyLocator
}

// GetDelinquencyLocatorOk returns a tuple with the DelinquencyLocator field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetDelinquencyLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelinquencyLocator, true
}

// SetDelinquencyLocator sets field value
func (o *DelinquencyEventJobData) SetDelinquencyLocator(v string) {
	o.DelinquencyLocator = v
}

// GetDelinquencyEventLocator returns the DelinquencyEventLocator field value
func (o *DelinquencyEventJobData) GetDelinquencyEventLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DelinquencyEventLocator
}

// GetDelinquencyEventLocatorOk returns a tuple with the DelinquencyEventLocator field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetDelinquencyEventLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelinquencyEventLocator, true
}

// SetDelinquencyEventLocator sets field value
func (o *DelinquencyEventJobData) SetDelinquencyEventLocator(v string) {
	o.DelinquencyEventLocator = v
}

// GetTriggerTime returns the TriggerTime field value
func (o *DelinquencyEventJobData) GetTriggerTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TriggerTime
}

// GetTriggerTimeOk returns a tuple with the TriggerTime field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetTriggerTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggerTime, true
}

// SetTriggerTime sets field value
func (o *DelinquencyEventJobData) SetTriggerTime(v time.Time) {
	o.TriggerTime = v
}

// GetJobStatus returns the JobStatus field value
func (o *DelinquencyEventJobData) GetJobStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobStatus
}

// GetJobStatusOk returns a tuple with the JobStatus field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetJobStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobStatus, true
}

// SetJobStatus sets field value
func (o *DelinquencyEventJobData) SetJobStatus(v string) {
	o.JobStatus = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DelinquencyEventJobData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DelinquencyEventJobData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DelinquencyEventJobData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DelinquencyEventJobData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCancelled returns the Cancelled field value if set, zero value otherwise.
func (o *DelinquencyEventJobData) GetCancelled() bool {
	if o == nil || IsNil(o.Cancelled) {
		var ret bool
		return ret
	}
	return *o.Cancelled
}

// GetCancelledOk returns a tuple with the Cancelled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetCancelledOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancelled) {
		return nil, false
	}
	return o.Cancelled, true
}

// HasCancelled returns a boolean if a field has been set.
func (o *DelinquencyEventJobData) HasCancelled() bool {
	if o != nil && !IsNil(o.Cancelled) {
		return true
	}

	return false
}

// SetCancelled gets a reference to the given bool and assigns it to the Cancelled field.
func (o *DelinquencyEventJobData) SetCancelled(v bool) {
	o.Cancelled = &v
}

// GetCancellationType returns the CancellationType field value if set, zero value otherwise.
func (o *DelinquencyEventJobData) GetCancellationType() string {
	if o == nil || IsNil(o.CancellationType) {
		var ret string
		return ret
	}
	return *o.CancellationType
}

// GetCancellationTypeOk returns a tuple with the CancellationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetCancellationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationType) {
		return nil, false
	}
	return o.CancellationType, true
}

// HasCancellationType returns a boolean if a field has been set.
func (o *DelinquencyEventJobData) HasCancellationType() bool {
	if o != nil && !IsNil(o.CancellationType) {
		return true
	}

	return false
}

// SetCancellationType gets a reference to the given string and assigns it to the CancellationType field.
func (o *DelinquencyEventJobData) SetCancellationType(v string) {
	o.CancellationType = &v
}

// GetUpdatedDelinquencyEventLocators returns the UpdatedDelinquencyEventLocators field value
func (o *DelinquencyEventJobData) GetUpdatedDelinquencyEventLocators() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UpdatedDelinquencyEventLocators
}

// GetUpdatedDelinquencyEventLocatorsOk returns a tuple with the UpdatedDelinquencyEventLocators field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetUpdatedDelinquencyEventLocatorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedDelinquencyEventLocators, true
}

// SetUpdatedDelinquencyEventLocators sets field value
func (o *DelinquencyEventJobData) SetUpdatedDelinquencyEventLocators(v []string) {
	o.UpdatedDelinquencyEventLocators = v
}

// GetProcessingErrors returns the ProcessingErrors field value if set, zero value otherwise.
func (o *DelinquencyEventJobData) GetProcessingErrors() string {
	if o == nil || IsNil(o.ProcessingErrors) {
		var ret string
		return ret
	}
	return *o.ProcessingErrors
}

// GetProcessingErrorsOk returns a tuple with the ProcessingErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetProcessingErrorsOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessingErrors) {
		return nil, false
	}
	return o.ProcessingErrors, true
}

// HasProcessingErrors returns a boolean if a field has been set.
func (o *DelinquencyEventJobData) HasProcessingErrors() bool {
	if o != nil && !IsNil(o.ProcessingErrors) {
		return true
	}

	return false
}

// SetProcessingErrors gets a reference to the given string and assigns it to the ProcessingErrors field.
func (o *DelinquencyEventJobData) SetProcessingErrors(v string) {
	o.ProcessingErrors = &v
}

// GetRescheduledByLocator returns the RescheduledByLocator field value if set, zero value otherwise.
func (o *DelinquencyEventJobData) GetRescheduledByLocator() string {
	if o == nil || IsNil(o.RescheduledByLocator) {
		var ret string
		return ret
	}
	return *o.RescheduledByLocator
}

// GetRescheduledByLocatorOk returns a tuple with the RescheduledByLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEventJobData) GetRescheduledByLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.RescheduledByLocator) {
		return nil, false
	}
	return o.RescheduledByLocator, true
}

// HasRescheduledByLocator returns a boolean if a field has been set.
func (o *DelinquencyEventJobData) HasRescheduledByLocator() bool {
	if o != nil && !IsNil(o.RescheduledByLocator) {
		return true
	}

	return false
}

// SetRescheduledByLocator gets a reference to the given string and assigns it to the RescheduledByLocator field.
func (o *DelinquencyEventJobData) SetRescheduledByLocator(v string) {
	o.RescheduledByLocator = &v
}

func (o DelinquencyEventJobData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelinquencyEventJobData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["delinquencyLocator"] = o.DelinquencyLocator
	toSerialize["delinquencyEventLocator"] = o.DelinquencyEventLocator
	toSerialize["triggerTime"] = o.TriggerTime
	toSerialize["jobStatus"] = o.JobStatus
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	if !IsNil(o.Cancelled) {
		toSerialize["cancelled"] = o.Cancelled
	}
	if !IsNil(o.CancellationType) {
		toSerialize["cancellationType"] = o.CancellationType
	}
	toSerialize["updatedDelinquencyEventLocators"] = o.UpdatedDelinquencyEventLocators
	if !IsNil(o.ProcessingErrors) {
		toSerialize["processingErrors"] = o.ProcessingErrors
	}
	if !IsNil(o.RescheduledByLocator) {
		toSerialize["rescheduledByLocator"] = o.RescheduledByLocator
	}
	return toSerialize, nil
}

func (o *DelinquencyEventJobData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"delinquencyLocator",
		"delinquencyEventLocator",
		"triggerTime",
		"jobStatus",
		"createdAt",
		"updatedAt",
		"updatedDelinquencyEventLocators",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDelinquencyEventJobData := _DelinquencyEventJobData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDelinquencyEventJobData)

	if err != nil {
		return err
	}

	*o = DelinquencyEventJobData(varDelinquencyEventJobData)

	return err
}

type NullableDelinquencyEventJobData struct {
	value *DelinquencyEventJobData
	isSet bool
}

func (v NullableDelinquencyEventJobData) Get() *DelinquencyEventJobData {
	return v.value
}

func (v *NullableDelinquencyEventJobData) Set(val *DelinquencyEventJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableDelinquencyEventJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableDelinquencyEventJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelinquencyEventJobData(val *DelinquencyEventJobData) *NullableDelinquencyEventJobData {
	return &NullableDelinquencyEventJobData{value: val, isSet: true}
}

func (v NullableDelinquencyEventJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelinquencyEventJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
