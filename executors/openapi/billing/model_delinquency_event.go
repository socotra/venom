/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DelinquencyEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelinquencyEvent{}

// DelinquencyEvent struct for DelinquencyEvent
type DelinquencyEvent struct {
	Locator               string     `json:"locator"`
	DelinquencyLocator    string     `json:"delinquencyLocator"`
	DelinquencyEventState string     `json:"delinquencyEventState"`
	TriggerTime           time.Time  `json:"triggerTime"`
	TriggeredAt           *time.Time `json:"triggeredAt,omitempty"`
	CreatedAt             time.Time  `json:"createdAt"`
	CreatedBy             string     `json:"createdBy"`
	UpdatedAt             time.Time  `json:"updatedAt"`
	UpdatedBy             string     `json:"updatedBy"`
	Name                  string     `json:"name"`
}

type _DelinquencyEvent DelinquencyEvent

// NewDelinquencyEvent instantiates a new DelinquencyEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelinquencyEvent(locator string, delinquencyLocator string, delinquencyEventState string, triggerTime time.Time, createdAt time.Time, createdBy string, updatedAt time.Time, updatedBy string, name string) *DelinquencyEvent {
	this := DelinquencyEvent{}
	this.Locator = locator
	this.DelinquencyLocator = delinquencyLocator
	this.DelinquencyEventState = delinquencyEventState
	this.TriggerTime = triggerTime
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.UpdatedAt = updatedAt
	this.UpdatedBy = updatedBy
	this.Name = name
	return &this
}

// NewDelinquencyEventWithDefaults instantiates a new DelinquencyEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelinquencyEventWithDefaults() *DelinquencyEvent {
	this := DelinquencyEvent{}
	return &this
}

// GetLocator returns the Locator field value
func (o *DelinquencyEvent) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *DelinquencyEvent) SetLocator(v string) {
	o.Locator = v
}

// GetDelinquencyLocator returns the DelinquencyLocator field value
func (o *DelinquencyEvent) GetDelinquencyLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DelinquencyLocator
}

// GetDelinquencyLocatorOk returns a tuple with the DelinquencyLocator field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetDelinquencyLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelinquencyLocator, true
}

// SetDelinquencyLocator sets field value
func (o *DelinquencyEvent) SetDelinquencyLocator(v string) {
	o.DelinquencyLocator = v
}

// GetDelinquencyEventState returns the DelinquencyEventState field value
func (o *DelinquencyEvent) GetDelinquencyEventState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DelinquencyEventState
}

// GetDelinquencyEventStateOk returns a tuple with the DelinquencyEventState field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetDelinquencyEventStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelinquencyEventState, true
}

// SetDelinquencyEventState sets field value
func (o *DelinquencyEvent) SetDelinquencyEventState(v string) {
	o.DelinquencyEventState = v
}

// GetTriggerTime returns the TriggerTime field value
func (o *DelinquencyEvent) GetTriggerTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TriggerTime
}

// GetTriggerTimeOk returns a tuple with the TriggerTime field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetTriggerTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggerTime, true
}

// SetTriggerTime sets field value
func (o *DelinquencyEvent) SetTriggerTime(v time.Time) {
	o.TriggerTime = v
}

// GetTriggeredAt returns the TriggeredAt field value if set, zero value otherwise.
func (o *DelinquencyEvent) GetTriggeredAt() time.Time {
	if o == nil || IsNil(o.TriggeredAt) {
		var ret time.Time
		return ret
	}
	return *o.TriggeredAt
}

// GetTriggeredAtOk returns a tuple with the TriggeredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetTriggeredAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TriggeredAt) {
		return nil, false
	}
	return o.TriggeredAt, true
}

// HasTriggeredAt returns a boolean if a field has been set.
func (o *DelinquencyEvent) HasTriggeredAt() bool {
	if o != nil && !IsNil(o.TriggeredAt) {
		return true
	}

	return false
}

// SetTriggeredAt gets a reference to the given time.Time and assigns it to the TriggeredAt field.
func (o *DelinquencyEvent) SetTriggeredAt(v time.Time) {
	o.TriggeredAt = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DelinquencyEvent) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DelinquencyEvent) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *DelinquencyEvent) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *DelinquencyEvent) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DelinquencyEvent) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DelinquencyEvent) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUpdatedBy returns the UpdatedBy field value
func (o *DelinquencyEvent) GetUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedBy, true
}

// SetUpdatedBy sets field value
func (o *DelinquencyEvent) SetUpdatedBy(v string) {
	o.UpdatedBy = v
}

// GetName returns the Name field value
func (o *DelinquencyEvent) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEvent) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DelinquencyEvent) SetName(v string) {
	o.Name = v
}

func (o DelinquencyEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelinquencyEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["delinquencyLocator"] = o.DelinquencyLocator
	toSerialize["delinquencyEventState"] = o.DelinquencyEventState
	toSerialize["triggerTime"] = o.TriggerTime
	if !IsNil(o.TriggeredAt) {
		toSerialize["triggeredAt"] = o.TriggeredAt
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["updatedBy"] = o.UpdatedBy
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *DelinquencyEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"delinquencyLocator",
		"delinquencyEventState",
		"triggerTime",
		"createdAt",
		"createdBy",
		"updatedAt",
		"updatedBy",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDelinquencyEvent := _DelinquencyEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDelinquencyEvent)

	if err != nil {
		return err
	}

	*o = DelinquencyEvent(varDelinquencyEvent)

	return err
}

type NullableDelinquencyEvent struct {
	value *DelinquencyEvent
	isSet bool
}

func (v NullableDelinquencyEvent) Get() *DelinquencyEvent {
	return v.value
}

func (v *NullableDelinquencyEvent) Set(val *DelinquencyEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableDelinquencyEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableDelinquencyEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelinquencyEvent(val *DelinquencyEvent) *NullableDelinquencyEvent {
	return &NullableDelinquencyEvent{value: val, isSet: true}
}

func (v NullableDelinquencyEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelinquencyEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
