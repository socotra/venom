/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PaymentEventData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentEventData{}

// PaymentEventData struct for PaymentEventData
type PaymentEventData struct {
	PaymentLocator string               `json:"paymentLocator"`
	PolicyLocators ListPageResponseULID `json:"policyLocators"`
}

type _PaymentEventData PaymentEventData

// NewPaymentEventData instantiates a new PaymentEventData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentEventData(paymentLocator string, policyLocators ListPageResponseULID) *PaymentEventData {
	this := PaymentEventData{}
	this.PaymentLocator = paymentLocator
	this.PolicyLocators = policyLocators
	return &this
}

// NewPaymentEventDataWithDefaults instantiates a new PaymentEventData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentEventDataWithDefaults() *PaymentEventData {
	this := PaymentEventData{}
	return &this
}

// GetPaymentLocator returns the PaymentLocator field value
func (o *PaymentEventData) GetPaymentLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentLocator
}

// GetPaymentLocatorOk returns a tuple with the PaymentLocator field value
// and a boolean to check if the value has been set.
func (o *PaymentEventData) GetPaymentLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentLocator, true
}

// SetPaymentLocator sets field value
func (o *PaymentEventData) SetPaymentLocator(v string) {
	o.PaymentLocator = v
}

// GetPolicyLocators returns the PolicyLocators field value
func (o *PaymentEventData) GetPolicyLocators() ListPageResponseULID {
	if o == nil {
		var ret ListPageResponseULID
		return ret
	}

	return o.PolicyLocators
}

// GetPolicyLocatorsOk returns a tuple with the PolicyLocators field value
// and a boolean to check if the value has been set.
func (o *PaymentEventData) GetPolicyLocatorsOk() (*ListPageResponseULID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyLocators, true
}

// SetPolicyLocators sets field value
func (o *PaymentEventData) SetPolicyLocators(v ListPageResponseULID) {
	o.PolicyLocators = v
}

func (o PaymentEventData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentEventData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["paymentLocator"] = o.PaymentLocator
	toSerialize["policyLocators"] = o.PolicyLocators
	return toSerialize, nil
}

func (o *PaymentEventData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"paymentLocator",
		"policyLocators",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentEventData := _PaymentEventData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentEventData)

	if err != nil {
		return err
	}

	*o = PaymentEventData(varPaymentEventData)

	return err
}

type NullablePaymentEventData struct {
	value *PaymentEventData
	isSet bool
}

func (v NullablePaymentEventData) Get() *PaymentEventData {
	return v.value
}

func (v *NullablePaymentEventData) Set(val *PaymentEventData) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentEventData) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentEventData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentEventData(val *PaymentEventData) *NullablePaymentEventData {
	return &NullablePaymentEventData{value: val, isSet: true}
}

func (v NullablePaymentEventData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentEventData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
