/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"bytes"
	"enco
	"fmt"
)

// checks if the CreditDistributionCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditDistributionCreateRequest{}

// CreditDistributionCreateRequest struct for CreditDistributionCreateRequest
type CreditDistributionCreateRequest struct {
	AccountLocator *string      `json:"accountLocator,omitempty"`
	Amount         float32      `json:"amount"`
	Currency       *string      `json:"currency,omitempty"`
	Sources        []CreditItem `json:"sources"`
	Targets        []CreditItem `json:"targets"`
}

type _CreditDistributionCreateRequest CreditDistributionCreateRequest

// NewCreditDistributionCreateRequest instantiates a new CreditDistributionCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditDistributionCreateRequest(amount float32, sources []CreditItem, targets []CreditItem) *CreditDistributionCreateRequest {
	this := CreditDistributionCreateRequest{}
	this.Amount = amount
	this.Sources = sources
	this.Targets = targets
	return &this
}

// NewCreditDistributionCreateRequestWithDefaults instantiates a new CreditDistributionCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditDistributionCreateRequestWithDefaults() *CreditDistributionCreateRequest {
	this := CreditDistributionCreateRequest{}
	return &this
}

// GetAccountLocator returns the AccountLocator field value if set, zero value otherwise.
func (o *CreditDistributionCreateRequest) GetAccountLocator() string {
	if o == nil || IsNil(o.AccountLocator) {
		var ret string
		return ret
	}
	return *o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditDistributionCreateRequest) GetAccountLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.AccountLocator) {
		return nil, false
	}
	return o.AccountLocator, true
}

// HasAccountLocator returns a boolean if a field has been set.
func (o *CreditDistributionCreateRequest) HasAccountLocator() bool {
	if o != nil && !IsNil(o.AccountLocator) {
		return true
	}

	return false
}

// SetAccountLocator gets a reference to the given string and assigns it to the AccountLocator field.
func (o *CreditDistributionCreateRequest) SetAccountLocator(v string) {
	o.AccountLocator = &v
}

// GetAmount returns the Amount field value
func (o *CreditDistributionCreateRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreditDistributionCreateRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreditDistributionCreateRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CreditDistributionCreateRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditDistributionCreateRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CreditDistributionCreateRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CreditDistributionCreateRequest) SetCurrency(v string) {
	o.Currency = &v
}

// GetSources returns the Sources field value
func (o *CreditDistributionCreateRequest) GetSources() []CreditItem {
	if o == nil {
		var ret []CreditItem
		return ret
	}

	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value
// and a boolean to check if the value has been set.
func (o *CreditDistributionCreateRequest) GetSourcesOk() ([]CreditItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sources, true
}

// SetSources sets field value
func (o *CreditDistributionCreateRequest) SetSources(v []CreditItem) {
	o.Sources = v
}

// GetTargets returns the Targets field value
func (o *CreditDistributionCreateRequest) GetTargets() []CreditItem {
	if o == nil {
		var ret []CreditItem
		return ret
	}

	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value
// and a boolean to check if the value has been set.
func (o *CreditDistributionCreateRequest) GetTargetsOk() ([]CreditItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Targets, true
}

// SetTargets sets field value
func (o *CreditDistributionCreateRequest) SetTargets(v []CreditItem) {
	o.Targets = v
}

func (o CreditDistributionCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditDistributionCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountLocator) {
		toSerialize["accountLocator"] = o.AccountLocator
	}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	toSerialize["sources"] = o.Sources
	toSerialize["targets"] = o.Targets
	return toSerialize, nil
}

func (o *CreditDistributionCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"sources",
		"targets",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditDistributionCreateRequest := _CreditDistributionCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreditDistributionCreateRequest)

	if err != nil {
		return err
	}

	*o = CreditDistributionCreateRequest(varCreditDistributionCreateRequest)

	return err
}

type NullableCreditDistributionCreateRequest struct {
	value *CreditDistributionCreateRequest
	isSet bool
}

func (v NullableCreditDistributionCreateRequest) Get() *CreditDistributionCreateRequest {
	return v.value
}

func (v *NullableCreditDistributionCreateRequest) Set(val *CreditDistributionCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditDistributionCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditDistributionCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditDistributionCreateRequest(val *CreditDistributionCreateRequest) *NullableCreditDistributionCreateRequest {
	return &NullableCreditDistributionCreateRequest{value: val, isSet: true}
}

func (v NullableCreditDistributionCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditDistributionCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
