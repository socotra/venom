/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package document

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DocumentsJobSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentsJobSummary{}

// DocumentsJobSummary struct for DocumentsJobSummary
type DocumentsJobSummary struct {
	Locator       string `json:"locator"`
	ReferenceType string `json:"referenceType"`
	Status        string `json:"status"`
}

type _DocumentsJobSummary DocumentsJobSummary

// NewDocumentsJobSummary instantiates a new DocumentsJobSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsJobSummary(locator string, referenceType string, status string) *DocumentsJobSummary {
	this := DocumentsJobSummary{}
	this.Locator = locator
	this.ReferenceType = referenceType
	this.Status = status
	return &this
}

// NewDocumentsJobSummaryWithDefaults instantiates a new DocumentsJobSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsJobSummaryWithDefaults() *DocumentsJobSummary {
	this := DocumentsJobSummary{}
	return &this
}

// GetLocator returns the Locator field value
func (o *DocumentsJobSummary) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *DocumentsJobSummary) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *DocumentsJobSummary) SetLocator(v string) {
	o.Locator = v
}

// GetReferenceType returns the ReferenceType field value
func (o *DocumentsJobSummary) GetReferenceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value
// and a boolean to check if the value has been set.
func (o *DocumentsJobSummary) GetReferenceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceType, true
}

// SetReferenceType sets field value
func (o *DocumentsJobSummary) SetReferenceType(v string) {
	o.ReferenceType = v
}

// GetStatus returns the Status field value
func (o *DocumentsJobSummary) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DocumentsJobSummary) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DocumentsJobSummary) SetStatus(v string) {
	o.Status = v
}

func (o DocumentsJobSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentsJobSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["referenceType"] = o.ReferenceType
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *DocumentsJobSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"referenceType",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentsJobSummary := _DocumentsJobSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentsJobSummary)

	if err != nil {
		return err
	}

	*o = DocumentsJobSummary(varDocumentsJobSummary)

	return err
}

type NullableDocumentsJobSummary struct {
	value *DocumentsJobSummary
	isSet bool
}

func (v NullableDocumentsJobSummary) Get() *DocumentsJobSummary {
	return v.value
}

func (v *NullableDocumentsJobSummary) Set(val *DocumentsJobSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsJobSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsJobSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsJobSummary(val *DocumentsJobSummary) *NullableDocumentsJobSummary {
	return &NullableDocumentsJobSummary{value: val, isSet: true}
}

func (v NullableDocumentsJobSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsJobSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
