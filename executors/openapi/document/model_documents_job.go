/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package document

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DocumentsJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentsJob{}

// DocumentsJob struct for DocumentsJob
type DocumentsJob struct {
	Locator            string            `json:"locator"`
	ReferenceType      string            `json:"referenceType"`
	ReferenceLocator   string            `json:"referenceLocator"`
	DocumentTrigger    string            `json:"documentTrigger"`
	Status             string            `json:"status"`
	ChildrenJobs       []string          `json:"childrenJobs"`
	Documents          []DocumentJobInfo `json:"documents"`
	ProcessingErrors   string            `json:"processingErrors"`
	CreatedAt          time.Time         `json:"createdAt"`
	CreatedBy          string            `json:"createdBy"`
	CompletedAt        time.Time         `json:"completedAt"`
	TransactionLocator string            `json:"transactionLocator"`
	SegmentLocator     string            `json:"segmentLocator"`
	IsConsolidation    bool              `json:"isConsolidation"`
}

type _DocumentsJob DocumentsJob

// NewDocumentsJob instantiates a new DocumentsJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsJob(locator string, referenceType string, referenceLocator string, documentTrigger string, status string, childrenJobs []string, documents []DocumentJobInfo, processingErrors string, createdAt time.Time, createdBy string, completedAt time.Time, transactionLocator string, segmentLocator string, isConsolidation bool) *DocumentsJob {
	this := DocumentsJob{}
	this.Locator = locator
	this.ReferenceType = referenceType
	this.ReferenceLocator = referenceLocator
	this.DocumentTrigger = documentTrigger
	this.Status = status
	this.ChildrenJobs = childrenJobs
	this.Documents = documents
	this.ProcessingErrors = processingErrors
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.CompletedAt = completedAt
	this.TransactionLocator = transactionLocator
	this.SegmentLocator = segmentLocator
	this.IsConsolidation = isConsolidation
	return &this
}

// NewDocumentsJobWithDefaults instantiates a new DocumentsJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsJobWithDefaults() *DocumentsJob {
	this := DocumentsJob{}
	return &this
}

// GetLocator returns the Locator field value
func (o *DocumentsJob) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *DocumentsJob) SetLocator(v string) {
	o.Locator = v
}

// GetReferenceType returns the ReferenceType field value
func (o *DocumentsJob) GetReferenceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetReferenceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceType, true
}

// SetReferenceType sets field value
func (o *DocumentsJob) SetReferenceType(v string) {
	o.ReferenceType = v
}

// GetReferenceLocator returns the ReferenceLocator field value
func (o *DocumentsJob) GetReferenceLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceLocator
}

// GetReferenceLocatorOk returns a tuple with the ReferenceLocator field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetReferenceLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceLocator, true
}

// SetReferenceLocator sets field value
func (o *DocumentsJob) SetReferenceLocator(v string) {
	o.ReferenceLocator = v
}

// GetDocumentTrigger returns the DocumentTrigger field value
func (o *DocumentsJob) GetDocumentTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentTrigger
}

// GetDocumentTriggerOk returns a tuple with the DocumentTrigger field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetDocumentTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentTrigger, true
}

// SetDocumentTrigger sets field value
func (o *DocumentsJob) SetDocumentTrigger(v string) {
	o.DocumentTrigger = v
}

// GetStatus returns the Status field value
func (o *DocumentsJob) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DocumentsJob) SetStatus(v string) {
	o.Status = v
}

// GetChildrenJobs returns the ChildrenJobs field value
func (o *DocumentsJob) GetChildrenJobs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ChildrenJobs
}

// GetChildrenJobsOk returns a tuple with the ChildrenJobs field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetChildrenJobsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChildrenJobs, true
}

// SetChildrenJobs sets field value
func (o *DocumentsJob) SetChildrenJobs(v []string) {
	o.ChildrenJobs = v
}

// GetDocuments returns the Documents field value
func (o *DocumentsJob) GetDocuments() []DocumentJobInfo {
	if o == nil {
		var ret []DocumentJobInfo
		return ret
	}

	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetDocumentsOk() ([]DocumentJobInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Documents, true
}

// SetDocuments sets field value
func (o *DocumentsJob) SetDocuments(v []DocumentJobInfo) {
	o.Documents = v
}

// GetProcessingErrors returns the ProcessingErrors field value
func (o *DocumentsJob) GetProcessingErrors() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessingErrors
}

// GetProcessingErrorsOk returns a tuple with the ProcessingErrors field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetProcessingErrorsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessingErrors, true
}

// SetProcessingErrors sets field value
func (o *DocumentsJob) SetProcessingErrors(v string) {
	o.ProcessingErrors = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DocumentsJob) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DocumentsJob) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *DocumentsJob) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *DocumentsJob) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCompletedAt returns the CompletedAt field value
func (o *DocumentsJob) GetCompletedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletedAt, true
}

// SetCompletedAt sets field value
func (o *DocumentsJob) SetCompletedAt(v time.Time) {
	o.CompletedAt = v
}

// GetTransactionLocator returns the TransactionLocator field value
func (o *DocumentsJob) GetTransactionLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionLocator
}

// GetTransactionLocatorOk returns a tuple with the TransactionLocator field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetTransactionLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionLocator, true
}

// SetTransactionLocator sets field value
func (o *DocumentsJob) SetTransactionLocator(v string) {
	o.TransactionLocator = v
}

// GetSegmentLocator returns the SegmentLocator field value
func (o *DocumentsJob) GetSegmentLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentLocator
}

// GetSegmentLocatorOk returns a tuple with the SegmentLocator field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetSegmentLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SegmentLocator, true
}

// SetSegmentLocator sets field value
func (o *DocumentsJob) SetSegmentLocator(v string) {
	o.SegmentLocator = v
}

// GetIsConsolidation returns the IsConsolidation field value
func (o *DocumentsJob) GetIsConsolidation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsConsolidation
}

// GetIsConsolidationOk returns a tuple with the IsConsolidation field value
// and a boolean to check if the value has been set.
func (o *DocumentsJob) GetIsConsolidationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsConsolidation, true
}

// SetIsConsolidation sets field value
func (o *DocumentsJob) SetIsConsolidation(v bool) {
	o.IsConsolidation = v
}

func (o DocumentsJob) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentsJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["referenceType"] = o.ReferenceType
	toSerialize["referenceLocator"] = o.ReferenceLocator
	toSerialize["documentTrigger"] = o.DocumentTrigger
	toSerialize["status"] = o.Status
	toSerialize["childrenJobs"] = o.ChildrenJobs
	toSerialize["documents"] = o.Documents
	toSerialize["processingErrors"] = o.ProcessingErrors
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["completedAt"] = o.CompletedAt
	toSerialize["transactionLocator"] = o.TransactionLocator
	toSerialize["segmentLocator"] = o.SegmentLocator
	toSerialize["isConsolidation"] = o.IsConsolidation
	return toSerialize, nil
}

func (o *DocumentsJob) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"referenceType",
		"referenceLocator",
		"documentTrigger",
		"status",
		"childrenJobs",
		"documents",
		"processingErrors",
		"createdAt",
		"createdBy",
		"completedAt",
		"transactionLocator",
		"segmentLocator",
		"isConsolidation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentsJob := _DocumentsJob{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentsJob)

	if err != nil {
		return err
	}

	*o = DocumentsJob(varDocumentsJob)

	return err
}

type NullableDocumentsJob struct {
	value *DocumentsJob
	isSet bool
}

func (v NullableDocumentsJob) Get() *DocumentsJob {
	return v.value
}

func (v *NullableDocumentsJob) Set(val *DocumentsJob) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsJob) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsJob(val *DocumentsJob) *NullableDocumentsJob {
	return &NullableDocumentsJob{value: val, isSet: true}
}

func (v NullableDocumentsJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
