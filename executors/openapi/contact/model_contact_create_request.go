/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contact

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ContactCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactCreateRequest{}

// ContactCreateRequest struct for ContactCreateRequest
type ContactCreateRequest struct {
	Type         string                            `json:"type"`
	Region       *string                           `json:"region,omitempty"`
	Data         map[string]map[string]interface{} `json:"data"`
	AutoValidate bool                              `json:"autoValidate"`
}

type _ContactCreateRequest ContactCreateRequest

// NewContactCreateRequest instantiates a new ContactCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactCreateRequest(type_ string, data map[string]map[string]interface{}, autoValidate bool) *ContactCreateRequest {
	this := ContactCreateRequest{}
	this.Type = type_
	this.Data = data
	this.AutoValidate = autoValidate
	return &this
}

// NewContactCreateRequestWithDefaults instantiates a new ContactCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactCreateRequestWithDefaults() *ContactCreateRequest {
	this := ContactCreateRequest{}
	return &this
}

// GetType returns the Type field value
func (o *ContactCreateRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ContactCreateRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ContactCreateRequest) SetType(v string) {
	o.Type = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ContactCreateRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreateRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ContactCreateRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ContactCreateRequest) SetRegion(v string) {
	o.Region = &v
}

// GetData returns the Data field value
func (o *ContactCreateRequest) GetData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ContactCreateRequest) GetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ContactCreateRequest) SetData(v map[string]map[string]interface{}) {
	o.Data = v
}

// GetAutoValidate returns the AutoValidate field value
func (o *ContactCreateRequest) GetAutoValidate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoValidate
}

// GetAutoValidateOk returns a tuple with the AutoValidate field value
// and a boolean to check if the value has been set.
func (o *ContactCreateRequest) GetAutoValidateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoValidate, true
}

// SetAutoValidate sets field value
func (o *ContactCreateRequest) SetAutoValidate(v bool) {
	o.AutoValidate = v
}

func (o ContactCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	toSerialize["data"] = o.Data
	toSerialize["autoValidate"] = o.AutoValidate
	return toSerialize, nil
}

func (o *ContactCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"data",
		"autoValidate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContactCreateRequest := _ContactCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContactCreateRequest)

	if err != nil {
		return err
	}

	*o = ContactCreateRequest(varContactCreateRequest)

	return err
}

type NullableContactCreateRequest struct {
	value *ContactCreateRequest
	isSet bool
}

func (v NullableContactCreateRequest) Get() *ContactCreateRequest {
	return v.value
}

func (v *NullableContactCreateRequest) Set(val *ContactCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContactCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContactCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactCreateRequest(val *ContactCreateRequest) *NullableContactCreateRequest {
	return &NullableContactCreateRequest{value: val, isSet: true}
}

func (v NullableContactCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
