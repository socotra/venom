/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package businessstats

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DeltaFilesGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeltaFilesGetResponse{}

// DeltaFilesGetResponse struct for DeltaFilesGetResponse
type DeltaFilesGetResponse struct {
	Version         int32       `json:"version"`
	CreateTableFile string      `json:"createTableFile"`
	DropTableFile   string      `json:"dropTableFile"`
	S3Bucket        string      `json:"s3Bucket"`
	DeltaFiles      []DeltaFile `json:"deltaFiles"`
}

type _DeltaFilesGetResponse DeltaFilesGetResponse

// NewDeltaFilesGetResponse instantiates a new DeltaFilesGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeltaFilesGetResponse(version int32, createTableFile string, dropTableFile string, s3Bucket string, deltaFiles []DeltaFile) *DeltaFilesGetResponse {
	this := DeltaFilesGetResponse{}
	this.Version = version
	this.CreateTableFile = createTableFile
	this.DropTableFile = dropTableFile
	this.S3Bucket = s3Bucket
	this.DeltaFiles = deltaFiles
	return &this
}

// NewDeltaFilesGetResponseWithDefaults instantiates a new DeltaFilesGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeltaFilesGetResponseWithDefaults() *DeltaFilesGetResponse {
	this := DeltaFilesGetResponse{}
	return &this
}

// GetVersion returns the Version field value
func (o *DeltaFilesGetResponse) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetResponse) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *DeltaFilesGetResponse) SetVersion(v int32) {
	o.Version = v
}

// GetCreateTableFile returns the CreateTableFile field value
func (o *DeltaFilesGetResponse) GetCreateTableFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreateTableFile
}

// GetCreateTableFileOk returns a tuple with the CreateTableFile field value
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetResponse) GetCreateTableFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateTableFile, true
}

// SetCreateTableFile sets field value
func (o *DeltaFilesGetResponse) SetCreateTableFile(v string) {
	o.CreateTableFile = v
}

// GetDropTableFile returns the DropTableFile field value
func (o *DeltaFilesGetResponse) GetDropTableFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DropTableFile
}

// GetDropTableFileOk returns a tuple with the DropTableFile field value
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetResponse) GetDropTableFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DropTableFile, true
}

// SetDropTableFile sets field value
func (o *DeltaFilesGetResponse) SetDropTableFile(v string) {
	o.DropTableFile = v
}

// GetS3Bucket returns the S3Bucket field value
func (o *DeltaFilesGetResponse) GetS3Bucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.S3Bucket
}

// GetS3BucketOk returns a tuple with the S3Bucket field value
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetResponse) GetS3BucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.S3Bucket, true
}

// SetS3Bucket sets field value
func (o *DeltaFilesGetResponse) SetS3Bucket(v string) {
	o.S3Bucket = v
}

// GetDeltaFiles returns the DeltaFiles field value
func (o *DeltaFilesGetResponse) GetDeltaFiles() []DeltaFile {
	if o == nil {
		var ret []DeltaFile
		return ret
	}

	return o.DeltaFiles
}

// GetDeltaFilesOk returns a tuple with the DeltaFiles field value
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetResponse) GetDeltaFilesOk() ([]DeltaFile, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeltaFiles, true
}

// SetDeltaFiles sets field value
func (o *DeltaFilesGetResponse) SetDeltaFiles(v []DeltaFile) {
	o.DeltaFiles = v
}

func (o DeltaFilesGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeltaFilesGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["createTableFile"] = o.CreateTableFile
	toSerialize["dropTableFile"] = o.DropTableFile
	toSerialize["s3Bucket"] = o.S3Bucket
	toSerialize["deltaFiles"] = o.DeltaFiles
	return toSerialize, nil
}

func (o *DeltaFilesGetResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"createTableFile",
		"dropTableFile",
		"s3Bucket",
		"deltaFiles",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeltaFilesGetResponse := _DeltaFilesGetResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeltaFilesGetResponse)

	if err != nil {
		return err
	}

	*o = DeltaFilesGetResponse(varDeltaFilesGetResponse)

	return err
}

type NullableDeltaFilesGetResponse struct {
	value *DeltaFilesGetResponse
	isSet bool
}

func (v NullableDeltaFilesGetResponse) Get() *DeltaFilesGetResponse {
	return v.value
}

func (v *NullableDeltaFilesGetResponse) Set(val *DeltaFilesGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeltaFilesGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeltaFilesGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeltaFilesGetResponse(val *DeltaFilesGetResponse) *NullableDeltaFilesGetResponse {
	return &NullableDeltaFilesGetResponse{value: val, isSet: true}
}

func (v NullableDeltaFilesGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeltaFilesGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
