/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package businessstats

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DeltaFilesGetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeltaFilesGetRequest{}

// DeltaFilesGetRequest struct for DeltaFilesGetRequest
type DeltaFilesGetRequest struct {
	TenantLocator       string  `json:"tenantLocator"`
	TransformationTable string  `json:"transformationTable"`
	DeltaFileType       *string `json:"deltaFileType,omitempty"`
	Version             *int32  `json:"version,omitempty"`
	StartTime           *int64  `json:"startTime,omitempty"`
	LastFile            *string `json:"lastFile,omitempty"`
}

type _DeltaFilesGetRequest DeltaFilesGetRequest

// NewDeltaFilesGetRequest instantiates a new DeltaFilesGetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeltaFilesGetRequest(tenantLocator string, transformationTable string) *DeltaFilesGetRequest {
	this := DeltaFilesGetRequest{}
	this.TenantLocator = tenantLocator
	this.TransformationTable = transformationTable
	return &this
}

// NewDeltaFilesGetRequestWithDefaults instantiates a new DeltaFilesGetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeltaFilesGetRequestWithDefaults() *DeltaFilesGetRequest {
	this := DeltaFilesGetRequest{}
	return &this
}

// GetTenantLocator returns the TenantLocator field value
func (o *DeltaFilesGetRequest) GetTenantLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantLocator
}

// GetTenantLocatorOk returns a tuple with the TenantLocator field value
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetRequest) GetTenantLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantLocator, true
}

// SetTenantLocator sets field value
func (o *DeltaFilesGetRequest) SetTenantLocator(v string) {
	o.TenantLocator = v
}

// GetTransformationTable returns the TransformationTable field value
func (o *DeltaFilesGetRequest) GetTransformationTable() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransformationTable
}

// GetTransformationTableOk returns a tuple with the TransformationTable field value
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetRequest) GetTransformationTableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransformationTable, true
}

// SetTransformationTable sets field value
func (o *DeltaFilesGetRequest) SetTransformationTable(v string) {
	o.TransformationTable = v
}

// GetDeltaFileType returns the DeltaFileType field value if set, zero value otherwise.
func (o *DeltaFilesGetRequest) GetDeltaFileType() string {
	if o == nil || IsNil(o.DeltaFileType) {
		var ret string
		return ret
	}
	return *o.DeltaFileType
}

// GetDeltaFileTypeOk returns a tuple with the DeltaFileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetRequest) GetDeltaFileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeltaFileType) {
		return nil, false
	}
	return o.DeltaFileType, true
}

// HasDeltaFileType returns a boolean if a field has been set.
func (o *DeltaFilesGetRequest) HasDeltaFileType() bool {
	if o != nil && !IsNil(o.DeltaFileType) {
		return true
	}

	return false
}

// SetDeltaFileType gets a reference to the given string and assigns it to the DeltaFileType field.
func (o *DeltaFilesGetRequest) SetDeltaFileType(v string) {
	o.DeltaFileType = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *DeltaFilesGetRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *DeltaFilesGetRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *DeltaFilesGetRequest) SetVersion(v int32) {
	o.Version = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DeltaFilesGetRequest) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetRequest) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DeltaFilesGetRequest) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *DeltaFilesGetRequest) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetLastFile returns the LastFile field value if set, zero value otherwise.
func (o *DeltaFilesGetRequest) GetLastFile() string {
	if o == nil || IsNil(o.LastFile) {
		var ret string
		return ret
	}
	return *o.LastFile
}

// GetLastFileOk returns a tuple with the LastFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeltaFilesGetRequest) GetLastFileOk() (*string, bool) {
	if o == nil || IsNil(o.LastFile) {
		return nil, false
	}
	return o.LastFile, true
}

// HasLastFile returns a boolean if a field has been set.
func (o *DeltaFilesGetRequest) HasLastFile() bool {
	if o != nil && !IsNil(o.LastFile) {
		return true
	}

	return false
}

// SetLastFile gets a reference to the given string and assigns it to the LastFile field.
func (o *DeltaFilesGetRequest) SetLastFile(v string) {
	o.LastFile = &v
}

func (o DeltaFilesGetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeltaFilesGetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantLocator"] = o.TenantLocator
	toSerialize["transformationTable"] = o.TransformationTable
	if !IsNil(o.DeltaFileType) {
		toSerialize["deltaFileType"] = o.DeltaFileType
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.LastFile) {
		toSerialize["lastFile"] = o.LastFile
	}
	return toSerialize, nil
}

func (o *DeltaFilesGetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantLocator",
		"transformationTable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeltaFilesGetRequest := _DeltaFilesGetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeltaFilesGetRequest)

	if err != nil {
		return err
	}

	*o = DeltaFilesGetRequest(varDeltaFilesGetRequest)

	return err
}

type NullableDeltaFilesGetRequest struct {
	value *DeltaFilesGetRequest
	isSet bool
}

func (v NullableDeltaFilesGetRequest) Get() *DeltaFilesGetRequest {
	return v.value
}

func (v *NullableDeltaFilesGetRequest) Set(val *DeltaFilesGetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeltaFilesGetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeltaFilesGetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeltaFilesGetRequest(val *DeltaFilesGetRequest) *NullableDeltaFilesGetRequest {
	return &NullableDeltaFilesGetRequest{value: val, isSet: true}
}

func (v NullableDeltaFilesGetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeltaFilesGetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
