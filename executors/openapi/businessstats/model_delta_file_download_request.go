/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package businessstats

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DeltaFileDownloadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeltaFileDownloadRequest{}

// DeltaFileDownloadRequest struct for DeltaFileDownloadRequest
type DeltaFileDownloadRequest struct {
	TenantLocator string `json:"tenantLocator"`
	S3Bucket      string `json:"s3Bucket"`
	FileName      string `json:"fileName"`
}

type _DeltaFileDownloadRequest DeltaFileDownloadRequest

// NewDeltaFileDownloadRequest instantiates a new DeltaFileDownloadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeltaFileDownloadRequest(tenantLocator string, s3Bucket string, fileName string) *DeltaFileDownloadRequest {
	this := DeltaFileDownloadRequest{}
	this.TenantLocator = tenantLocator
	this.S3Bucket = s3Bucket
	this.FileName = fileName
	return &this
}

// NewDeltaFileDownloadRequestWithDefaults instantiates a new DeltaFileDownloadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeltaFileDownloadRequestWithDefaults() *DeltaFileDownloadRequest {
	this := DeltaFileDownloadRequest{}
	return &this
}

// GetTenantLocator returns the TenantLocator field value
func (o *DeltaFileDownloadRequest) GetTenantLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantLocator
}

// GetTenantLocatorOk returns a tuple with the TenantLocator field value
// and a boolean to check if the value has been set.
func (o *DeltaFileDownloadRequest) GetTenantLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantLocator, true
}

// SetTenantLocator sets field value
func (o *DeltaFileDownloadRequest) SetTenantLocator(v string) {
	o.TenantLocator = v
}

// GetS3Bucket returns the S3Bucket field value
func (o *DeltaFileDownloadRequest) GetS3Bucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.S3Bucket
}

// GetS3BucketOk returns a tuple with the S3Bucket field value
// and a boolean to check if the value has been set.
func (o *DeltaFileDownloadRequest) GetS3BucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.S3Bucket, true
}

// SetS3Bucket sets field value
func (o *DeltaFileDownloadRequest) SetS3Bucket(v string) {
	o.S3Bucket = v
}

// GetFileName returns the FileName field value
func (o *DeltaFileDownloadRequest) GetFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value
// and a boolean to check if the value has been set.
func (o *DeltaFileDownloadRequest) GetFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileName, true
}

// SetFileName sets field value
func (o *DeltaFileDownloadRequest) SetFileName(v string) {
	o.FileName = v
}

func (o DeltaFileDownloadRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeltaFileDownloadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantLocator"] = o.TenantLocator
	toSerialize["s3Bucket"] = o.S3Bucket
	toSerialize["fileName"] = o.FileName
	return toSerialize, nil
}

func (o *DeltaFileDownloadRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantLocator",
		"s3Bucket",
		"fileName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeltaFileDownloadRequest := _DeltaFileDownloadRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeltaFileDownloadRequest)

	if err != nil {
		return err
	}

	*o = DeltaFileDownloadRequest(varDeltaFileDownloadRequest)

	return err
}

type NullableDeltaFileDownloadRequest struct {
	value *DeltaFileDownloadRequest
	isSet bool
}

func (v NullableDeltaFileDownloadRequest) Get() *DeltaFileDownloadRequest {
	return v.value
}

func (v *NullableDeltaFileDownloadRequest) Set(val *DeltaFileDownloadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeltaFileDownloadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeltaFileDownloadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeltaFileDownloadRequest(val *DeltaFileDownloadRequest) *NullableDeltaFileDownloadRequest {
	return &NullableDeltaFileDownloadRequest{value: val, isSet: true}
}

func (v NullableDeltaFileDownloadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeltaFileDownloadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
