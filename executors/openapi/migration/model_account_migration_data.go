/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AccountMigrationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountMigrationData{}

// AccountMigrationData struct for AccountMigrationData
type AccountMigrationData struct {
	Id                         string                            `json:"id"`
	AccountType                string                            `json:"accountType"`
	Data                       map[string]map[string]interface{} `json:"data"`
	CreatedAt                  time.Time                         `json:"createdAt"`
	CreatedBy                  string                            `json:"createdBy"`
	DelinquencyPlanName        string                            `json:"delinquencyPlanName"`
	AutoRenewalPlanName        string                            `json:"autoRenewalPlanName"`
	ExcessCreditPlanName       string                            `json:"excessCreditPlanName"`
	ShortfallTolerancePlanName string                            `json:"shortfallTolerancePlanName"`
	Preferences                Preferences                       `json:"preferences"`
	BillingLevel               string                            `json:"billingLevel"`
}

type _AccountMigrationData AccountMigrationData

// NewAccountMigrationData instantiates a new AccountMigrationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountMigrationData(id string, accountType string, data map[string]map[string]interface{}, createdAt time.Time, createdBy string, delinquencyPlanName string, autoRenewalPlanName string, excessCreditPlanName string, shortfallTolerancePlanName string, preferences Preferences, billingLevel string) *AccountMigrationData {
	this := AccountMigrationData{}
	this.Id = id
	this.AccountType = accountType
	this.Data = data
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.DelinquencyPlanName = delinquencyPlanName
	this.AutoRenewalPlanName = autoRenewalPlanName
	this.ExcessCreditPlanName = excessCreditPlanName
	this.ShortfallTolerancePlanName = shortfallTolerancePlanName
	this.Preferences = preferences
	this.BillingLevel = billingLevel
	return &this
}

// NewAccountMigrationDataWithDefaults instantiates a new AccountMigrationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountMigrationDataWithDefaults() *AccountMigrationData {
	this := AccountMigrationData{}
	return &this
}

// GetId returns the Id field value
func (o *AccountMigrationData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountMigrationData) SetId(v string) {
	o.Id = v
}

// GetAccountType returns the AccountType field value
func (o *AccountMigrationData) GetAccountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *AccountMigrationData) SetAccountType(v string) {
	o.AccountType = v
}

// GetData returns the Data field value
func (o *AccountMigrationData) GetData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AccountMigrationData) SetData(v map[string]map[string]interface{}) {
	o.Data = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AccountMigrationData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AccountMigrationData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *AccountMigrationData) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *AccountMigrationData) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDelinquencyPlanName returns the DelinquencyPlanName field value
func (o *AccountMigrationData) GetDelinquencyPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DelinquencyPlanName
}

// GetDelinquencyPlanNameOk returns a tuple with the DelinquencyPlanName field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetDelinquencyPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelinquencyPlanName, true
}

// SetDelinquencyPlanName sets field value
func (o *AccountMigrationData) SetDelinquencyPlanName(v string) {
	o.DelinquencyPlanName = v
}

// GetAutoRenewalPlanName returns the AutoRenewalPlanName field value
func (o *AccountMigrationData) GetAutoRenewalPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AutoRenewalPlanName
}

// GetAutoRenewalPlanNameOk returns a tuple with the AutoRenewalPlanName field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetAutoRenewalPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoRenewalPlanName, true
}

// SetAutoRenewalPlanName sets field value
func (o *AccountMigrationData) SetAutoRenewalPlanName(v string) {
	o.AutoRenewalPlanName = v
}

// GetExcessCreditPlanName returns the ExcessCreditPlanName field value
func (o *AccountMigrationData) GetExcessCreditPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExcessCreditPlanName
}

// GetExcessCreditPlanNameOk returns a tuple with the ExcessCreditPlanName field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetExcessCreditPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExcessCreditPlanName, true
}

// SetExcessCreditPlanName sets field value
func (o *AccountMigrationData) SetExcessCreditPlanName(v string) {
	o.ExcessCreditPlanName = v
}

// GetShortfallTolerancePlanName returns the ShortfallTolerancePlanName field value
func (o *AccountMigrationData) GetShortfallTolerancePlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortfallTolerancePlanName
}

// GetShortfallTolerancePlanNameOk returns a tuple with the ShortfallTolerancePlanName field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetShortfallTolerancePlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShortfallTolerancePlanName, true
}

// SetShortfallTolerancePlanName sets field value
func (o *AccountMigrationData) SetShortfallTolerancePlanName(v string) {
	o.ShortfallTolerancePlanName = v
}

// GetPreferences returns the Preferences field value
func (o *AccountMigrationData) GetPreferences() Preferences {
	if o == nil {
		var ret Preferences
		return ret
	}

	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetPreferencesOk() (*Preferences, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Preferences, true
}

// SetPreferences sets field value
func (o *AccountMigrationData) SetPreferences(v Preferences) {
	o.Preferences = v
}

// GetBillingLevel returns the BillingLevel field value
func (o *AccountMigrationData) GetBillingLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingLevel
}

// GetBillingLevelOk returns a tuple with the BillingLevel field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationData) GetBillingLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingLevel, true
}

// SetBillingLevel sets field value
func (o *AccountMigrationData) SetBillingLevel(v string) {
	o.BillingLevel = v
}

func (o AccountMigrationData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountMigrationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["accountType"] = o.AccountType
	toSerialize["data"] = o.Data
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["delinquencyPlanName"] = o.DelinquencyPlanName
	toSerialize["autoRenewalPlanName"] = o.AutoRenewalPlanName
	toSerialize["excessCreditPlanName"] = o.ExcessCreditPlanName
	toSerialize["shortfallTolerancePlanName"] = o.ShortfallTolerancePlanName
	toSerialize["preferences"] = o.Preferences
	toSerialize["billingLevel"] = o.BillingLevel
	return toSerialize, nil
}

func (o *AccountMigrationData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"accountType",
		"data",
		"createdAt",
		"createdBy",
		"delinquencyPlanName",
		"autoRenewalPlanName",
		"excessCreditPlanName",
		"shortfallTolerancePlanName",
		"preferences",
		"billingLevel",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountMigrationData := _AccountMigrationData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountMigrationData)

	if err != nil {
		return err
	}

	*o = AccountMigrationData(varAccountMigrationData)

	return err
}

type NullableAccountMigrationData struct {
	value *AccountMigrationData
	isSet bool
}

func (v NullableAccountMigrationData) Get() *AccountMigrationData {
	return v.value
}

func (v *NullableAccountMigrationData) Set(val *AccountMigrationData) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountMigrationData) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountMigrationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountMigrationData(val *AccountMigrationData) *NullableAccountMigrationData {
	return &NullableAccountMigrationData{value: val, isSet: true}
}

func (v NullableAccountMigrationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountMigrationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
