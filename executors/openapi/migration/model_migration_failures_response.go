/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MigrationFailuresResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationFailuresResponse{}

// MigrationFailuresResponse struct for MigrationFailuresResponse
type MigrationFailuresResponse struct {
	AccountLocator    string                  `json:"accountLocator"`
	AccountOriginalId string                  `json:"accountOriginalId"`
	AccountError      NullableErrorDetails    `json:"accountError,omitempty"`
	Policies          map[string]ErrorDetails `json:"policies"`
	Invoices          map[string]ErrorDetails `json:"invoices"`
	Payments          map[string]ErrorDetails `json:"payments"`
	Disbursements     map[string]ErrorDetails `json:"disbursements"`
}

type _MigrationFailuresResponse MigrationFailuresResponse

// NewMigrationFailuresResponse instantiates a new MigrationFailuresResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationFailuresResponse(accountLocator string, accountOriginalId string, policies map[string]ErrorDetails, invoices map[string]ErrorDetails, payments map[string]ErrorDetails, disbursements map[string]ErrorDetails) *MigrationFailuresResponse {
	this := MigrationFailuresResponse{}
	this.AccountLocator = accountLocator
	this.AccountOriginalId = accountOriginalId
	var accountError = ErrorDetails{}
	this.AccountError = *NewNullableErrorDetails(&accountError)
	this.Policies = policies
	this.Invoices = invoices
	this.Payments = payments
	this.Disbursements = disbursements
	return &this
}

// NewMigrationFailuresResponseWithDefaults instantiates a new MigrationFailuresResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationFailuresResponseWithDefaults() *MigrationFailuresResponse {
	this := MigrationFailuresResponse{}
	var accountError = ErrorDetails{}
	this.AccountError = *NewNullableErrorDetails(&accountError)
	return &this
}

// GetAccountLocator returns the AccountLocator field value
func (o *MigrationFailuresResponse) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *MigrationFailuresResponse) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *MigrationFailuresResponse) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetAccountOriginalId returns the AccountOriginalId field value
func (o *MigrationFailuresResponse) GetAccountOriginalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountOriginalId
}

// GetAccountOriginalIdOk returns a tuple with the AccountOriginalId field value
// and a boolean to check if the value has been set.
func (o *MigrationFailuresResponse) GetAccountOriginalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountOriginalId, true
}

// SetAccountOriginalId sets field value
func (o *MigrationFailuresResponse) SetAccountOriginalId(v string) {
	o.AccountOriginalId = v
}

// GetAccountError returns the AccountError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MigrationFailuresResponse) GetAccountError() ErrorDetails {
	if o == nil || IsNil(o.AccountError.Get()) {
		var ret ErrorDetails
		return ret
	}
	return *o.AccountError.Get()
}

// GetAccountErrorOk returns a tuple with the AccountError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationFailuresResponse) GetAccountErrorOk() (*ErrorDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountError.Get(), o.AccountError.IsSet()
}

// HasAccountError returns a boolean if a field has been set.
func (o *MigrationFailuresResponse) HasAccountError() bool {
	if o != nil && o.AccountError.IsSet() {
		return true
	}

	return false
}

// SetAccountError gets a reference to the given NullableErrorDetails and assigns it to the AccountError field.
func (o *MigrationFailuresResponse) SetAccountError(v ErrorDetails) {
	o.AccountError.Set(&v)
}

// SetAccountErrorNil sets the value for AccountError to be an explicit nil
func (o *MigrationFailuresResponse) SetAccountErrorNil() {
	o.AccountError.Set(nil)
}

// UnsetAccountError ensures that no value is present for AccountError, not even an explicit nil
func (o *MigrationFailuresResponse) UnsetAccountError() {
	o.AccountError.Unset()
}

// GetPolicies returns the Policies field value
// If the value is explicit nil, the zero value for map[string]ErrorDetails will be returned
func (o *MigrationFailuresResponse) GetPolicies() map[string]ErrorDetails {
	if o == nil {
		var ret map[string]ErrorDetails
		return ret
	}

	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationFailuresResponse) GetPoliciesOk() (*map[string]ErrorDetails, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return &o.Policies, true
}

// SetPolicies sets field value
func (o *MigrationFailuresResponse) SetPolicies(v map[string]ErrorDetails) {
	o.Policies = v
}

// GetInvoices returns the Invoices field value
// If the value is explicit nil, the zero value for map[string]ErrorDetails will be returned
func (o *MigrationFailuresResponse) GetInvoices() map[string]ErrorDetails {
	if o == nil {
		var ret map[string]ErrorDetails
		return ret
	}

	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationFailuresResponse) GetInvoicesOk() (*map[string]ErrorDetails, bool) {
	if o == nil || IsNil(o.Invoices) {
		return nil, false
	}
	return &o.Invoices, true
}

// SetInvoices sets field value
func (o *MigrationFailuresResponse) SetInvoices(v map[string]ErrorDetails) {
	o.Invoices = v
}

// GetPayments returns the Payments field value
// If the value is explicit nil, the zero value for map[string]ErrorDetails will be returned
func (o *MigrationFailuresResponse) GetPayments() map[string]ErrorDetails {
	if o == nil {
		var ret map[string]ErrorDetails
		return ret
	}

	return o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationFailuresResponse) GetPaymentsOk() (*map[string]ErrorDetails, bool) {
	if o == nil || IsNil(o.Payments) {
		return nil, false
	}
	return &o.Payments, true
}

// SetPayments sets field value
func (o *MigrationFailuresResponse) SetPayments(v map[string]ErrorDetails) {
	o.Payments = v
}

// GetDisbursements returns the Disbursements field value
// If the value is explicit nil, the zero value for map[string]ErrorDetails will be returned
func (o *MigrationFailuresResponse) GetDisbursements() map[string]ErrorDetails {
	if o == nil {
		var ret map[string]ErrorDetails
		return ret
	}

	return o.Disbursements
}

// GetDisbursementsOk returns a tuple with the Disbursements field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MigrationFailuresResponse) GetDisbursementsOk() (*map[string]ErrorDetails, bool) {
	if o == nil || IsNil(o.Disbursements) {
		return nil, false
	}
	return &o.Disbursements, true
}

// SetDisbursements sets field value
func (o *MigrationFailuresResponse) SetDisbursements(v map[string]ErrorDetails) {
	o.Disbursements = v
}

func (o MigrationFailuresResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationFailuresResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountLocator"] = o.AccountLocator
	toSerialize["accountOriginalId"] = o.AccountOriginalId
	if o.AccountError.IsSet() {
		toSerialize["accountError"] = o.AccountError.Get()
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Invoices != nil {
		toSerialize["invoices"] = o.Invoices
	}
	if o.Payments != nil {
		toSerialize["payments"] = o.Payments
	}
	if o.Disbursements != nil {
		toSerialize["disbursements"] = o.Disbursements
	}
	return toSerialize, nil
}

func (o *MigrationFailuresResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountLocator",
		"accountOriginalId",
		"policies",
		"invoices",
		"payments",
		"disbursements",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMigrationFailuresResponse := _MigrationFailuresResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMigrationFailuresResponse)

	if err != nil {
		return err
	}

	*o = MigrationFailuresResponse(varMigrationFailuresResponse)

	return err
}

type NullableMigrationFailuresResponse struct {
	value *MigrationFailuresResponse
	isSet bool
}

func (v NullableMigrationFailuresResponse) Get() *MigrationFailuresResponse {
	return v.value
}

func (v *NullableMigrationFailuresResponse) Set(val *MigrationFailuresResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationFailuresResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationFailuresResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationFailuresResponse(val *MigrationFailuresResponse) *NullableMigrationFailuresResponse {
	return &NullableMigrationFailuresResponse{value: val, isSet: true}
}

func (v NullableMigrationFailuresResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationFailuresResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
