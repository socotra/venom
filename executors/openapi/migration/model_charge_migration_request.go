/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ChargeMigrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargeMigrationRequest{}

// ChargeMigrationRequest struct for ChargeMigrationRequest
type ChargeMigrationRequest struct {
	Rate             float32                           `json:"rate"`
	ReferenceRate    float32                           `json:"referenceRate"`
	ChargeType       string                            `json:"chargeType"`
	Tag              string                            `json:"tag"`
	InstallmentItems []InstallmentItemMigrationRequest `json:"installmentItems"`
}

type _ChargeMigrationRequest ChargeMigrationRequest

// NewChargeMigrationRequest instantiates a new ChargeMigrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargeMigrationRequest(rate float32, referenceRate float32, chargeType string, tag string, installmentItems []InstallmentItemMigrationRequest) *ChargeMigrationRequest {
	this := ChargeMigrationRequest{}
	this.Rate = rate
	this.ReferenceRate = referenceRate
	this.ChargeType = chargeType
	this.Tag = tag
	this.InstallmentItems = installmentItems
	return &this
}

// NewChargeMigrationRequestWithDefaults instantiates a new ChargeMigrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargeMigrationRequestWithDefaults() *ChargeMigrationRequest {
	this := ChargeMigrationRequest{}
	return &this
}

// GetRate returns the Rate field value
func (o *ChargeMigrationRequest) GetRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *ChargeMigrationRequest) GetRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *ChargeMigrationRequest) SetRate(v float32) {
	o.Rate = v
}

// GetReferenceRate returns the ReferenceRate field value
func (o *ChargeMigrationRequest) GetReferenceRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReferenceRate
}

// GetReferenceRateOk returns a tuple with the ReferenceRate field value
// and a boolean to check if the value has been set.
func (o *ChargeMigrationRequest) GetReferenceRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceRate, true
}

// SetReferenceRate sets field value
func (o *ChargeMigrationRequest) SetReferenceRate(v float32) {
	o.ReferenceRate = v
}

// GetChargeType returns the ChargeType field value
func (o *ChargeMigrationRequest) GetChargeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value
// and a boolean to check if the value has been set.
func (o *ChargeMigrationRequest) GetChargeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargeType, true
}

// SetChargeType sets field value
func (o *ChargeMigrationRequest) SetChargeType(v string) {
	o.ChargeType = v
}

// GetTag returns the Tag field value
func (o *ChargeMigrationRequest) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *ChargeMigrationRequest) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *ChargeMigrationRequest) SetTag(v string) {
	o.Tag = v
}

// GetInstallmentItems returns the InstallmentItems field value
func (o *ChargeMigrationRequest) GetInstallmentItems() []InstallmentItemMigrationRequest {
	if o == nil {
		var ret []InstallmentItemMigrationRequest
		return ret
	}

	return o.InstallmentItems
}

// GetInstallmentItemsOk returns a tuple with the InstallmentItems field value
// and a boolean to check if the value has been set.
func (o *ChargeMigrationRequest) GetInstallmentItemsOk() ([]InstallmentItemMigrationRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstallmentItems, true
}

// SetInstallmentItems sets field value
func (o *ChargeMigrationRequest) SetInstallmentItems(v []InstallmentItemMigrationRequest) {
	o.InstallmentItems = v
}

func (o ChargeMigrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargeMigrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rate"] = o.Rate
	toSerialize["referenceRate"] = o.ReferenceRate
	toSerialize["chargeType"] = o.ChargeType
	toSerialize["tag"] = o.Tag
	toSerialize["installmentItems"] = o.InstallmentItems
	return toSerialize, nil
}

func (o *ChargeMigrationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rate",
		"referenceRate",
		"chargeType",
		"tag",
		"installmentItems",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChargeMigrationRequest := _ChargeMigrationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChargeMigrationRequest)

	if err != nil {
		return err
	}

	*o = ChargeMigrationRequest(varChargeMigrationRequest)

	return err
}

type NullableChargeMigrationRequest struct {
	value *ChargeMigrationRequest
	isSet bool
}

func (v NullableChargeMigrationRequest) Get() *ChargeMigrationRequest {
	return v.value
}

func (v *NullableChargeMigrationRequest) Set(val *ChargeMigrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChargeMigrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChargeMigrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargeMigrationRequest(val *ChargeMigrationRequest) *NullableChargeMigrationRequest {
	return &NullableChargeMigrationRequest{value: val, isSet: true}
}

func (v NullableChargeMigrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargeMigrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
