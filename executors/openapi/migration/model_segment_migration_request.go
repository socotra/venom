/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the SegmentMigrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentMigrationRequest{}

// SegmentMigrationRequest struct for SegmentMigrationRequest
type SegmentMigrationRequest struct {
	StartTime   time.Time               `json:"startTime"`
	RootElement ElementMigrationRequest `json:"rootElement"`
	SegmentType string                  `json:"segmentType"`
}

type _SegmentMigrationRequest SegmentMigrationRequest

// NewSegmentMigrationRequest instantiates a new SegmentMigrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentMigrationRequest(startTime time.Time, rootElement ElementMigrationRequest, segmentType string) *SegmentMigrationRequest {
	this := SegmentMigrationRequest{}
	this.StartTime = startTime
	this.RootElement = rootElement
	this.SegmentType = segmentType
	return &this
}

// NewSegmentMigrationRequestWithDefaults instantiates a new SegmentMigrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentMigrationRequestWithDefaults() *SegmentMigrationRequest {
	this := SegmentMigrationRequest{}
	return &this
}

// GetStartTime returns the StartTime field value
func (o *SegmentMigrationRequest) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *SegmentMigrationRequest) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *SegmentMigrationRequest) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetRootElement returns the RootElement field value
func (o *SegmentMigrationRequest) GetRootElement() ElementMigrationRequest {
	if o == nil {
		var ret ElementMigrationRequest
		return ret
	}

	return o.RootElement
}

// GetRootElementOk returns a tuple with the RootElement field value
// and a boolean to check if the value has been set.
func (o *SegmentMigrationRequest) GetRootElementOk() (*ElementMigrationRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootElement, true
}

// SetRootElement sets field value
func (o *SegmentMigrationRequest) SetRootElement(v ElementMigrationRequest) {
	o.RootElement = v
}

// GetSegmentType returns the SegmentType field value
func (o *SegmentMigrationRequest) GetSegmentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentType
}

// GetSegmentTypeOk returns a tuple with the SegmentType field value
// and a boolean to check if the value has been set.
func (o *SegmentMigrationRequest) GetSegmentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SegmentType, true
}

// SetSegmentType sets field value
func (o *SegmentMigrationRequest) SetSegmentType(v string) {
	o.SegmentType = v
}

func (o SegmentMigrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentMigrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startTime"] = o.StartTime
	toSerialize["rootElement"] = o.RootElement
	toSerialize["segmentType"] = o.SegmentType
	return toSerialize, nil
}

func (o *SegmentMigrationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startTime",
		"rootElement",
		"segmentType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSegmentMigrationRequest := _SegmentMigrationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSegmentMigrationRequest)

	if err != nil {
		return err
	}

	*o = SegmentMigrationRequest(varSegmentMigrationRequest)

	return err
}

type NullableSegmentMigrationRequest struct {
	value *SegmentMigrationRequest
	isSet bool
}

func (v NullableSegmentMigrationRequest) Get() *SegmentMigrationRequest {
	return v.value
}

func (v *NullableSegmentMigrationRequest) Set(val *SegmentMigrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentMigrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentMigrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentMigrationRequest(val *SegmentMigrationRequest) *NullableSegmentMigrationRequest {
	return &NullableSegmentMigrationRequest{value: val, isSet: true}
}

func (v NullableSegmentMigrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentMigrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
