/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the TransactionMigrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionMigrationRequest{}

// TransactionMigrationRequest struct for TransactionMigrationRequest
type TransactionMigrationRequest struct {
	TransactionType string                        `json:"transactionType"`
	CreatedAt       time.Time                     `json:"createdAt"`
	CreatedBy       string                        `json:"createdBy"`
	IssuedTime      time.Time                     `json:"issuedTime"`
	Segment         *SegmentMigrationRequest      `json:"segment,omitempty"`
	Installments    []InstallmentMigrationRequest `json:"installments"`
}

type _TransactionMigrationRequest TransactionMigrationRequest

// NewTransactionMigrationRequest instantiates a new TransactionMigrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionMigrationRequest(transactionType string, createdAt time.Time, createdBy string, issuedTime time.Time, installments []InstallmentMigrationRequest) *TransactionMigrationRequest {
	this := TransactionMigrationRequest{}
	this.TransactionType = transactionType
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.IssuedTime = issuedTime
	this.Installments = installments
	return &this
}

// NewTransactionMigrationRequestWithDefaults instantiates a new TransactionMigrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionMigrationRequestWithDefaults() *TransactionMigrationRequest {
	this := TransactionMigrationRequest{}
	return &this
}

// GetTransactionType returns the TransactionType field value
func (o *TransactionMigrationRequest) GetTransactionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value
// and a boolean to check if the value has been set.
func (o *TransactionMigrationRequest) GetTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionType, true
}

// SetTransactionType sets field value
func (o *TransactionMigrationRequest) SetTransactionType(v string) {
	o.TransactionType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TransactionMigrationRequest) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TransactionMigrationRequest) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TransactionMigrationRequest) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *TransactionMigrationRequest) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *TransactionMigrationRequest) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *TransactionMigrationRequest) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetIssuedTime returns the IssuedTime field value
func (o *TransactionMigrationRequest) GetIssuedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.IssuedTime
}

// GetIssuedTimeOk returns a tuple with the IssuedTime field value
// and a boolean to check if the value has been set.
func (o *TransactionMigrationRequest) GetIssuedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuedTime, true
}

// SetIssuedTime sets field value
func (o *TransactionMigrationRequest) SetIssuedTime(v time.Time) {
	o.IssuedTime = v
}

// GetSegment returns the Segment field value if set, zero value otherwise.
func (o *TransactionMigrationRequest) GetSegment() SegmentMigrationRequest {
	if o == nil || IsNil(o.Segment) {
		var ret SegmentMigrationRequest
		return ret
	}
	return *o.Segment
}

// GetSegmentOk returns a tuple with the Segment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMigrationRequest) GetSegmentOk() (*SegmentMigrationRequest, bool) {
	if o == nil || IsNil(o.Segment) {
		return nil, false
	}
	return o.Segment, true
}

// HasSegment returns a boolean if a field has been set.
func (o *TransactionMigrationRequest) HasSegment() bool {
	if o != nil && !IsNil(o.Segment) {
		return true
	}

	return false
}

// SetSegment gets a reference to the given SegmentMigrationRequest and assigns it to the Segment field.
func (o *TransactionMigrationRequest) SetSegment(v SegmentMigrationRequest) {
	o.Segment = &v
}

// GetInstallments returns the Installments field value
func (o *TransactionMigrationRequest) GetInstallments() []InstallmentMigrationRequest {
	if o == nil {
		var ret []InstallmentMigrationRequest
		return ret
	}

	return o.Installments
}

// GetInstallmentsOk returns a tuple with the Installments field value
// and a boolean to check if the value has been set.
func (o *TransactionMigrationRequest) GetInstallmentsOk() ([]InstallmentMigrationRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Installments, true
}

// SetInstallments sets field value
func (o *TransactionMigrationRequest) SetInstallments(v []InstallmentMigrationRequest) {
	o.Installments = v
}

func (o TransactionMigrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionMigrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionType"] = o.TransactionType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["issuedTime"] = o.IssuedTime
	if !IsNil(o.Segment) {
		toSerialize["segment"] = o.Segment
	}
	toSerialize["installments"] = o.Installments
	return toSerialize, nil
}

func (o *TransactionMigrationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"transactionType",
		"createdAt",
		"createdBy",
		"issuedTime",
		"installments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionMigrationRequest := _TransactionMigrationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionMigrationRequest)

	if err != nil {
		return err
	}

	*o = TransactionMigrationRequest(varTransactionMigrationRequest)

	return err
}

type NullableTransactionMigrationRequest struct {
	value *TransactionMigrationRequest
	isSet bool
}

func (v NullableTransactionMigrationRequest) Get() *TransactionMigrationRequest {
	return v.value
}

func (v *NullableTransactionMigrationRequest) Set(val *TransactionMigrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionMigrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionMigrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionMigrationRequest(val *TransactionMigrationRequest) *NullableTransactionMigrationRequest {
	return &NullableTransactionMigrationRequest{value: val, isSet: true}
}

func (v NullableTransactionMigrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionMigrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
