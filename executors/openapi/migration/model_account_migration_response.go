/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AccountMigrationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountMigrationResponse{}

// AccountMigrationResponse struct for AccountMigrationResponse
type AccountMigrationResponse struct {
	AccountLocator        *string   `json:"accountLocator,omitempty"`
	AccountMigrationState string    `json:"accountMigrationState"`
	ProcessedItems        int32     `json:"processedItems"`
	ErrorItems            int32     `json:"errorItems"`
	TotalItems            int32     `json:"totalItems"`
	LastUpdated           time.Time `json:"lastUpdated"`
}

type _AccountMigrationResponse AccountMigrationResponse

// NewAccountMigrationResponse instantiates a new AccountMigrationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountMigrationResponse(accountMigrationState string, processedItems int32, errorItems int32, totalItems int32, lastUpdated time.Time) *AccountMigrationResponse {
	this := AccountMigrationResponse{}
	this.AccountMigrationState = accountMigrationState
	this.ProcessedItems = processedItems
	this.ErrorItems = errorItems
	this.TotalItems = totalItems
	this.LastUpdated = lastUpdated
	return &this
}

// NewAccountMigrationResponseWithDefaults instantiates a new AccountMigrationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountMigrationResponseWithDefaults() *AccountMigrationResponse {
	this := AccountMigrationResponse{}
	return &this
}

// GetAccountLocator returns the AccountLocator field value if set, zero value otherwise.
func (o *AccountMigrationResponse) GetAccountLocator() string {
	if o == nil || IsNil(o.AccountLocator) {
		var ret string
		return ret
	}
	return *o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMigrationResponse) GetAccountLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.AccountLocator) {
		return nil, false
	}
	return o.AccountLocator, true
}

// HasAccountLocator returns a boolean if a field has been set.
func (o *AccountMigrationResponse) HasAccountLocator() bool {
	if o != nil && !IsNil(o.AccountLocator) {
		return true
	}

	return false
}

// SetAccountLocator gets a reference to the given string and assigns it to the AccountLocator field.
func (o *AccountMigrationResponse) SetAccountLocator(v string) {
	o.AccountLocator = &v
}

// GetAccountMigrationState returns the AccountMigrationState field value
func (o *AccountMigrationResponse) GetAccountMigrationState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountMigrationState
}

// GetAccountMigrationStateOk returns a tuple with the AccountMigrationState field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationResponse) GetAccountMigrationStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountMigrationState, true
}

// SetAccountMigrationState sets field value
func (o *AccountMigrationResponse) SetAccountMigrationState(v string) {
	o.AccountMigrationState = v
}

// GetProcessedItems returns the ProcessedItems field value
func (o *AccountMigrationResponse) GetProcessedItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProcessedItems
}

// GetProcessedItemsOk returns a tuple with the ProcessedItems field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationResponse) GetProcessedItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessedItems, true
}

// SetProcessedItems sets field value
func (o *AccountMigrationResponse) SetProcessedItems(v int32) {
	o.ProcessedItems = v
}

// GetErrorItems returns the ErrorItems field value
func (o *AccountMigrationResponse) GetErrorItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ErrorItems
}

// GetErrorItemsOk returns a tuple with the ErrorItems field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationResponse) GetErrorItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorItems, true
}

// SetErrorItems sets field value
func (o *AccountMigrationResponse) SetErrorItems(v int32) {
	o.ErrorItems = v
}

// GetTotalItems returns the TotalItems field value
func (o *AccountMigrationResponse) GetTotalItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationResponse) GetTotalItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalItems, true
}

// SetTotalItems sets field value
func (o *AccountMigrationResponse) SetTotalItems(v int32) {
	o.TotalItems = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *AccountMigrationResponse) GetLastUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationResponse) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *AccountMigrationResponse) SetLastUpdated(v time.Time) {
	o.LastUpdated = v
}

func (o AccountMigrationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountMigrationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountLocator) {
		toSerialize["accountLocator"] = o.AccountLocator
	}
	toSerialize["accountMigrationState"] = o.AccountMigrationState
	toSerialize["processedItems"] = o.ProcessedItems
	toSerialize["errorItems"] = o.ErrorItems
	toSerialize["totalItems"] = o.TotalItems
	toSerialize["lastUpdated"] = o.LastUpdated
	return toSerialize, nil
}

func (o *AccountMigrationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountMigrationState",
		"processedItems",
		"errorItems",
		"totalItems",
		"lastUpdated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountMigrationResponse := _AccountMigrationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountMigrationResponse)

	if err != nil {
		return err
	}

	*o = AccountMigrationResponse(varAccountMigrationResponse)

	return err
}

type NullableAccountMigrationResponse struct {
	value *AccountMigrationResponse
	isSet bool
}

func (v NullableAccountMigrationResponse) Get() *AccountMigrationResponse {
	return v.value
}

func (v *NullableAccountMigrationResponse) Set(val *AccountMigrationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountMigrationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountMigrationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountMigrationResponse(val *AccountMigrationResponse) *NullableAccountMigrationResponse {
	return &NullableAccountMigrationResponse{value: val, isSet: true}
}

func (v NullableAccountMigrationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountMigrationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
