/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccountMigrationIdMappings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountMigrationIdMappings{}

// AccountMigrationIdMappings struct for AccountMigrationIdMappings
type AccountMigrationIdMappings struct {
	MigrationLocator  string                   `json:"migrationLocator"`
	AccountLocator    string                   `json:"accountLocator"`
	OriginalAccountId string                   `json:"originalAccountId"`
	Policies          map[string]MappingObject `json:"policies"`
	Invoices          map[string]MappingObject `json:"invoices"`
	Payments          map[string]MappingObject `json:"payments"`
	Disbursements     map[string]MappingObject `json:"disbursements"`
}

type _AccountMigrationIdMappings AccountMigrationIdMappings

// NewAccountMigrationIdMappings instantiates a new AccountMigrationIdMappings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountMigrationIdMappings(migrationLocator string, accountLocator string, originalAccountId string, policies map[string]MappingObject, invoices map[string]MappingObject, payments map[string]MappingObject, disbursements map[string]MappingObject) *AccountMigrationIdMappings {
	this := AccountMigrationIdMappings{}
	this.MigrationLocator = migrationLocator
	this.AccountLocator = accountLocator
	this.OriginalAccountId = originalAccountId
	this.Policies = policies
	this.Invoices = invoices
	this.Payments = payments
	this.Disbursements = disbursements
	return &this
}

// NewAccountMigrationIdMappingsWithDefaults instantiates a new AccountMigrationIdMappings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountMigrationIdMappingsWithDefaults() *AccountMigrationIdMappings {
	this := AccountMigrationIdMappings{}
	return &this
}

// GetMigrationLocator returns the MigrationLocator field value
func (o *AccountMigrationIdMappings) GetMigrationLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MigrationLocator
}

// GetMigrationLocatorOk returns a tuple with the MigrationLocator field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationIdMappings) GetMigrationLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MigrationLocator, true
}

// SetMigrationLocator sets field value
func (o *AccountMigrationIdMappings) SetMigrationLocator(v string) {
	o.MigrationLocator = v
}

// GetAccountLocator returns the AccountLocator field value
func (o *AccountMigrationIdMappings) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationIdMappings) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *AccountMigrationIdMappings) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetOriginalAccountId returns the OriginalAccountId field value
func (o *AccountMigrationIdMappings) GetOriginalAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalAccountId
}

// GetOriginalAccountIdOk returns a tuple with the OriginalAccountId field value
// and a boolean to check if the value has been set.
func (o *AccountMigrationIdMappings) GetOriginalAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalAccountId, true
}

// SetOriginalAccountId sets field value
func (o *AccountMigrationIdMappings) SetOriginalAccountId(v string) {
	o.OriginalAccountId = v
}

// GetPolicies returns the Policies field value
// If the value is explicit nil, the zero value for map[string]MappingObject will be returned
func (o *AccountMigrationIdMappings) GetPolicies() map[string]MappingObject {
	if o == nil {
		var ret map[string]MappingObject
		return ret
	}

	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountMigrationIdMappings) GetPoliciesOk() (*map[string]MappingObject, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return &o.Policies, true
}

// SetPolicies sets field value
func (o *AccountMigrationIdMappings) SetPolicies(v map[string]MappingObject) {
	o.Policies = v
}

// GetInvoices returns the Invoices field value
// If the value is explicit nil, the zero value for map[string]MappingObject will be returned
func (o *AccountMigrationIdMappings) GetInvoices() map[string]MappingObject {
	if o == nil {
		var ret map[string]MappingObject
		return ret
	}

	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountMigrationIdMappings) GetInvoicesOk() (*map[string]MappingObject, bool) {
	if o == nil || IsNil(o.Invoices) {
		return nil, false
	}
	return &o.Invoices, true
}

// SetInvoices sets field value
func (o *AccountMigrationIdMappings) SetInvoices(v map[string]MappingObject) {
	o.Invoices = v
}

// GetPayments returns the Payments field value
// If the value is explicit nil, the zero value for map[string]MappingObject will be returned
func (o *AccountMigrationIdMappings) GetPayments() map[string]MappingObject {
	if o == nil {
		var ret map[string]MappingObject
		return ret
	}

	return o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountMigrationIdMappings) GetPaymentsOk() (*map[string]MappingObject, bool) {
	if o == nil || IsNil(o.Payments) {
		return nil, false
	}
	return &o.Payments, true
}

// SetPayments sets field value
func (o *AccountMigrationIdMappings) SetPayments(v map[string]MappingObject) {
	o.Payments = v
}

// GetDisbursements returns the Disbursements field value
// If the value is explicit nil, the zero value for map[string]MappingObject will be returned
func (o *AccountMigrationIdMappings) GetDisbursements() map[string]MappingObject {
	if o == nil {
		var ret map[string]MappingObject
		return ret
	}

	return o.Disbursements
}

// GetDisbursementsOk returns a tuple with the Disbursements field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountMigrationIdMappings) GetDisbursementsOk() (*map[string]MappingObject, bool) {
	if o == nil || IsNil(o.Disbursements) {
		return nil, false
	}
	return &o.Disbursements, true
}

// SetDisbursements sets field value
func (o *AccountMigrationIdMappings) SetDisbursements(v map[string]MappingObject) {
	o.Disbursements = v
}

func (o AccountMigrationIdMappings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountMigrationIdMappings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["migrationLocator"] = o.MigrationLocator
	toSerialize["accountLocator"] = o.AccountLocator
	toSerialize["originalAccountId"] = o.OriginalAccountId
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	if o.Invoices != nil {
		toSerialize["invoices"] = o.Invoices
	}
	if o.Payments != nil {
		toSerialize["payments"] = o.Payments
	}
	if o.Disbursements != nil {
		toSerialize["disbursements"] = o.Disbursements
	}
	return toSerialize, nil
}

func (o *AccountMigrationIdMappings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"migrationLocator",
		"accountLocator",
		"originalAccountId",
		"policies",
		"invoices",
		"payments",
		"disbursements",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountMigrationIdMappings := _AccountMigrationIdMappings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountMigrationIdMappings)

	if err != nil {
		return err
	}

	*o = AccountMigrationIdMappings(varAccountMigrationIdMappings)

	return err
}

type NullableAccountMigrationIdMappings struct {
	value *AccountMigrationIdMappings
	isSet bool
}

func (v NullableAccountMigrationIdMappings) Get() *AccountMigrationIdMappings {
	return v.value
}

func (v *NullableAccountMigrationIdMappings) Set(val *AccountMigrationIdMappings) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountMigrationIdMappings) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountMigrationIdMappings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountMigrationIdMappings(val *AccountMigrationIdMappings) *NullableAccountMigrationIdMappings {
	return &NullableAccountMigrationIdMappings{value: val, isSet: true}
}

func (v NullableAccountMigrationIdMappings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountMigrationIdMappings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
