/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package migration

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DisbursementMigrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisbursementMigrationRequest{}

// DisbursementMigrationRequest struct for DisbursementMigrationRequest
type DisbursementMigrationRequest struct {
	Id               string                            `json:"id"`
	DisbursementType string                            `json:"disbursementType"`
	Data             map[string]map[string]interface{} `json:"data"`
	DisbursementTime time.Time                         `json:"disbursementTime"`
	Sources          []CreditItemMigrationRequest      `json:"sources"`
	Currency         *string                           `json:"currency,omitempty"`
}

type _DisbursementMigrationRequest DisbursementMigrationRequest

// NewDisbursementMigrationRequest instantiates a new DisbursementMigrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisbursementMigrationRequest(id string, disbursementType string, data map[string]map[string]interface{}, disbursementTime time.Time, sources []CreditItemMigrationRequest) *DisbursementMigrationRequest {
	this := DisbursementMigrationRequest{}
	this.Id = id
	this.DisbursementType = disbursementType
	this.Data = data
	this.DisbursementTime = disbursementTime
	this.Sources = sources
	return &this
}

// NewDisbursementMigrationRequestWithDefaults instantiates a new DisbursementMigrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisbursementMigrationRequestWithDefaults() *DisbursementMigrationRequest {
	this := DisbursementMigrationRequest{}
	return &this
}

// GetId returns the Id field value
func (o *DisbursementMigrationRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DisbursementMigrationRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DisbursementMigrationRequest) SetId(v string) {
	o.Id = v
}

// GetDisbursementType returns the DisbursementType field value
func (o *DisbursementMigrationRequest) GetDisbursementType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisbursementType
}

// GetDisbursementTypeOk returns a tuple with the DisbursementType field value
// and a boolean to check if the value has been set.
func (o *DisbursementMigrationRequest) GetDisbursementTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisbursementType, true
}

// SetDisbursementType sets field value
func (o *DisbursementMigrationRequest) SetDisbursementType(v string) {
	o.DisbursementType = v
}

// GetData returns the Data field value
func (o *DisbursementMigrationRequest) GetData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *DisbursementMigrationRequest) GetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *DisbursementMigrationRequest) SetData(v map[string]map[string]interface{}) {
	o.Data = v
}

// GetDisbursementTime returns the DisbursementTime field value
func (o *DisbursementMigrationRequest) GetDisbursementTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DisbursementTime
}

// GetDisbursementTimeOk returns a tuple with the DisbursementTime field value
// and a boolean to check if the value has been set.
func (o *DisbursementMigrationRequest) GetDisbursementTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisbursementTime, true
}

// SetDisbursementTime sets field value
func (o *DisbursementMigrationRequest) SetDisbursementTime(v time.Time) {
	o.DisbursementTime = v
}

// GetSources returns the Sources field value
func (o *DisbursementMigrationRequest) GetSources() []CreditItemMigrationRequest {
	if o == nil {
		var ret []CreditItemMigrationRequest
		return ret
	}

	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value
// and a boolean to check if the value has been set.
func (o *DisbursementMigrationRequest) GetSourcesOk() ([]CreditItemMigrationRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sources, true
}

// SetSources sets field value
func (o *DisbursementMigrationRequest) SetSources(v []CreditItemMigrationRequest) {
	o.Sources = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *DisbursementMigrationRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisbursementMigrationRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *DisbursementMigrationRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *DisbursementMigrationRequest) SetCurrency(v string) {
	o.Currency = &v
}

func (o DisbursementMigrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisbursementMigrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["disbursementType"] = o.DisbursementType
	toSerialize["data"] = o.Data
	toSerialize["disbursementTime"] = o.DisbursementTime
	toSerialize["sources"] = o.Sources
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

func (o *DisbursementMigrationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"disbursementType",
		"data",
		"disbursementTime",
		"sources",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDisbursementMigrationRequest := _DisbursementMigrationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDisbursementMigrationRequest)

	if err != nil {
		return err
	}

	*o = DisbursementMigrationRequest(varDisbursementMigrationRequest)

	return err
}

type NullableDisbursementMigrationRequest struct {
	value *DisbursementMigrationRequest
	isSet bool
}

func (v NullableDisbursementMigrationRequest) Get() *DisbursementMigrationRequest {
	return v.value
}

func (v *NullableDisbursementMigrationRequest) Set(val *DisbursementMigrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDisbursementMigrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDisbursementMigrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisbursementMigrationRequest(val *DisbursementMigrationRequest) *NullableDisbursementMigrationRequest {
	return &NullableDisbursementMigrationRequest{value: val, isSet: true}
}

func (v NullableDisbursementMigrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisbursementMigrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
