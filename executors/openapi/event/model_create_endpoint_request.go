/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package event

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateEndpointRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEndpointRequest{}

// CreateEndpointRequest struct for CreateEndpointRequest
type CreateEndpointRequest struct {
	Url         string              `json:"url"`
	Headers     map[string][]string `json:"headers"`
	SecureSsl   *bool               `json:"secureSsl,omitempty"`
	HmacEnabled *bool               `json:"hmacEnabled,omitempty"`
	Secret      *string             `json:"secret,omitempty"`
	Tag         *string             `json:"tag,omitempty"`
}

type _CreateEndpointRequest CreateEndpointRequest

// NewCreateEndpointRequest instantiates a new CreateEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEndpointRequest(url string, headers map[string][]string) *CreateEndpointRequest {
	this := CreateEndpointRequest{}
	this.Url = url
	this.Headers = headers
	return &this
}

// NewCreateEndpointRequestWithDefaults instantiates a new CreateEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEndpointRequestWithDefaults() *CreateEndpointRequest {
	this := CreateEndpointRequest{}
	return &this
}

// GetUrl returns the Url field value
func (o *CreateEndpointRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CreateEndpointRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CreateEndpointRequest) SetUrl(v string) {
	o.Url = v
}

// GetHeaders returns the Headers field value
func (o *CreateEndpointRequest) GetHeaders() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
func (o *CreateEndpointRequest) GetHeadersOk() (*map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headers, true
}

// SetHeaders sets field value
func (o *CreateEndpointRequest) SetHeaders(v map[string][]string) {
	o.Headers = v
}

// GetSecureSsl returns the SecureSsl field value if set, zero value otherwise.
func (o *CreateEndpointRequest) GetSecureSsl() bool {
	if o == nil || IsNil(o.SecureSsl) {
		var ret bool
		return ret
	}
	return *o.SecureSsl
}

// GetSecureSslOk returns a tuple with the SecureSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEndpointRequest) GetSecureSslOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureSsl) {
		return nil, false
	}
	return o.SecureSsl, true
}

// HasSecureSsl returns a boolean if a field has been set.
func (o *CreateEndpointRequest) HasSecureSsl() bool {
	if o != nil && !IsNil(o.SecureSsl) {
		return true
	}

	return false
}

// SetSecureSsl gets a reference to the given bool and assigns it to the SecureSsl field.
func (o *CreateEndpointRequest) SetSecureSsl(v bool) {
	o.SecureSsl = &v
}

// GetHmacEnabled returns the HmacEnabled field value if set, zero value otherwise.
func (o *CreateEndpointRequest) GetHmacEnabled() bool {
	if o == nil || IsNil(o.HmacEnabled) {
		var ret bool
		return ret
	}
	return *o.HmacEnabled
}

// GetHmacEnabledOk returns a tuple with the HmacEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEndpointRequest) GetHmacEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.HmacEnabled) {
		return nil, false
	}
	return o.HmacEnabled, true
}

// HasHmacEnabled returns a boolean if a field has been set.
func (o *CreateEndpointRequest) HasHmacEnabled() bool {
	if o != nil && !IsNil(o.HmacEnabled) {
		return true
	}

	return false
}

// SetHmacEnabled gets a reference to the given bool and assigns it to the HmacEnabled field.
func (o *CreateEndpointRequest) SetHmacEnabled(v bool) {
	o.HmacEnabled = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *CreateEndpointRequest) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEndpointRequest) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *CreateEndpointRequest) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *CreateEndpointRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *CreateEndpointRequest) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEndpointRequest) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *CreateEndpointRequest) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *CreateEndpointRequest) SetTag(v string) {
	o.Tag = &v
}

func (o CreateEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEndpointRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["headers"] = o.Headers
	if !IsNil(o.SecureSsl) {
		toSerialize["secureSsl"] = o.SecureSsl
	}
	if !IsNil(o.HmacEnabled) {
		toSerialize["hmacEnabled"] = o.HmacEnabled
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

func (o *CreateEndpointRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"headers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateEndpointRequest := _CreateEndpointRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateEndpointRequest)

	if err != nil {
		return err
	}

	*o = CreateEndpointRequest(varCreateEndpointRequest)

	return err
}

type NullableCreateEndpointRequest struct {
	value *CreateEndpointRequest
	isSet bool
}

func (v NullableCreateEndpointRequest) Get() *CreateEndpointRequest {
	return v.value
}

func (v *NullableCreateEndpointRequest) Set(val *CreateEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEndpointRequest(val *CreateEndpointRequest) *NullableCreateEndpointRequest {
	return &NullableCreateEndpointRequest{value: val, isSet: true}
}

func (v NullableCreateEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
