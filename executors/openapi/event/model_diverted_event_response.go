/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package event

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DivertedEventResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DivertedEventResponse{}

// DivertedEventResponse struct for DivertedEventResponse
type DivertedEventResponse struct {
	RequestLocator   string    `json:"requestLocator"`
	EventLocator     string    `json:"eventLocator"`
	FailureTrigger   string    `json:"failureTrigger"`
	FailureMessage   string    `json:"failureMessage"`
	FailureTimestamp time.Time `json:"failureTimestamp"`
}

type _DivertedEventResponse DivertedEventResponse

// NewDivertedEventResponse instantiates a new DivertedEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDivertedEventResponse(requestLocator string, eventLocator string, failureTrigger string, failureMessage string, failureTimestamp time.Time) *DivertedEventResponse {
	this := DivertedEventResponse{}
	this.RequestLocator = requestLocator
	this.EventLocator = eventLocator
	this.FailureTrigger = failureTrigger
	this.FailureMessage = failureMessage
	this.FailureTimestamp = failureTimestamp
	return &this
}

// NewDivertedEventResponseWithDefaults instantiates a new DivertedEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDivertedEventResponseWithDefaults() *DivertedEventResponse {
	this := DivertedEventResponse{}
	return &this
}

// GetRequestLocator returns the RequestLocator field value
func (o *DivertedEventResponse) GetRequestLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestLocator
}

// GetRequestLocatorOk returns a tuple with the RequestLocator field value
// and a boolean to check if the value has been set.
func (o *DivertedEventResponse) GetRequestLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestLocator, true
}

// SetRequestLocator sets field value
func (o *DivertedEventResponse) SetRequestLocator(v string) {
	o.RequestLocator = v
}

// GetEventLocator returns the EventLocator field value
func (o *DivertedEventResponse) GetEventLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventLocator
}

// GetEventLocatorOk returns a tuple with the EventLocator field value
// and a boolean to check if the value has been set.
func (o *DivertedEventResponse) GetEventLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventLocator, true
}

// SetEventLocator sets field value
func (o *DivertedEventResponse) SetEventLocator(v string) {
	o.EventLocator = v
}

// GetFailureTrigger returns the FailureTrigger field value
func (o *DivertedEventResponse) GetFailureTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FailureTrigger
}

// GetFailureTriggerOk returns a tuple with the FailureTrigger field value
// and a boolean to check if the value has been set.
func (o *DivertedEventResponse) GetFailureTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureTrigger, true
}

// SetFailureTrigger sets field value
func (o *DivertedEventResponse) SetFailureTrigger(v string) {
	o.FailureTrigger = v
}

// GetFailureMessage returns the FailureMessage field value
func (o *DivertedEventResponse) GetFailureMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FailureMessage
}

// GetFailureMessageOk returns a tuple with the FailureMessage field value
// and a boolean to check if the value has been set.
func (o *DivertedEventResponse) GetFailureMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureMessage, true
}

// SetFailureMessage sets field value
func (o *DivertedEventResponse) SetFailureMessage(v string) {
	o.FailureMessage = v
}

// GetFailureTimestamp returns the FailureTimestamp field value
func (o *DivertedEventResponse) GetFailureTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FailureTimestamp
}

// GetFailureTimestampOk returns a tuple with the FailureTimestamp field value
// and a boolean to check if the value has been set.
func (o *DivertedEventResponse) GetFailureTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureTimestamp, true
}

// SetFailureTimestamp sets field value
func (o *DivertedEventResponse) SetFailureTimestamp(v time.Time) {
	o.FailureTimestamp = v
}

func (o DivertedEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DivertedEventResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestLocator"] = o.RequestLocator
	toSerialize["eventLocator"] = o.EventLocator
	toSerialize["failureTrigger"] = o.FailureTrigger
	toSerialize["failureMessage"] = o.FailureMessage
	toSerialize["failureTimestamp"] = o.FailureTimestamp
	return toSerialize, nil
}

func (o *DivertedEventResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requestLocator",
		"eventLocator",
		"failureTrigger",
		"failureMessage",
		"failureTimestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDivertedEventResponse := _DivertedEventResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDivertedEventResponse)

	if err != nil {
		return err
	}

	*o = DivertedEventResponse(varDivertedEventResponse)

	return err
}

type NullableDivertedEventResponse struct {
	value *DivertedEventResponse
	isSet bool
}

func (v NullableDivertedEventResponse) Get() *DivertedEventResponse {
	return v.value
}

func (v *NullableDivertedEventResponse) Set(val *DivertedEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDivertedEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDivertedEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDivertedEventResponse(val *DivertedEventResponse) *NullableDivertedEventResponse {
	return &NullableDivertedEventResponse{value: val, isSet: true}
}

func (v NullableDivertedEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDivertedEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
