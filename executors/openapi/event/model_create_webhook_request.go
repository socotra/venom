/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package event

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateWebhookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWebhookRequest{}

// CreateWebhookRequest struct for CreateWebhookRequest
type CreateWebhookRequest struct {
	Name            string                       `json:"name"`
	Enabled         bool                         `json:"enabled"`
	EventTypes      []string                     `json:"eventTypes"`
	Endpoint        CreateEndpointRequest        `json:"endpoint"`
	FailureHandling CreateFailureHandlingRequest `json:"failureHandling"`
}

type _CreateWebhookRequest CreateWebhookRequest

// NewCreateWebhookRequest instantiates a new CreateWebhookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWebhookRequest(name string, enabled bool, eventTypes []string, endpoint CreateEndpointRequest, failureHandling CreateFailureHandlingRequest) *CreateWebhookRequest {
	this := CreateWebhookRequest{}
	this.Name = name
	this.Enabled = enabled
	this.EventTypes = eventTypes
	this.Endpoint = endpoint
	this.FailureHandling = failureHandling
	return &this
}

// NewCreateWebhookRequestWithDefaults instantiates a new CreateWebhookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWebhookRequestWithDefaults() *CreateWebhookRequest {
	this := CreateWebhookRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateWebhookRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateWebhookRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateWebhookRequest) SetName(v string) {
	o.Name = v
}

// GetEnabled returns the Enabled field value
func (o *CreateWebhookRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CreateWebhookRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CreateWebhookRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEventTypes returns the EventTypes field value
func (o *CreateWebhookRequest) GetEventTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EventTypes
}

// GetEventTypesOk returns a tuple with the EventTypes field value
// and a boolean to check if the value has been set.
func (o *CreateWebhookRequest) GetEventTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventTypes, true
}

// SetEventTypes sets field value
func (o *CreateWebhookRequest) SetEventTypes(v []string) {
	o.EventTypes = v
}

// GetEndpoint returns the Endpoint field value
func (o *CreateWebhookRequest) GetEndpoint() CreateEndpointRequest {
	if o == nil {
		var ret CreateEndpointRequest
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *CreateWebhookRequest) GetEndpointOk() (*CreateEndpointRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *CreateWebhookRequest) SetEndpoint(v CreateEndpointRequest) {
	o.Endpoint = v
}

// GetFailureHandling returns the FailureHandling field value
func (o *CreateWebhookRequest) GetFailureHandling() CreateFailureHandlingRequest {
	if o == nil {
		var ret CreateFailureHandlingRequest
		return ret
	}

	return o.FailureHandling
}

// GetFailureHandlingOk returns a tuple with the FailureHandling field value
// and a boolean to check if the value has been set.
func (o *CreateWebhookRequest) GetFailureHandlingOk() (*CreateFailureHandlingRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureHandling, true
}

// SetFailureHandling sets field value
func (o *CreateWebhookRequest) SetFailureHandling(v CreateFailureHandlingRequest) {
	o.FailureHandling = v
}

func (o CreateWebhookRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWebhookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["enabled"] = o.Enabled
	toSerialize["eventTypes"] = o.EventTypes
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["failureHandling"] = o.FailureHandling
	return toSerialize, nil
}

func (o *CreateWebhookRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"enabled",
		"eventTypes",
		"endpoint",
		"failureHandling",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateWebhookRequest := _CreateWebhookRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateWebhookRequest)

	if err != nil {
		return err
	}

	*o = CreateWebhookRequest(varCreateWebhookRequest)

	return err
}

type NullableCreateWebhookRequest struct {
	value *CreateWebhookRequest
	isSet bool
}

func (v NullableCreateWebhookRequest) Get() *CreateWebhookRequest {
	return v.value
}

func (v *NullableCreateWebhookRequest) Set(val *CreateWebhookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWebhookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWebhookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWebhookRequest(val *CreateWebhookRequest) *NullableCreateWebhookRequest {
	return &NullableCreateWebhookRequest{value: val, isSet: true}
}

func (v NullableCreateWebhookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWebhookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
