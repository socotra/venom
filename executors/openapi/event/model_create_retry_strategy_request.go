/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package event

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateRetryStrategyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRetryStrategyRequest{}

// CreateRetryStrategyRequest struct for CreateRetryStrategyRequest
type CreateRetryStrategyRequest struct {
	Type     string `json:"type"`
	Interval int64  `json:"interval"`
	Attempts int32  `json:"attempts"`
}

type _CreateRetryStrategyRequest CreateRetryStrategyRequest

// NewCreateRetryStrategyRequest instantiates a new CreateRetryStrategyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRetryStrategyRequest(type_ string, interval int64, attempts int32) *CreateRetryStrategyRequest {
	this := CreateRetryStrategyRequest{}
	this.Type = type_
	this.Interval = interval
	this.Attempts = attempts
	return &this
}

// NewCreateRetryStrategyRequestWithDefaults instantiates a new CreateRetryStrategyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRetryStrategyRequestWithDefaults() *CreateRetryStrategyRequest {
	this := CreateRetryStrategyRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateRetryStrategyRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateRetryStrategyRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateRetryStrategyRequest) SetType(v string) {
	o.Type = v
}

// GetInterval returns the Interval field value
func (o *CreateRetryStrategyRequest) GetInterval() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *CreateRetryStrategyRequest) GetIntervalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *CreateRetryStrategyRequest) SetInterval(v int64) {
	o.Interval = v
}

// GetAttempts returns the Attempts field value
func (o *CreateRetryStrategyRequest) GetAttempts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Attempts
}

// GetAttemptsOk returns a tuple with the Attempts field value
// and a boolean to check if the value has been set.
func (o *CreateRetryStrategyRequest) GetAttemptsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attempts, true
}

// SetAttempts sets field value
func (o *CreateRetryStrategyRequest) SetAttempts(v int32) {
	o.Attempts = v
}

func (o CreateRetryStrategyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRetryStrategyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["interval"] = o.Interval
	toSerialize["attempts"] = o.Attempts
	return toSerialize, nil
}

func (o *CreateRetryStrategyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"interval",
		"attempts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRetryStrategyRequest := _CreateRetryStrategyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRetryStrategyRequest)

	if err != nil {
		return err
	}

	*o = CreateRetryStrategyRequest(varCreateRetryStrategyRequest)

	return err
}

type NullableCreateRetryStrategyRequest struct {
	value *CreateRetryStrategyRequest
	isSet bool
}

func (v NullableCreateRetryStrategyRequest) Get() *CreateRetryStrategyRequest {
	return v.value
}

func (v *NullableCreateRetryStrategyRequest) Set(val *CreateRetryStrategyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRetryStrategyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRetryStrategyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRetryStrategyRequest(val *CreateRetryStrategyRequest) *NullableCreateRetryStrategyRequest {
	return &NullableCreateRetryStrategyRequest{value: val, isSet: true}
}

func (v NullableCreateRetryStrategyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRetryStrategyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
