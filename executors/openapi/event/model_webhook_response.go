/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package event

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the WebhookResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookResponse{}

// WebhookResponse struct for WebhookResponse
type WebhookResponse struct {
	Locator         string                  `json:"locator"`
	Name            string                  `json:"name"`
	Enabled         bool                    `json:"enabled"`
	Suspended       bool                    `json:"suspended"`
	SuspendedAt     time.Time               `json:"suspendedAt"`
	EventTypes      []string                `json:"eventTypes"`
	Endpoint        EndpointResponse        `json:"endpoint"`
	FailureHandling FailureHandlingResponse `json:"failureHandling"`
}

type _WebhookResponse WebhookResponse

// NewWebhookResponse instantiates a new WebhookResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookResponse(locator string, name string, enabled bool, suspended bool, suspendedAt time.Time, eventTypes []string, endpoint EndpointResponse, failureHandling FailureHandlingResponse) *WebhookResponse {
	this := WebhookResponse{}
	this.Locator = locator
	this.Name = name
	this.Enabled = enabled
	this.Suspended = suspended
	this.SuspendedAt = suspendedAt
	this.EventTypes = eventTypes
	this.Endpoint = endpoint
	this.FailureHandling = failureHandling
	return &this
}

// NewWebhookResponseWithDefaults instantiates a new WebhookResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookResponseWithDefaults() *WebhookResponse {
	this := WebhookResponse{}
	return &this
}

// GetLocator returns the Locator field value
func (o *WebhookResponse) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *WebhookResponse) SetLocator(v string) {
	o.Locator = v
}

// GetName returns the Name field value
func (o *WebhookResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebhookResponse) SetName(v string) {
	o.Name = v
}

// GetEnabled returns the Enabled field value
func (o *WebhookResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *WebhookResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetSuspended returns the Suspended field value
func (o *WebhookResponse) GetSuspended() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetSuspendedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Suspended, true
}

// SetSuspended sets field value
func (o *WebhookResponse) SetSuspended(v bool) {
	o.Suspended = v
}

// GetSuspendedAt returns the SuspendedAt field value
func (o *WebhookResponse) GetSuspendedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SuspendedAt
}

// GetSuspendedAtOk returns a tuple with the SuspendedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetSuspendedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuspendedAt, true
}

// SetSuspendedAt sets field value
func (o *WebhookResponse) SetSuspendedAt(v time.Time) {
	o.SuspendedAt = v
}

// GetEventTypes returns the EventTypes field value
func (o *WebhookResponse) GetEventTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EventTypes
}

// GetEventTypesOk returns a tuple with the EventTypes field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetEventTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventTypes, true
}

// SetEventTypes sets field value
func (o *WebhookResponse) SetEventTypes(v []string) {
	o.EventTypes = v
}

// GetEndpoint returns the Endpoint field value
func (o *WebhookResponse) GetEndpoint() EndpointResponse {
	if o == nil {
		var ret EndpointResponse
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetEndpointOk() (*EndpointResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *WebhookResponse) SetEndpoint(v EndpointResponse) {
	o.Endpoint = v
}

// GetFailureHandling returns the FailureHandling field value
func (o *WebhookResponse) GetFailureHandling() FailureHandlingResponse {
	if o == nil {
		var ret FailureHandlingResponse
		return ret
	}

	return o.FailureHandling
}

// GetFailureHandlingOk returns a tuple with the FailureHandling field value
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetFailureHandlingOk() (*FailureHandlingResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureHandling, true
}

// SetFailureHandling sets field value
func (o *WebhookResponse) SetFailureHandling(v FailureHandlingResponse) {
	o.FailureHandling = v
}

func (o WebhookResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["name"] = o.Name
	toSerialize["enabled"] = o.Enabled
	toSerialize["suspended"] = o.Suspended
	toSerialize["suspendedAt"] = o.SuspendedAt
	toSerialize["eventTypes"] = o.EventTypes
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["failureHandling"] = o.FailureHandling
	return toSerialize, nil
}

func (o *WebhookResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"name",
		"enabled",
		"suspended",
		"suspendedAt",
		"eventTypes",
		"endpoint",
		"failureHandling",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookResponse := _WebhookResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookResponse)

	if err != nil {
		return err
	}

	*o = WebhookResponse(varWebhookResponse)

	return err
}

type NullableWebhookResponse struct {
	value *WebhookResponse
	isSet bool
}

func (v NullableWebhookResponse) Get() *WebhookResponse {
	return v.value
}

func (v *NullableWebhookResponse) Set(val *WebhookResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookResponse(val *WebhookResponse) *NullableWebhookResponse {
	return &NullableWebhookResponse{value: val, isSet: true}
}

func (v NullableWebhookResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
