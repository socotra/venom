/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package event

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the FailureHandlingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FailureHandlingResponse{}

// FailureHandlingResponse struct for FailureHandlingResponse
type FailureHandlingResponse struct {
	AlertEndpoint EndpointResponse      `json:"alertEndpoint"`
	Triggers      []string              `json:"triggers"`
	RetryStrategy RetryStrategyResponse `json:"retryStrategy"`
	Divert        bool                  `json:"divert"`
	Suspend       bool                  `json:"suspend"`
}

type _FailureHandlingResponse FailureHandlingResponse

// NewFailureHandlingResponse instantiates a new FailureHandlingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFailureHandlingResponse(alertEndpoint EndpointResponse, triggers []string, retryStrategy RetryStrategyResponse, divert bool, suspend bool) *FailureHandlingResponse {
	this := FailureHandlingResponse{}
	this.AlertEndpoint = alertEndpoint
	this.Triggers = triggers
	this.RetryStrategy = retryStrategy
	this.Divert = divert
	this.Suspend = suspend
	return &this
}

// NewFailureHandlingResponseWithDefaults instantiates a new FailureHandlingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFailureHandlingResponseWithDefaults() *FailureHandlingResponse {
	this := FailureHandlingResponse{}
	return &this
}

// GetAlertEndpoint returns the AlertEndpoint field value
func (o *FailureHandlingResponse) GetAlertEndpoint() EndpointResponse {
	if o == nil {
		var ret EndpointResponse
		return ret
	}

	return o.AlertEndpoint
}

// GetAlertEndpointOk returns a tuple with the AlertEndpoint field value
// and a boolean to check if the value has been set.
func (o *FailureHandlingResponse) GetAlertEndpointOk() (*EndpointResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertEndpoint, true
}

// SetAlertEndpoint sets field value
func (o *FailureHandlingResponse) SetAlertEndpoint(v EndpointResponse) {
	o.AlertEndpoint = v
}

// GetTriggers returns the Triggers field value
func (o *FailureHandlingResponse) GetTriggers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value
// and a boolean to check if the value has been set.
func (o *FailureHandlingResponse) GetTriggersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Triggers, true
}

// SetTriggers sets field value
func (o *FailureHandlingResponse) SetTriggers(v []string) {
	o.Triggers = v
}

// GetRetryStrategy returns the RetryStrategy field value
func (o *FailureHandlingResponse) GetRetryStrategy() RetryStrategyResponse {
	if o == nil {
		var ret RetryStrategyResponse
		return ret
	}

	return o.RetryStrategy
}

// GetRetryStrategyOk returns a tuple with the RetryStrategy field value
// and a boolean to check if the value has been set.
func (o *FailureHandlingResponse) GetRetryStrategyOk() (*RetryStrategyResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetryStrategy, true
}

// SetRetryStrategy sets field value
func (o *FailureHandlingResponse) SetRetryStrategy(v RetryStrategyResponse) {
	o.RetryStrategy = v
}

// GetDivert returns the Divert field value
func (o *FailureHandlingResponse) GetDivert() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Divert
}

// GetDivertOk returns a tuple with the Divert field value
// and a boolean to check if the value has been set.
func (o *FailureHandlingResponse) GetDivertOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Divert, true
}

// SetDivert sets field value
func (o *FailureHandlingResponse) SetDivert(v bool) {
	o.Divert = v
}

// GetSuspend returns the Suspend field value
func (o *FailureHandlingResponse) GetSuspend() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Suspend
}

// GetSuspendOk returns a tuple with the Suspend field value
// and a boolean to check if the value has been set.
func (o *FailureHandlingResponse) GetSuspendOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Suspend, true
}

// SetSuspend sets field value
func (o *FailureHandlingResponse) SetSuspend(v bool) {
	o.Suspend = v
}

func (o FailureHandlingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FailureHandlingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alertEndpoint"] = o.AlertEndpoint
	toSerialize["triggers"] = o.Triggers
	toSerialize["retryStrategy"] = o.RetryStrategy
	toSerialize["divert"] = o.Divert
	toSerialize["suspend"] = o.Suspend
	return toSerialize, nil
}

func (o *FailureHandlingResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alertEndpoint",
		"triggers",
		"retryStrategy",
		"divert",
		"suspend",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFailureHandlingResponse := _FailureHandlingResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFailureHandlingResponse)

	if err != nil {
		return err
	}

	*o = FailureHandlingResponse(varFailureHandlingResponse)

	return err
}

type NullableFailureHandlingResponse struct {
	value *FailureHandlingResponse
	isSet bool
}

func (v NullableFailureHandlingResponse) Get() *FailureHandlingResponse {
	return v.value
}

func (v *NullableFailureHandlingResponse) Set(val *FailureHandlingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFailureHandlingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFailureHandlingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFailureHandlingResponse(val *FailureHandlingResponse) *NullableFailureHandlingResponse {
	return &NullableFailureHandlingResponse{value: val, isSet: true}
}

func (v NullableFailureHandlingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFailureHandlingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
