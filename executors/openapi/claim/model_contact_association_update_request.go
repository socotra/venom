/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package claim

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ContactAssociationUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactAssociationUpdateRequest{}

// ContactAssociationUpdateRequest struct for ContactAssociationUpdateRequest
type ContactAssociationUpdateRequest struct {
	AddRoles    []string `json:"addRoles"`
	RemoveRoles []string `json:"removeRoles"`
}

type _ContactAssociationUpdateRequest ContactAssociationUpdateRequest

// NewContactAssociationUpdateRequest instantiates a new ContactAssociationUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactAssociationUpdateRequest(addRoles []string, removeRoles []string) *ContactAssociationUpdateRequest {
	this := ContactAssociationUpdateRequest{}
	this.AddRoles = addRoles
	this.RemoveRoles = removeRoles
	return &this
}

// NewContactAssociationUpdateRequestWithDefaults instantiates a new ContactAssociationUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactAssociationUpdateRequestWithDefaults() *ContactAssociationUpdateRequest {
	this := ContactAssociationUpdateRequest{}
	return &this
}

// GetAddRoles returns the AddRoles field value
func (o *ContactAssociationUpdateRequest) GetAddRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AddRoles
}

// GetAddRolesOk returns a tuple with the AddRoles field value
// and a boolean to check if the value has been set.
func (o *ContactAssociationUpdateRequest) GetAddRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddRoles, true
}

// SetAddRoles sets field value
func (o *ContactAssociationUpdateRequest) SetAddRoles(v []string) {
	o.AddRoles = v
}

// GetRemoveRoles returns the RemoveRoles field value
func (o *ContactAssociationUpdateRequest) GetRemoveRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RemoveRoles
}

// GetRemoveRolesOk returns a tuple with the RemoveRoles field value
// and a boolean to check if the value has been set.
func (o *ContactAssociationUpdateRequest) GetRemoveRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveRoles, true
}

// SetRemoveRoles sets field value
func (o *ContactAssociationUpdateRequest) SetRemoveRoles(v []string) {
	o.RemoveRoles = v
}

func (o ContactAssociationUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactAssociationUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addRoles"] = o.AddRoles
	toSerialize["removeRoles"] = o.RemoveRoles
	return toSerialize, nil
}

func (o *ContactAssociationUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addRoles",
		"removeRoles",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContactAssociationUpdateRequest := _ContactAssociationUpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContactAssociationUpdateRequest)

	if err != nil {
		return err
	}

	*o = ContactAssociationUpdateRequest(varContactAssociationUpdateRequest)

	return err
}

type NullableContactAssociationUpdateRequest struct {
	value *ContactAssociationUpdateRequest
	isSet bool
}

func (v NullableContactAssociationUpdateRequest) Get() *ContactAssociationUpdateRequest {
	return v.value
}

func (v *NullableContactAssociationUpdateRequest) Set(val *ContactAssociationUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContactAssociationUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContactAssociationUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactAssociationUpdateRequest(val *ContactAssociationUpdateRequest) *NullableContactAssociationUpdateRequest {
	return &NullableContactAssociationUpdateRequest{value: val, isSet: true}
}

func (v NullableContactAssociationUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactAssociationUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
