/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package claim

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the FnolResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FnolResponse{}

// FnolResponse struct for FnolResponse
type FnolResponse struct {
	Locator          string                            `json:"locator"`
	Type             string                            `json:"type"`
	Data             map[string]map[string]interface{} `json:"data"`
	FnolState        string                            `json:"fnolState"`
	Losses           []FnolLoss                        `json:"losses"`
	CreatedAt        time.Time                         `json:"createdAt"`
	CreatedBy        string                            `json:"createdBy"`
	AccountLocator   *string                           `json:"accountLocator,omitempty"`
	PolicyLocator    *string                           `json:"policyLocator,omitempty"`
	SegmentLocator   *string                           `json:"segmentLocator,omitempty"`
	IncidentTime     *time.Time                        `json:"incidentTime,omitempty"`
	IncidentTimezone *string                           `json:"incidentTimezone,omitempty"`
	IncidentSummary  *string                           `json:"incidentSummary,omitempty"`
	Region           *string                           `json:"region,omitempty"`
	FnolNumber       *string                           `json:"fnolNumber,omitempty"`
	UpdatedAt        *time.Time                        `json:"updatedAt,omitempty"`
	UpdatedBy        *string                           `json:"updatedBy,omitempty"`
	ValidationResult *ValidationResult                 `json:"validationResult,omitempty"`
	Claims           []string                          `json:"claims"`
	Contacts         []ContactRoles                    `json:"contacts"`
	AnonymizedAt     *time.Time                        `json:"anonymizedAt,omitempty"`
}

type _FnolResponse FnolResponse

// NewFnolResponse instantiates a new FnolResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFnolResponse(locator string, type_ string, data map[string]map[string]interface{}, fnolState string, losses []FnolLoss, createdAt time.Time, createdBy string, claims []string, contacts []ContactRoles) *FnolResponse {
	this := FnolResponse{}
	this.Locator = locator
	this.Type = type_
	this.Data = data
	this.FnolState = fnolState
	this.Losses = losses
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Claims = claims
	this.Contacts = contacts
	return &this
}

// NewFnolResponseWithDefaults instantiates a new FnolResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFnolResponseWithDefaults() *FnolResponse {
	this := FnolResponse{}
	return &this
}

// GetLocator returns the Locator field value
func (o *FnolResponse) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *FnolResponse) SetLocator(v string) {
	o.Locator = v
}

// GetType returns the Type field value
func (o *FnolResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FnolResponse) SetType(v string) {
	o.Type = v
}

// GetData returns the Data field value
func (o *FnolResponse) GetData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *FnolResponse) SetData(v map[string]map[string]interface{}) {
	o.Data = v
}

// GetFnolState returns the FnolState field value
func (o *FnolResponse) GetFnolState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FnolState
}

// GetFnolStateOk returns a tuple with the FnolState field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetFnolStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FnolState, true
}

// SetFnolState sets field value
func (o *FnolResponse) SetFnolState(v string) {
	o.FnolState = v
}

// GetLosses returns the Losses field value
func (o *FnolResponse) GetLosses() []FnolLoss {
	if o == nil {
		var ret []FnolLoss
		return ret
	}

	return o.Losses
}

// GetLossesOk returns a tuple with the Losses field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetLossesOk() ([]FnolLoss, bool) {
	if o == nil {
		return nil, false
	}
	return o.Losses, true
}

// SetLosses sets field value
func (o *FnolResponse) SetLosses(v []FnolLoss) {
	o.Losses = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *FnolResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *FnolResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *FnolResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *FnolResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetAccountLocator returns the AccountLocator field value if set, zero value otherwise.
func (o *FnolResponse) GetAccountLocator() string {
	if o == nil || IsNil(o.AccountLocator) {
		var ret string
		return ret
	}
	return *o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetAccountLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.AccountLocator) {
		return nil, false
	}
	return o.AccountLocator, true
}

// HasAccountLocator returns a boolean if a field has been set.
func (o *FnolResponse) HasAccountLocator() bool {
	if o != nil && !IsNil(o.AccountLocator) {
		return true
	}

	return false
}

// SetAccountLocator gets a reference to the given string and assigns it to the AccountLocator field.
func (o *FnolResponse) SetAccountLocator(v string) {
	o.AccountLocator = &v
}

// GetPolicyLocator returns the PolicyLocator field value if set, zero value otherwise.
func (o *FnolResponse) GetPolicyLocator() string {
	if o == nil || IsNil(o.PolicyLocator) {
		var ret string
		return ret
	}
	return *o.PolicyLocator
}

// GetPolicyLocatorOk returns a tuple with the PolicyLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetPolicyLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyLocator) {
		return nil, false
	}
	return o.PolicyLocator, true
}

// HasPolicyLocator returns a boolean if a field has been set.
func (o *FnolResponse) HasPolicyLocator() bool {
	if o != nil && !IsNil(o.PolicyLocator) {
		return true
	}

	return false
}

// SetPolicyLocator gets a reference to the given string and assigns it to the PolicyLocator field.
func (o *FnolResponse) SetPolicyLocator(v string) {
	o.PolicyLocator = &v
}

// GetSegmentLocator returns the SegmentLocator field value if set, zero value otherwise.
func (o *FnolResponse) GetSegmentLocator() string {
	if o == nil || IsNil(o.SegmentLocator) {
		var ret string
		return ret
	}
	return *o.SegmentLocator
}

// GetSegmentLocatorOk returns a tuple with the SegmentLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetSegmentLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentLocator) {
		return nil, false
	}
	return o.SegmentLocator, true
}

// HasSegmentLocator returns a boolean if a field has been set.
func (o *FnolResponse) HasSegmentLocator() bool {
	if o != nil && !IsNil(o.SegmentLocator) {
		return true
	}

	return false
}

// SetSegmentLocator gets a reference to the given string and assigns it to the SegmentLocator field.
func (o *FnolResponse) SetSegmentLocator(v string) {
	o.SegmentLocator = &v
}

// GetIncidentTime returns the IncidentTime field value if set, zero value otherwise.
func (o *FnolResponse) GetIncidentTime() time.Time {
	if o == nil || IsNil(o.IncidentTime) {
		var ret time.Time
		return ret
	}
	return *o.IncidentTime
}

// GetIncidentTimeOk returns a tuple with the IncidentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetIncidentTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.IncidentTime) {
		return nil, false
	}
	return o.IncidentTime, true
}

// HasIncidentTime returns a boolean if a field has been set.
func (o *FnolResponse) HasIncidentTime() bool {
	if o != nil && !IsNil(o.IncidentTime) {
		return true
	}

	return false
}

// SetIncidentTime gets a reference to the given time.Time and assigns it to the IncidentTime field.
func (o *FnolResponse) SetIncidentTime(v time.Time) {
	o.IncidentTime = &v
}

// GetIncidentTimezone returns the IncidentTimezone field value if set, zero value otherwise.
func (o *FnolResponse) GetIncidentTimezone() string {
	if o == nil || IsNil(o.IncidentTimezone) {
		var ret string
		return ret
	}
	return *o.IncidentTimezone
}

// GetIncidentTimezoneOk returns a tuple with the IncidentTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetIncidentTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.IncidentTimezone) {
		return nil, false
	}
	return o.IncidentTimezone, true
}

// HasIncidentTimezone returns a boolean if a field has been set.
func (o *FnolResponse) HasIncidentTimezone() bool {
	if o != nil && !IsNil(o.IncidentTimezone) {
		return true
	}

	return false
}

// SetIncidentTimezone gets a reference to the given string and assigns it to the IncidentTimezone field.
func (o *FnolResponse) SetIncidentTimezone(v string) {
	o.IncidentTimezone = &v
}

// GetIncidentSummary returns the IncidentSummary field value if set, zero value otherwise.
func (o *FnolResponse) GetIncidentSummary() string {
	if o == nil || IsNil(o.IncidentSummary) {
		var ret string
		return ret
	}
	return *o.IncidentSummary
}

// GetIncidentSummaryOk returns a tuple with the IncidentSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetIncidentSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.IncidentSummary) {
		return nil, false
	}
	return o.IncidentSummary, true
}

// HasIncidentSummary returns a boolean if a field has been set.
func (o *FnolResponse) HasIncidentSummary() bool {
	if o != nil && !IsNil(o.IncidentSummary) {
		return true
	}

	return false
}

// SetIncidentSummary gets a reference to the given string and assigns it to the IncidentSummary field.
func (o *FnolResponse) SetIncidentSummary(v string) {
	o.IncidentSummary = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *FnolResponse) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *FnolResponse) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *FnolResponse) SetRegion(v string) {
	o.Region = &v
}

// GetFnolNumber returns the FnolNumber field value if set, zero value otherwise.
func (o *FnolResponse) GetFnolNumber() string {
	if o == nil || IsNil(o.FnolNumber) {
		var ret string
		return ret
	}
	return *o.FnolNumber
}

// GetFnolNumberOk returns a tuple with the FnolNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetFnolNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FnolNumber) {
		return nil, false
	}
	return o.FnolNumber, true
}

// HasFnolNumber returns a boolean if a field has been set.
func (o *FnolResponse) HasFnolNumber() bool {
	if o != nil && !IsNil(o.FnolNumber) {
		return true
	}

	return false
}

// SetFnolNumber gets a reference to the given string and assigns it to the FnolNumber field.
func (o *FnolResponse) SetFnolNumber(v string) {
	o.FnolNumber = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FnolResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FnolResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FnolResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *FnolResponse) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *FnolResponse) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *FnolResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetValidationResult returns the ValidationResult field value if set, zero value otherwise.
func (o *FnolResponse) GetValidationResult() ValidationResult {
	if o == nil || IsNil(o.ValidationResult) {
		var ret ValidationResult
		return ret
	}
	return *o.ValidationResult
}

// GetValidationResultOk returns a tuple with the ValidationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetValidationResultOk() (*ValidationResult, bool) {
	if o == nil || IsNil(o.ValidationResult) {
		return nil, false
	}
	return o.ValidationResult, true
}

// HasValidationResult returns a boolean if a field has been set.
func (o *FnolResponse) HasValidationResult() bool {
	if o != nil && !IsNil(o.ValidationResult) {
		return true
	}

	return false
}

// SetValidationResult gets a reference to the given ValidationResult and assigns it to the ValidationResult field.
func (o *FnolResponse) SetValidationResult(v ValidationResult) {
	o.ValidationResult = &v
}

// GetClaims returns the Claims field value
func (o *FnolResponse) GetClaims() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Claims
}

// GetClaimsOk returns a tuple with the Claims field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetClaimsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Claims, true
}

// SetClaims sets field value
func (o *FnolResponse) SetClaims(v []string) {
	o.Claims = v
}

// GetContacts returns the Contacts field value
func (o *FnolResponse) GetContacts() []ContactRoles {
	if o == nil {
		var ret []ContactRoles
		return ret
	}

	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetContactsOk() ([]ContactRoles, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contacts, true
}

// SetContacts sets field value
func (o *FnolResponse) SetContacts(v []ContactRoles) {
	o.Contacts = v
}

// GetAnonymizedAt returns the AnonymizedAt field value if set, zero value otherwise.
func (o *FnolResponse) GetAnonymizedAt() time.Time {
	if o == nil || IsNil(o.AnonymizedAt) {
		var ret time.Time
		return ret
	}
	return *o.AnonymizedAt
}

// GetAnonymizedAtOk returns a tuple with the AnonymizedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FnolResponse) GetAnonymizedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AnonymizedAt) {
		return nil, false
	}
	return o.AnonymizedAt, true
}

// HasAnonymizedAt returns a boolean if a field has been set.
func (o *FnolResponse) HasAnonymizedAt() bool {
	if o != nil && !IsNil(o.AnonymizedAt) {
		return true
	}

	return false
}

// SetAnonymizedAt gets a reference to the given time.Time and assigns it to the AnonymizedAt field.
func (o *FnolResponse) SetAnonymizedAt(v time.Time) {
	o.AnonymizedAt = &v
}

func (o FnolResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FnolResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["type"] = o.Type
	toSerialize["data"] = o.Data
	toSerialize["fnolState"] = o.FnolState
	toSerialize["losses"] = o.Losses
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["createdBy"] = o.CreatedBy
	if !IsNil(o.AccountLocator) {
		toSerialize["accountLocator"] = o.AccountLocator
	}
	if !IsNil(o.PolicyLocator) {
		toSerialize["policyLocator"] = o.PolicyLocator
	}
	if !IsNil(o.SegmentLocator) {
		toSerialize["segmentLocator"] = o.SegmentLocator
	}
	if !IsNil(o.IncidentTime) {
		toSerialize["incidentTime"] = o.IncidentTime
	}
	if !IsNil(o.IncidentTimezone) {
		toSerialize["incidentTimezone"] = o.IncidentTimezone
	}
	if !IsNil(o.IncidentSummary) {
		toSerialize["incidentSummary"] = o.IncidentSummary
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.FnolNumber) {
		toSerialize["fnolNumber"] = o.FnolNumber
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.ValidationResult) {
		toSerialize["validationResult"] = o.ValidationResult
	}
	toSerialize["claims"] = o.Claims
	toSerialize["contacts"] = o.Contacts
	if !IsNil(o.AnonymizedAt) {
		toSerialize["anonymizedAt"] = o.AnonymizedAt
	}
	return toSerialize, nil
}

func (o *FnolResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"type",
		"data",
		"fnolState",
		"losses",
		"createdAt",
		"createdBy",
		"claims",
		"contacts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFnolResponse := _FnolResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFnolResponse)

	if err != nil {
		return err
	}

	*o = FnolResponse(varFnolResponse)

	return err
}

type NullableFnolResponse struct {
	value *FnolResponse
	isSet bool
}

func (v NullableFnolResponse) Get() *FnolResponse {
	return v.value
}

func (v *NullableFnolResponse) Set(val *FnolResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFnolResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFnolResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFnolResponse(val *FnolResponse) *NullableFnolResponse {
	return &NullableFnolResponse{value: val, isSet: true}
}

func (v NullableFnolResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFnolResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
