/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package workmanagement

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ActivityUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityUpdateRequest{}

// ActivityUpdateRequest struct for ActivityUpdateRequest
type ActivityUpdateRequest struct {
	DeadlineTime            *time.Time          `json:"deadlineTime,omitempty"`
	AddReferences           []ActivityReference `json:"addReferences"`
	RemoveReferences        []ActivityReference `json:"removeReferences"`
	AddUnderwritingFlags    []string            `json:"addUnderwritingFlags"`
	RemoveUnderwritingFlags []string            `json:"removeUnderwritingFlags"`
	Description             *string             `json:"description,omitempty"`
}

type _ActivityUpdateRequest ActivityUpdateRequest

// NewActivityUpdateRequest instantiates a new ActivityUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityUpdateRequest(addReferences []ActivityReference, removeReferences []ActivityReference, addUnderwritingFlags []string, removeUnderwritingFlags []string) *ActivityUpdateRequest {
	this := ActivityUpdateRequest{}
	this.AddReferences = addReferences
	this.RemoveReferences = removeReferences
	this.AddUnderwritingFlags = addUnderwritingFlags
	this.RemoveUnderwritingFlags = removeUnderwritingFlags
	return &this
}

// NewActivityUpdateRequestWithDefaults instantiates a new ActivityUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityUpdateRequestWithDefaults() *ActivityUpdateRequest {
	this := ActivityUpdateRequest{}
	return &this
}

// GetDeadlineTime returns the DeadlineTime field value if set, zero value otherwise.
func (o *ActivityUpdateRequest) GetDeadlineTime() time.Time {
	if o == nil || IsNil(o.DeadlineTime) {
		var ret time.Time
		return ret
	}
	return *o.DeadlineTime
}

// GetDeadlineTimeOk returns a tuple with the DeadlineTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityUpdateRequest) GetDeadlineTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeadlineTime) {
		return nil, false
	}
	return o.DeadlineTime, true
}

// HasDeadlineTime returns a boolean if a field has been set.
func (o *ActivityUpdateRequest) HasDeadlineTime() bool {
	if o != nil && !IsNil(o.DeadlineTime) {
		return true
	}

	return false
}

// SetDeadlineTime gets a reference to the given time.Time and assigns it to the DeadlineTime field.
func (o *ActivityUpdateRequest) SetDeadlineTime(v time.Time) {
	o.DeadlineTime = &v
}

// GetAddReferences returns the AddReferences field value
func (o *ActivityUpdateRequest) GetAddReferences() []ActivityReference {
	if o == nil {
		var ret []ActivityReference
		return ret
	}

	return o.AddReferences
}

// GetAddReferencesOk returns a tuple with the AddReferences field value
// and a boolean to check if the value has been set.
func (o *ActivityUpdateRequest) GetAddReferencesOk() ([]ActivityReference, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddReferences, true
}

// SetAddReferences sets field value
func (o *ActivityUpdateRequest) SetAddReferences(v []ActivityReference) {
	o.AddReferences = v
}

// GetRemoveReferences returns the RemoveReferences field value
func (o *ActivityUpdateRequest) GetRemoveReferences() []ActivityReference {
	if o == nil {
		var ret []ActivityReference
		return ret
	}

	return o.RemoveReferences
}

// GetRemoveReferencesOk returns a tuple with the RemoveReferences field value
// and a boolean to check if the value has been set.
func (o *ActivityUpdateRequest) GetRemoveReferencesOk() ([]ActivityReference, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveReferences, true
}

// SetRemoveReferences sets field value
func (o *ActivityUpdateRequest) SetRemoveReferences(v []ActivityReference) {
	o.RemoveReferences = v
}

// GetAddUnderwritingFlags returns the AddUnderwritingFlags field value
func (o *ActivityUpdateRequest) GetAddUnderwritingFlags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AddUnderwritingFlags
}

// GetAddUnderwritingFlagsOk returns a tuple with the AddUnderwritingFlags field value
// and a boolean to check if the value has been set.
func (o *ActivityUpdateRequest) GetAddUnderwritingFlagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddUnderwritingFlags, true
}

// SetAddUnderwritingFlags sets field value
func (o *ActivityUpdateRequest) SetAddUnderwritingFlags(v []string) {
	o.AddUnderwritingFlags = v
}

// GetRemoveUnderwritingFlags returns the RemoveUnderwritingFlags field value
func (o *ActivityUpdateRequest) GetRemoveUnderwritingFlags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RemoveUnderwritingFlags
}

// GetRemoveUnderwritingFlagsOk returns a tuple with the RemoveUnderwritingFlags field value
// and a boolean to check if the value has been set.
func (o *ActivityUpdateRequest) GetRemoveUnderwritingFlagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveUnderwritingFlags, true
}

// SetRemoveUnderwritingFlags sets field value
func (o *ActivityUpdateRequest) SetRemoveUnderwritingFlags(v []string) {
	o.RemoveUnderwritingFlags = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ActivityUpdateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ActivityUpdateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ActivityUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

func (o ActivityUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeadlineTime) {
		toSerialize["deadlineTime"] = o.DeadlineTime
	}
	toSerialize["addReferences"] = o.AddReferences
	toSerialize["removeReferences"] = o.RemoveReferences
	toSerialize["addUnderwritingFlags"] = o.AddUnderwritingFlags
	toSerialize["removeUnderwritingFlags"] = o.RemoveUnderwritingFlags
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *ActivityUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addReferences",
		"removeReferences",
		"addUnderwritingFlags",
		"removeUnderwritingFlags",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActivityUpdateRequest := _ActivityUpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActivityUpdateRequest)

	if err != nil {
		return err
	}

	*o = ActivityUpdateRequest(varActivityUpdateRequest)

	return err
}

type NullableActivityUpdateRequest struct {
	value *ActivityUpdateRequest
	isSet bool
}

func (v NullableActivityUpdateRequest) Get() *ActivityUpdateRequest {
	return v.value
}

func (v *NullableActivityUpdateRequest) Set(val *ActivityUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityUpdateRequest(val *ActivityUpdateRequest) *NullableActivityUpdateRequest {
	return &NullableActivityUpdateRequest{value: val, isSet: true}
}

func (v NullableActivityUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
