/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package workmanagement

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AssignmentCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignmentCreateRequest{}

// AssignmentCreateRequest struct for AssignmentCreateRequest
type AssignmentCreateRequest struct {
	UserLocator      string `json:"userLocator"`
	AssignmentRole   string `json:"assignmentRole"`
	ReferenceType    string `json:"referenceType"`
	ReferenceLocator string `json:"referenceLocator"`
}

type _AssignmentCreateRequest AssignmentCreateRequest

// NewAssignmentCreateRequest instantiates a new AssignmentCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignmentCreateRequest(userLocator string, assignmentRole string, referenceType string, referenceLocator string) *AssignmentCreateRequest {
	this := AssignmentCreateRequest{}
	this.UserLocator = userLocator
	this.AssignmentRole = assignmentRole
	this.ReferenceType = referenceType
	this.ReferenceLocator = referenceLocator
	return &this
}

// NewAssignmentCreateRequestWithDefaults instantiates a new AssignmentCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignmentCreateRequestWithDefaults() *AssignmentCreateRequest {
	this := AssignmentCreateRequest{}
	return &this
}

// GetUserLocator returns the UserLocator field value
func (o *AssignmentCreateRequest) GetUserLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserLocator
}

// GetUserLocatorOk returns a tuple with the UserLocator field value
// and a boolean to check if the value has been set.
func (o *AssignmentCreateRequest) GetUserLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserLocator, true
}

// SetUserLocator sets field value
func (o *AssignmentCreateRequest) SetUserLocator(v string) {
	o.UserLocator = v
}

// GetAssignmentRole returns the AssignmentRole field value
func (o *AssignmentCreateRequest) GetAssignmentRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssignmentRole
}

// GetAssignmentRoleOk returns a tuple with the AssignmentRole field value
// and a boolean to check if the value has been set.
func (o *AssignmentCreateRequest) GetAssignmentRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssignmentRole, true
}

// SetAssignmentRole sets field value
func (o *AssignmentCreateRequest) SetAssignmentRole(v string) {
	o.AssignmentRole = v
}

// GetReferenceType returns the ReferenceType field value
func (o *AssignmentCreateRequest) GetReferenceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value
// and a boolean to check if the value has been set.
func (o *AssignmentCreateRequest) GetReferenceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceType, true
}

// SetReferenceType sets field value
func (o *AssignmentCreateRequest) SetReferenceType(v string) {
	o.ReferenceType = v
}

// GetReferenceLocator returns the ReferenceLocator field value
func (o *AssignmentCreateRequest) GetReferenceLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceLocator
}

// GetReferenceLocatorOk returns a tuple with the ReferenceLocator field value
// and a boolean to check if the value has been set.
func (o *AssignmentCreateRequest) GetReferenceLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceLocator, true
}

// SetReferenceLocator sets field value
func (o *AssignmentCreateRequest) SetReferenceLocator(v string) {
	o.ReferenceLocator = v
}

func (o AssignmentCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignmentCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userLocator"] = o.UserLocator
	toSerialize["assignmentRole"] = o.AssignmentRole
	toSerialize["referenceType"] = o.ReferenceType
	toSerialize["referenceLocator"] = o.ReferenceLocator
	return toSerialize, nil
}

func (o *AssignmentCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userLocator",
		"assignmentRole",
		"referenceType",
		"referenceLocator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssignmentCreateRequest := _AssignmentCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAssignmentCreateRequest)

	if err != nil {
		return err
	}

	*o = AssignmentCreateRequest(varAssignmentCreateRequest)

	return err
}

type NullableAssignmentCreateRequest struct {
	value *AssignmentCreateRequest
	isSet bool
}

func (v NullableAssignmentCreateRequest) Get() *AssignmentCreateRequest {
	return v.value
}

func (v *NullableAssignmentCreateRequest) Set(val *AssignmentCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignmentCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignmentCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignmentCreateRequest(val *AssignmentCreateRequest) *NullableAssignmentCreateRequest {
	return &NullableAssignmentCreateRequest{value: val, isSet: true}
}

func (v NullableAssignmentCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignmentCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
