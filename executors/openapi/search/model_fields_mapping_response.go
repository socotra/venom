/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package search

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the FieldsMappingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FieldsMappingResponse{}

// FieldsMappingResponse struct for FieldsMappingResponse
type FieldsMappingResponse struct {
	Index  string   `json:"index"`
	Fields []string `json:"fields"`
}

type _FieldsMappingResponse FieldsMappingResponse

// NewFieldsMappingResponse instantiates a new FieldsMappingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFieldsMappingResponse(index string, fields []string) *FieldsMappingResponse {
	this := FieldsMappingResponse{}
	this.Index = index
	this.Fields = fields
	return &this
}

// NewFieldsMappingResponseWithDefaults instantiates a new FieldsMappingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFieldsMappingResponseWithDefaults() *FieldsMappingResponse {
	this := FieldsMappingResponse{}
	return &this
}

// GetIndex returns the Index field value
func (o *FieldsMappingResponse) GetIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *FieldsMappingResponse) GetIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *FieldsMappingResponse) SetIndex(v string) {
	o.Index = v
}

// GetFields returns the Fields field value
func (o *FieldsMappingResponse) GetFields() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *FieldsMappingResponse) GetFieldsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *FieldsMappingResponse) SetFields(v []string) {
	o.Fields = v
}

func (o FieldsMappingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FieldsMappingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index"] = o.Index
	toSerialize["fields"] = o.Fields
	return toSerialize, nil
}

func (o *FieldsMappingResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"index",
		"fields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFieldsMappingResponse := _FieldsMappingResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFieldsMappingResponse)

	if err != nil {
		return err
	}

	*o = FieldsMappingResponse(varFieldsMappingResponse)

	return err
}

type NullableFieldsMappingResponse struct {
	value *FieldsMappingResponse
	isSet bool
}

func (v NullableFieldsMappingResponse) Get() *FieldsMappingResponse {
	return v.value
}

func (v *NullableFieldsMappingResponse) Set(val *FieldsMappingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldsMappingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldsMappingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldsMappingResponse(val *FieldsMappingResponse) *NullableFieldsMappingResponse {
	return &NullableFieldsMappingResponse{value: val, isSet: true}
}

func (v NullableFieldsMappingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldsMappingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
