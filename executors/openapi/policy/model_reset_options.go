/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ResetOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResetOptions{}

// ResetOptions struct for ResetOptions
type ResetOptions struct {
	ResetAllUnderwritingFlags   bool     `json:"resetAllUnderwritingFlags"`
	ResetFlags                  []string `json:"resetFlags"`
	ResetFlagsAction            string   `json:"resetFlagsAction"`
	DeleteAllAutomaticDocuments bool     `json:"deleteAllAutomaticDocuments"`
	DeleteDocuments             []string `json:"deleteDocuments"`
}

type _ResetOptions ResetOptions

// NewResetOptions instantiates a new ResetOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetOptions(resetAllUnderwritingFlags bool, resetFlags []string, resetFlagsAction string, deleteAllAutomaticDocuments bool, deleteDocuments []string) *ResetOptions {
	this := ResetOptions{}
	this.ResetAllUnderwritingFlags = resetAllUnderwritingFlags
	this.ResetFlags = resetFlags
	this.ResetFlagsAction = resetFlagsAction
	this.DeleteAllAutomaticDocuments = deleteAllAutomaticDocuments
	this.DeleteDocuments = deleteDocuments
	return &this
}

// NewResetOptionsWithDefaults instantiates a new ResetOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetOptionsWithDefaults() *ResetOptions {
	this := ResetOptions{}
	return &this
}

// GetResetAllUnderwritingFlags returns the ResetAllUnderwritingFlags field value
func (o *ResetOptions) GetResetAllUnderwritingFlags() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ResetAllUnderwritingFlags
}

// GetResetAllUnderwritingFlagsOk returns a tuple with the ResetAllUnderwritingFlags field value
// and a boolean to check if the value has been set.
func (o *ResetOptions) GetResetAllUnderwritingFlagsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetAllUnderwritingFlags, true
}

// SetResetAllUnderwritingFlags sets field value
func (o *ResetOptions) SetResetAllUnderwritingFlags(v bool) {
	o.ResetAllUnderwritingFlags = v
}

// GetResetFlags returns the ResetFlags field value
func (o *ResetOptions) GetResetFlags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ResetFlags
}

// GetResetFlagsOk returns a tuple with the ResetFlags field value
// and a boolean to check if the value has been set.
func (o *ResetOptions) GetResetFlagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResetFlags, true
}

// SetResetFlags sets field value
func (o *ResetOptions) SetResetFlags(v []string) {
	o.ResetFlags = v
}

// GetResetFlagsAction returns the ResetFlagsAction field value
func (o *ResetOptions) GetResetFlagsAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResetFlagsAction
}

// GetResetFlagsActionOk returns a tuple with the ResetFlagsAction field value
// and a boolean to check if the value has been set.
func (o *ResetOptions) GetResetFlagsActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetFlagsAction, true
}

// SetResetFlagsAction sets field value
func (o *ResetOptions) SetResetFlagsAction(v string) {
	o.ResetFlagsAction = v
}

// GetDeleteAllAutomaticDocuments returns the DeleteAllAutomaticDocuments field value
func (o *ResetOptions) GetDeleteAllAutomaticDocuments() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DeleteAllAutomaticDocuments
}

// GetDeleteAllAutomaticDocumentsOk returns a tuple with the DeleteAllAutomaticDocuments field value
// and a boolean to check if the value has been set.
func (o *ResetOptions) GetDeleteAllAutomaticDocumentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeleteAllAutomaticDocuments, true
}

// SetDeleteAllAutomaticDocuments sets field value
func (o *ResetOptions) SetDeleteAllAutomaticDocuments(v bool) {
	o.DeleteAllAutomaticDocuments = v
}

// GetDeleteDocuments returns the DeleteDocuments field value
func (o *ResetOptions) GetDeleteDocuments() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DeleteDocuments
}

// GetDeleteDocumentsOk returns a tuple with the DeleteDocuments field value
// and a boolean to check if the value has been set.
func (o *ResetOptions) GetDeleteDocumentsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeleteDocuments, true
}

// SetDeleteDocuments sets field value
func (o *ResetOptions) SetDeleteDocuments(v []string) {
	o.DeleteDocuments = v
}

func (o ResetOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResetOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resetAllUnderwritingFlags"] = o.ResetAllUnderwritingFlags
	toSerialize["resetFlags"] = o.ResetFlags
	toSerialize["resetFlagsAction"] = o.ResetFlagsAction
	toSerialize["deleteAllAutomaticDocuments"] = o.DeleteAllAutomaticDocuments
	toSerialize["deleteDocuments"] = o.DeleteDocuments
	return toSerialize, nil
}

func (o *ResetOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resetAllUnderwritingFlags",
		"resetFlags",
		"resetFlagsAction",
		"deleteAllAutomaticDocuments",
		"deleteDocuments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResetOptions := _ResetOptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResetOptions)

	if err != nil {
		return err
	}

	*o = ResetOptions(varResetOptions)

	return err
}

type NullableResetOptions struct {
	value *ResetOptions
	isSet bool
}

func (v NullableResetOptions) Get() *ResetOptions {
	return v.value
}

func (v *NullableResetOptions) Set(val *ResetOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableResetOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableResetOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetOptions(val *ResetOptions) *NullableResetOptions {
	return &NullableResetOptions{value: val, isSet: true}
}

func (v NullableResetOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
