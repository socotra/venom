/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PatchStaticDataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchStaticDataRequest{}

// PatchStaticDataRequest struct for PatchStaticDataRequest
type PatchStaticDataRequest struct {
	SetData    map[string]map[string]interface{} `json:"setData"`
	RemoveData map[string]map[string]interface{} `json:"removeData"`
}

type _PatchStaticDataRequest PatchStaticDataRequest

// NewPatchStaticDataRequest instantiates a new PatchStaticDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchStaticDataRequest(setData map[string]map[string]interface{}, removeData map[string]map[string]interface{}) *PatchStaticDataRequest {
	this := PatchStaticDataRequest{}
	this.SetData = setData
	this.RemoveData = removeData
	return &this
}

// NewPatchStaticDataRequestWithDefaults instantiates a new PatchStaticDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchStaticDataRequestWithDefaults() *PatchStaticDataRequest {
	this := PatchStaticDataRequest{}
	return &this
}

// GetSetData returns the SetData field value
func (o *PatchStaticDataRequest) GetSetData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.SetData
}

// GetSetDataOk returns a tuple with the SetData field value
// and a boolean to check if the value has been set.
func (o *PatchStaticDataRequest) GetSetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.SetData, true
}

// SetSetData sets field value
func (o *PatchStaticDataRequest) SetSetData(v map[string]map[string]interface{}) {
	o.SetData = v
}

// GetRemoveData returns the RemoveData field value
func (o *PatchStaticDataRequest) GetRemoveData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.RemoveData
}

// GetRemoveDataOk returns a tuple with the RemoveData field value
// and a boolean to check if the value has been set.
func (o *PatchStaticDataRequest) GetRemoveDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.RemoveData, true
}

// SetRemoveData sets field value
func (o *PatchStaticDataRequest) SetRemoveData(v map[string]map[string]interface{}) {
	o.RemoveData = v
}

func (o PatchStaticDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchStaticDataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["setData"] = o.SetData
	toSerialize["removeData"] = o.RemoveData
	return toSerialize, nil
}

func (o *PatchStaticDataRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"setData",
		"removeData",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchStaticDataRequest := _PatchStaticDataRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPatchStaticDataRequest)

	if err != nil {
		return err
	}

	*o = PatchStaticDataRequest(varPatchStaticDataRequest)

	return err
}

type NullablePatchStaticDataRequest struct {
	value *PatchStaticDataRequest
	isSet bool
}

func (v NullablePatchStaticDataRequest) Get() *PatchStaticDataRequest {
	return v.value
}

func (v *NullablePatchStaticDataRequest) Set(val *PatchStaticDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchStaticDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchStaticDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchStaticDataRequest(val *PatchStaticDataRequest) *NullablePatchStaticDataRequest {
	return &NullablePatchStaticDataRequest{value: val, isSet: true}
}

func (v NullablePatchStaticDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchStaticDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
