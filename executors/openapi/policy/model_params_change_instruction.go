/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ParamsChangeInstruction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParamsChangeInstruction{}

// ParamsChangeInstruction struct for ParamsChangeInstruction
type ParamsChangeInstruction struct {
	ChangeInstruction
	Locator          string       `json:"locator"`
	Action           string       `json:"action"`
	EffectiveTime    time.Time    `json:"effectiveTime"`
	NewPolicyEndTime *time.Time   `json:"newPolicyEndTime,omitempty"`
	Preferences      *Preferences `json:"preferences,omitempty"`
	// Deprecated
	BillingModeChange    *bool `json:"billingModeChange,omitempty"`
	TriggerBillingChange *bool `json:"triggerBillingChange,omitempty"`
	// Deprecated
	InheritSettings *bool `json:"inheritSettings,omitempty"`
}

type _ParamsChangeInstruction ParamsChangeInstruction

// NewParamsChangeInstruction instantiates a new ParamsChangeInstruction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParamsChangeInstruction(locator string, action string, effectiveTime time.Time) *ParamsChangeInstruction {
	this := ParamsChangeInstruction{}
	this.Action = action
	this.Locator = locator
	this.EffectiveTime = effectiveTime
	return &this
}

// NewParamsChangeInstructionWithDefaults instantiates a new ParamsChangeInstruction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParamsChangeInstructionWithDefaults() *ParamsChangeInstruction {
	this := ParamsChangeInstruction{}
	return &this
}

// GetLocator returns the Locator field value
func (o *ParamsChangeInstruction) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *ParamsChangeInstruction) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *ParamsChangeInstruction) SetLocator(v string) {
	o.Locator = v
}

// GetAction returns the Action field value
func (o *ParamsChangeInstruction) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ParamsChangeInstruction) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ParamsChangeInstruction) SetAction(v string) {
	o.Action = v
}

// GetEffectiveTime returns the EffectiveTime field value
func (o *ParamsChangeInstruction) GetEffectiveTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EffectiveTime
}

// GetEffectiveTimeOk returns a tuple with the EffectiveTime field value
// and a boolean to check if the value has been set.
func (o *ParamsChangeInstruction) GetEffectiveTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectiveTime, true
}

// SetEffectiveTime sets field value
func (o *ParamsChangeInstruction) SetEffectiveTime(v time.Time) {
	o.EffectiveTime = v
}

// GetNewPolicyEndTime returns the NewPolicyEndTime field value if set, zero value otherwise.
func (o *ParamsChangeInstruction) GetNewPolicyEndTime() time.Time {
	if o == nil || IsNil(o.NewPolicyEndTime) {
		var ret time.Time
		return ret
	}
	return *o.NewPolicyEndTime
}

// GetNewPolicyEndTimeOk returns a tuple with the NewPolicyEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsChangeInstruction) GetNewPolicyEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NewPolicyEndTime) {
		return nil, false
	}
	return o.NewPolicyEndTime, true
}

// HasNewPolicyEndTime returns a boolean if a field has been set.
func (o *ParamsChangeInstruction) HasNewPolicyEndTime() bool {
	if o != nil && !IsNil(o.NewPolicyEndTime) {
		return true
	}

	return false
}

// SetNewPolicyEndTime gets a reference to the given time.Time and assigns it to the NewPolicyEndTime field.
func (o *ParamsChangeInstruction) SetNewPolicyEndTime(v time.Time) {
	o.NewPolicyEndTime = &v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *ParamsChangeInstruction) GetPreferences() Preferences {
	if o == nil || IsNil(o.Preferences) {
		var ret Preferences
		return ret
	}
	return *o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsChangeInstruction) GetPreferencesOk() (*Preferences, bool) {
	if o == nil || IsNil(o.Preferences) {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *ParamsChangeInstruction) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given Preferences and assigns it to the Preferences field.
func (o *ParamsChangeInstruction) SetPreferences(v Preferences) {
	o.Preferences = &v
}

// GetBillingModeChange returns the BillingModeChange field value if set, zero value otherwise.
// Deprecated
func (o *ParamsChangeInstruction) GetBillingModeChange() bool {
	if o == nil || IsNil(o.BillingModeChange) {
		var ret bool
		return ret
	}
	return *o.BillingModeChange
}

// GetBillingModeChangeOk returns a tuple with the BillingModeChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ParamsChangeInstruction) GetBillingModeChangeOk() (*bool, bool) {
	if o == nil || IsNil(o.BillingModeChange) {
		return nil, false
	}
	return o.BillingModeChange, true
}

// HasBillingModeChange returns a boolean if a field has been set.
func (o *ParamsChangeInstruction) HasBillingModeChange() bool {
	if o != nil && !IsNil(o.BillingModeChange) {
		return true
	}

	return false
}

// SetBillingModeChange gets a reference to the given bool and assigns it to the BillingModeChange field.
// Deprecated
func (o *ParamsChangeInstruction) SetBillingModeChange(v bool) {
	o.BillingModeChange = &v
}

// GetTriggerBillingChange returns the TriggerBillingChange field value if set, zero value otherwise.
func (o *ParamsChangeInstruction) GetTriggerBillingChange() bool {
	if o == nil || IsNil(o.TriggerBillingChange) {
		var ret bool
		return ret
	}
	return *o.TriggerBillingChange
}

// GetTriggerBillingChangeOk returns a tuple with the TriggerBillingChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsChangeInstruction) GetTriggerBillingChangeOk() (*bool, bool) {
	if o == nil || IsNil(o.TriggerBillingChange) {
		return nil, false
	}
	return o.TriggerBillingChange, true
}

// HasTriggerBillingChange returns a boolean if a field has been set.
func (o *ParamsChangeInstruction) HasTriggerBillingChange() bool {
	if o != nil && !IsNil(o.TriggerBillingChange) {
		return true
	}

	return false
}

// SetTriggerBillingChange gets a reference to the given bool and assigns it to the TriggerBillingChange field.
func (o *ParamsChangeInstruction) SetTriggerBillingChange(v bool) {
	o.TriggerBillingChange = &v
}

// GetInheritSettings returns the InheritSettings field value if set, zero value otherwise.
// Deprecated
func (o *ParamsChangeInstruction) GetInheritSettings() bool {
	if o == nil || IsNil(o.InheritSettings) {
		var ret bool
		return ret
	}
	return *o.InheritSettings
}

// GetInheritSettingsOk returns a tuple with the InheritSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ParamsChangeInstruction) GetInheritSettingsOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritSettings) {
		return nil, false
	}
	return o.InheritSettings, true
}

// HasInheritSettings returns a boolean if a field has been set.
func (o *ParamsChangeInstruction) HasInheritSettings() bool {
	if o != nil && !IsNil(o.InheritSettings) {
		return true
	}

	return false
}

// SetInheritSettings gets a reference to the given bool and assigns it to the InheritSettings field.
// Deprecated
func (o *ParamsChangeInstruction) SetInheritSettings(v bool) {
	o.InheritSettings = &v
}

func (o ParamsChangeInstruction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParamsChangeInstruction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["action"] = o.Action
	toSerialize["effectiveTime"] = o.EffectiveTime
	if !IsNil(o.NewPolicyEndTime) {
		toSerialize["newPolicyEndTime"] = o.NewPolicyEndTime
	}
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	if !IsNil(o.BillingModeChange) {
		toSerialize["billingModeChange"] = o.BillingModeChange
	}
	if !IsNil(o.TriggerBillingChange) {
		toSerialize["triggerBillingChange"] = o.TriggerBillingChange
	}
	if !IsNil(o.InheritSettings) {
		toSerialize["inheritSettings"] = o.InheritSettings
	}
	return toSerialize, nil
}

func (o *ParamsChangeInstruction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"action",
		"effectiveTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParamsChangeInstruction := _ParamsChangeInstruction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParamsChangeInstruction)

	if err != nil {
		return err
	}

	*o = ParamsChangeInstruction(varParamsChangeInstruction)

	return err
}

type NullableParamsChangeInstruction struct {
	value *ParamsChangeInstruction
	isSet bool
}

func (v NullableParamsChangeInstruction) Get() *ParamsChangeInstruction {
	return v.value
}

func (v *NullableParamsChangeInstruction) Set(val *ParamsChangeInstruction) {
	v.value = val
	v.isSet = true
}

func (v NullableParamsChangeInstruction) IsSet() bool {
	return v.isSet
}

func (v *NullableParamsChangeInstruction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParamsChangeInstruction(val *ParamsChangeInstruction) *NullableParamsChangeInstruction {
	return &NullableParamsChangeInstruction{value: val, isSet: true}
}

func (v NullableParamsChangeInstruction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParamsChangeInstruction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
