/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccountReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountReq{}

// AccountReq struct for AccountReq
type AccountReq struct {
	Type                       string                            `json:"type"`
	AutoValidate               bool                              `json:"autoValidate"`
	Data                       map[string]map[string]interface{} `json:"data"`
	DelinquencyPlanName        *string                           `json:"delinquencyPlanName,omitempty"`
	ShortfallTolerancePlanName *string                           `json:"shortfallTolerancePlanName,omitempty"`
	AutoRenewalPlanName        *string                           `json:"autoRenewalPlanName,omitempty"`
	ExcessCreditPlanName       *string                           `json:"excessCreditPlanName,omitempty"`
	Preferences                *Preferences                      `json:"preferences,omitempty"`
	BillingLevel               *string                           `json:"billingLevel,omitempty"`
	Region                     *string                           `json:"region,omitempty"`
	InvoiceDocument            *string                           `json:"invoiceDocument,omitempty"`
	Timezone                   *string                           `json:"timezone,omitempty"`
	Contacts                   []ContactRoles                    `json:"contacts,omitempty"`
	InvoicingPlanName          *string                           `json:"invoicingPlanName,omitempty"`
}

type _AccountReq AccountReq

// NewAccountReq instantiates a new AccountReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountReq(type_ string, autoValidate bool, data map[string]map[string]interface{}) *AccountReq {
	this := AccountReq{}
	this.Type = type_
	this.AutoValidate = autoValidate
	this.Data = data
	return &this
}

// NewAccountReqWithDefaults instantiates a new AccountReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountReqWithDefaults() *AccountReq {
	this := AccountReq{}
	return &this
}

// GetType returns the Type field value
func (o *AccountReq) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccountReq) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AccountReq) SetType(v string) {
	o.Type = v
}

// GetAutoValidate returns the AutoValidate field value
func (o *AccountReq) GetAutoValidate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoValidate
}

// GetAutoValidateOk returns a tuple with the AutoValidate field value
// and a boolean to check if the value has been set.
func (o *AccountReq) GetAutoValidateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoValidate, true
}

// SetAutoValidate sets field value
func (o *AccountReq) SetAutoValidate(v bool) {
	o.AutoValidate = v
}

// GetData returns the Data field value
func (o *AccountReq) GetData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AccountReq) GetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AccountReq) SetData(v map[string]map[string]interface{}) {
	o.Data = v
}

// GetDelinquencyPlanName returns the DelinquencyPlanName field value if set, zero value otherwise.
func (o *AccountReq) GetDelinquencyPlanName() string {
	if o == nil || IsNil(o.DelinquencyPlanName) {
		var ret string
		return ret
	}
	return *o.DelinquencyPlanName
}

// GetDelinquencyPlanNameOk returns a tuple with the DelinquencyPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetDelinquencyPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.DelinquencyPlanName) {
		return nil, false
	}
	return o.DelinquencyPlanName, true
}

// HasDelinquencyPlanName returns a boolean if a field has been set.
func (o *AccountReq) HasDelinquencyPlanName() bool {
	if o != nil && !IsNil(o.DelinquencyPlanName) {
		return true
	}

	return false
}

// SetDelinquencyPlanName gets a reference to the given string and assigns it to the DelinquencyPlanName field.
func (o *AccountReq) SetDelinquencyPlanName(v string) {
	o.DelinquencyPlanName = &v
}

// GetShortfallTolerancePlanName returns the ShortfallTolerancePlanName field value if set, zero value otherwise.
func (o *AccountReq) GetShortfallTolerancePlanName() string {
	if o == nil || IsNil(o.ShortfallTolerancePlanName) {
		var ret string
		return ret
	}
	return *o.ShortfallTolerancePlanName
}

// GetShortfallTolerancePlanNameOk returns a tuple with the ShortfallTolerancePlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetShortfallTolerancePlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortfallTolerancePlanName) {
		return nil, false
	}
	return o.ShortfallTolerancePlanName, true
}

// HasShortfallTolerancePlanName returns a boolean if a field has been set.
func (o *AccountReq) HasShortfallTolerancePlanName() bool {
	if o != nil && !IsNil(o.ShortfallTolerancePlanName) {
		return true
	}

	return false
}

// SetShortfallTolerancePlanName gets a reference to the given string and assigns it to the ShortfallTolerancePlanName field.
func (o *AccountReq) SetShortfallTolerancePlanName(v string) {
	o.ShortfallTolerancePlanName = &v
}

// GetAutoRenewalPlanName returns the AutoRenewalPlanName field value if set, zero value otherwise.
func (o *AccountReq) GetAutoRenewalPlanName() string {
	if o == nil || IsNil(o.AutoRenewalPlanName) {
		var ret string
		return ret
	}
	return *o.AutoRenewalPlanName
}

// GetAutoRenewalPlanNameOk returns a tuple with the AutoRenewalPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetAutoRenewalPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.AutoRenewalPlanName) {
		return nil, false
	}
	return o.AutoRenewalPlanName, true
}

// HasAutoRenewalPlanName returns a boolean if a field has been set.
func (o *AccountReq) HasAutoRenewalPlanName() bool {
	if o != nil && !IsNil(o.AutoRenewalPlanName) {
		return true
	}

	return false
}

// SetAutoRenewalPlanName gets a reference to the given string and assigns it to the AutoRenewalPlanName field.
func (o *AccountReq) SetAutoRenewalPlanName(v string) {
	o.AutoRenewalPlanName = &v
}

// GetExcessCreditPlanName returns the ExcessCreditPlanName field value if set, zero value otherwise.
func (o *AccountReq) GetExcessCreditPlanName() string {
	if o == nil || IsNil(o.ExcessCreditPlanName) {
		var ret string
		return ret
	}
	return *o.ExcessCreditPlanName
}

// GetExcessCreditPlanNameOk returns a tuple with the ExcessCreditPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetExcessCreditPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.ExcessCreditPlanName) {
		return nil, false
	}
	return o.ExcessCreditPlanName, true
}

// HasExcessCreditPlanName returns a boolean if a field has been set.
func (o *AccountReq) HasExcessCreditPlanName() bool {
	if o != nil && !IsNil(o.ExcessCreditPlanName) {
		return true
	}

	return false
}

// SetExcessCreditPlanName gets a reference to the given string and assigns it to the ExcessCreditPlanName field.
func (o *AccountReq) SetExcessCreditPlanName(v string) {
	o.ExcessCreditPlanName = &v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *AccountReq) GetPreferences() Preferences {
	if o == nil || IsNil(o.Preferences) {
		var ret Preferences
		return ret
	}
	return *o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetPreferencesOk() (*Preferences, bool) {
	if o == nil || IsNil(o.Preferences) {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *AccountReq) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given Preferences and assigns it to the Preferences field.
func (o *AccountReq) SetPreferences(v Preferences) {
	o.Preferences = &v
}

// GetBillingLevel returns the BillingLevel field value if set, zero value otherwise.
func (o *AccountReq) GetBillingLevel() string {
	if o == nil || IsNil(o.BillingLevel) {
		var ret string
		return ret
	}
	return *o.BillingLevel
}

// GetBillingLevelOk returns a tuple with the BillingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetBillingLevelOk() (*string, bool) {
	if o == nil || IsNil(o.BillingLevel) {
		return nil, false
	}
	return o.BillingLevel, true
}

// HasBillingLevel returns a boolean if a field has been set.
func (o *AccountReq) HasBillingLevel() bool {
	if o != nil && !IsNil(o.BillingLevel) {
		return true
	}

	return false
}

// SetBillingLevel gets a reference to the given string and assigns it to the BillingLevel field.
func (o *AccountReq) SetBillingLevel(v string) {
	o.BillingLevel = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AccountReq) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AccountReq) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AccountReq) SetRegion(v string) {
	o.Region = &v
}

// GetInvoiceDocument returns the InvoiceDocument field value if set, zero value otherwise.
func (o *AccountReq) GetInvoiceDocument() string {
	if o == nil || IsNil(o.InvoiceDocument) {
		var ret string
		return ret
	}
	return *o.InvoiceDocument
}

// GetInvoiceDocumentOk returns a tuple with the InvoiceDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetInvoiceDocumentOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceDocument) {
		return nil, false
	}
	return o.InvoiceDocument, true
}

// HasInvoiceDocument returns a boolean if a field has been set.
func (o *AccountReq) HasInvoiceDocument() bool {
	if o != nil && !IsNil(o.InvoiceDocument) {
		return true
	}

	return false
}

// SetInvoiceDocument gets a reference to the given string and assigns it to the InvoiceDocument field.
func (o *AccountReq) SetInvoiceDocument(v string) {
	o.InvoiceDocument = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *AccountReq) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *AccountReq) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *AccountReq) SetTimezone(v string) {
	o.Timezone = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *AccountReq) GetContacts() []ContactRoles {
	if o == nil || IsNil(o.Contacts) {
		var ret []ContactRoles
		return ret
	}
	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetContactsOk() ([]ContactRoles, bool) {
	if o == nil || IsNil(o.Contacts) {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *AccountReq) HasContacts() bool {
	if o != nil && !IsNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []ContactRoles and assigns it to the Contacts field.
func (o *AccountReq) SetContacts(v []ContactRoles) {
	o.Contacts = v
}

// GetInvoicingPlanName returns the InvoicingPlanName field value if set, zero value otherwise.
func (o *AccountReq) GetInvoicingPlanName() string {
	if o == nil || IsNil(o.InvoicingPlanName) {
		var ret string
		return ret
	}
	return *o.InvoicingPlanName
}

// GetInvoicingPlanNameOk returns a tuple with the InvoicingPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountReq) GetInvoicingPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.InvoicingPlanName) {
		return nil, false
	}
	return o.InvoicingPlanName, true
}

// HasInvoicingPlanName returns a boolean if a field has been set.
func (o *AccountReq) HasInvoicingPlanName() bool {
	if o != nil && !IsNil(o.InvoicingPlanName) {
		return true
	}

	return false
}

// SetInvoicingPlanName gets a reference to the given string and assigns it to the InvoicingPlanName field.
func (o *AccountReq) SetInvoicingPlanName(v string) {
	o.InvoicingPlanName = &v
}

func (o AccountReq) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["autoValidate"] = o.AutoValidate
	toSerialize["data"] = o.Data
	if !IsNil(o.DelinquencyPlanName) {
		toSerialize["delinquencyPlanName"] = o.DelinquencyPlanName
	}
	if !IsNil(o.ShortfallTolerancePlanName) {
		toSerialize["shortfallTolerancePlanName"] = o.ShortfallTolerancePlanName
	}
	if !IsNil(o.AutoRenewalPlanName) {
		toSerialize["autoRenewalPlanName"] = o.AutoRenewalPlanName
	}
	if !IsNil(o.ExcessCreditPlanName) {
		toSerialize["excessCreditPlanName"] = o.ExcessCreditPlanName
	}
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	if !IsNil(o.BillingLevel) {
		toSerialize["billingLevel"] = o.BillingLevel
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.InvoiceDocument) {
		toSerialize["invoiceDocument"] = o.InvoiceDocument
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !IsNil(o.InvoicingPlanName) {
		toSerialize["invoicingPlanName"] = o.InvoicingPlanName
	}
	return toSerialize, nil
}

func (o *AccountReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"autoValidate",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountReq := _AccountReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountReq)

	if err != nil {
		return err
	}

	*o = AccountReq(varAccountReq)

	return err
}

type NullableAccountReq struct {
	value *AccountReq
	isSet bool
}

func (v NullableAccountReq) Get() *AccountReq {
	return v.value
}

func (v *NullableAccountReq) Set(val *AccountReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountReq(val *AccountReq) *NullableAccountReq {
	return &NullableAccountReq{value: val, isSet: true}
}

func (v NullableAccountReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
