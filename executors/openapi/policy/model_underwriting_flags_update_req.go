/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UnderwritingFlagsUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnderwritingFlagsUpdateReq{}

// UnderwritingFlagsUpdateReq struct for UnderwritingFlagsUpdateReq
type UnderwritingFlagsUpdateReq struct {
	AddFlags   []UnderwritingFlagCreateRequest `json:"addFlags"`
	ClearFlags []string                        `json:"clearFlags"`
}

type _UnderwritingFlagsUpdateReq UnderwritingFlagsUpdateReq

// NewUnderwritingFlagsUpdateReq instantiates a new UnderwritingFlagsUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnderwritingFlagsUpdateReq(addFlags []UnderwritingFlagCreateRequest, clearFlags []string) *UnderwritingFlagsUpdateReq {
	this := UnderwritingFlagsUpdateReq{}
	this.AddFlags = addFlags
	this.ClearFlags = clearFlags
	return &this
}

// NewUnderwritingFlagsUpdateReqWithDefaults instantiates a new UnderwritingFlagsUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnderwritingFlagsUpdateReqWithDefaults() *UnderwritingFlagsUpdateReq {
	this := UnderwritingFlagsUpdateReq{}
	return &this
}

// GetAddFlags returns the AddFlags field value
func (o *UnderwritingFlagsUpdateReq) GetAddFlags() []UnderwritingFlagCreateRequest {
	if o == nil {
		var ret []UnderwritingFlagCreateRequest
		return ret
	}

	return o.AddFlags
}

// GetAddFlagsOk returns a tuple with the AddFlags field value
// and a boolean to check if the value has been set.
func (o *UnderwritingFlagsUpdateReq) GetAddFlagsOk() ([]UnderwritingFlagCreateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddFlags, true
}

// SetAddFlags sets field value
func (o *UnderwritingFlagsUpdateReq) SetAddFlags(v []UnderwritingFlagCreateRequest) {
	o.AddFlags = v
}

// GetClearFlags returns the ClearFlags field value
func (o *UnderwritingFlagsUpdateReq) GetClearFlags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ClearFlags
}

// GetClearFlagsOk returns a tuple with the ClearFlags field value
// and a boolean to check if the value has been set.
func (o *UnderwritingFlagsUpdateReq) GetClearFlagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClearFlags, true
}

// SetClearFlags sets field value
func (o *UnderwritingFlagsUpdateReq) SetClearFlags(v []string) {
	o.ClearFlags = v
}

func (o UnderwritingFlagsUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnderwritingFlagsUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addFlags"] = o.AddFlags
	toSerialize["clearFlags"] = o.ClearFlags
	return toSerialize, nil
}

func (o *UnderwritingFlagsUpdateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addFlags",
		"clearFlags",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnderwritingFlagsUpdateReq := _UnderwritingFlagsUpdateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnderwritingFlagsUpdateReq)

	if err != nil {
		return err
	}

	*o = UnderwritingFlagsUpdateReq(varUnderwritingFlagsUpdateReq)

	return err
}

type NullableUnderwritingFlagsUpdateReq struct {
	value *UnderwritingFlagsUpdateReq
	isSet bool
}

func (v NullableUnderwritingFlagsUpdateReq) Get() *UnderwritingFlagsUpdateReq {
	return v.value
}

func (v *NullableUnderwritingFlagsUpdateReq) Set(val *UnderwritingFlagsUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUnderwritingFlagsUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUnderwritingFlagsUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnderwritingFlagsUpdateReq(val *UnderwritingFlagsUpdateReq) *NullableUnderwritingFlagsUpdateReq {
	return &NullableUnderwritingFlagsUpdateReq{value: val, isSet: true}
}

func (v NullableUnderwritingFlagsUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnderwritingFlagsUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
