/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateDelinquencyPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDelinquencyPlan{}

// UpdateDelinquencyPlan struct for UpdateDelinquencyPlan
type UpdateDelinquencyPlan struct {
	DelinquencyPlanName string `json:"delinquencyPlanName"`
}

type _UpdateDelinquencyPlan UpdateDelinquencyPlan

// NewUpdateDelinquencyPlan instantiates a new UpdateDelinquencyPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDelinquencyPlan(delinquencyPlanName string) *UpdateDelinquencyPlan {
	this := UpdateDelinquencyPlan{}
	this.DelinquencyPlanName = delinquencyPlanName
	return &this
}

// NewUpdateDelinquencyPlanWithDefaults instantiates a new UpdateDelinquencyPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDelinquencyPlanWithDefaults() *UpdateDelinquencyPlan {
	this := UpdateDelinquencyPlan{}
	return &this
}

// GetDelinquencyPlanName returns the DelinquencyPlanName field value
func (o *UpdateDelinquencyPlan) GetDelinquencyPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DelinquencyPlanName
}

// GetDelinquencyPlanNameOk returns a tuple with the DelinquencyPlanName field value
// and a boolean to check if the value has been set.
func (o *UpdateDelinquencyPlan) GetDelinquencyPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelinquencyPlanName, true
}

// SetDelinquencyPlanName sets field value
func (o *UpdateDelinquencyPlan) SetDelinquencyPlanName(v string) {
	o.DelinquencyPlanName = v
}

func (o UpdateDelinquencyPlan) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDelinquencyPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["delinquencyPlanName"] = o.DelinquencyPlanName
	return toSerialize, nil
}

func (o *UpdateDelinquencyPlan) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"delinquencyPlanName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateDelinquencyPlan := _UpdateDelinquencyPlan{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateDelinquencyPlan)

	if err != nil {
		return err
	}

	*o = UpdateDelinquencyPlan(varUpdateDelinquencyPlan)

	return err
}

type NullableUpdateDelinquencyPlan struct {
	value *UpdateDelinquencyPlan
	isSet bool
}

func (v NullableUpdateDelinquencyPlan) Get() *UpdateDelinquencyPlan {
	return v.value
}

func (v *NullableUpdateDelinquencyPlan) Set(val *UpdateDelinquencyPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDelinquencyPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDelinquencyPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDelinquencyPlan(val *UpdateDelinquencyPlan) *NullableUpdateDelinquencyPlan {
	return &NullableUpdateDelinquencyPlan{value: val, isSet: true}
}

func (v NullableUpdateDelinquencyPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDelinquencyPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
