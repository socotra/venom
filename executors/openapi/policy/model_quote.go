/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Quote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Quote{}

// Quote struct for Quote
type Quote struct {
	Locator             string            `json:"locator"`
	QuoteState          string            `json:"quoteState"`
	ProductName         string            `json:"productName"`
	AccountLocator      string            `json:"accountLocator"`
	StartTime           *time.Time        `json:"startTime,omitempty"`
	EndTime             *time.Time        `json:"endTime,omitempty"`
	Timezone            *string           `json:"timezone,omitempty"`
	Currency            *string           `json:"currency,omitempty"`
	UnderwritingStatus  *string           `json:"underwritingStatus,omitempty"`
	ExpirationTime      *time.Time        `json:"expirationTime,omitempty"`
	Element             Element           `json:"element"`
	Preferences         *Preferences      `json:"preferences,omitempty"`
	PolicyLocator       *string           `json:"policyLocator,omitempty"`
	DelinquencyPlanName *string           `json:"delinquencyPlanName,omitempty"`
	DurationBasis       *string           `json:"durationBasis,omitempty"`
	BillingTrigger      *string           `json:"billingTrigger,omitempty"`
	GroupLocator        string            `json:"groupLocator"`
	AutoRenewalPlanName *string           `json:"autoRenewalPlanName,omitempty"`
	BillingLevel        string            `json:"billingLevel"`
	Region              *string           `json:"region,omitempty"`
	QuoteNumber         *string           `json:"quoteNumber,omitempty"`
	Duration            *float32          `json:"duration,omitempty"`
	AcceptedTime        *time.Time        `json:"acceptedTime,omitempty"`
	IssuedTime          *time.Time        `json:"issuedTime,omitempty"`
	ValidationResult    *ValidationResult `json:"validationResult,omitempty"`
	QuickQuoteLocator   *string           `json:"quickQuoteLocator,omitempty"`
	Contacts            []ContactRoles    `json:"contacts"`
	AnonymizedAt        *time.Time        `json:"anonymizedAt,omitempty"`
	InvoiceFeeAmount    *float32          `json:"invoiceFeeAmount,omitempty"`
}

type _Quote Quote

// NewQuote instantiates a new Quote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuote(locator string, quoteState string, productName string, accountLocator string, element Element, groupLocator string, billingLevel string, contacts []ContactRoles) *Quote {
	this := Quote{}
	this.Locator = locator
	this.QuoteState = quoteState
	this.ProductName = productName
	this.AccountLocator = accountLocator
	this.Element = element
	this.GroupLocator = groupLocator
	this.BillingLevel = billingLevel
	this.Contacts = contacts
	return &this
}

// NewQuoteWithDefaults instantiates a new Quote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteWithDefaults() *Quote {
	this := Quote{}
	return &this
}

// GetLocator returns the Locator field value
func (o *Quote) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *Quote) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *Quote) SetLocator(v string) {
	o.Locator = v
}

// GetQuoteState returns the QuoteState field value
func (o *Quote) GetQuoteState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteState
}

// GetQuoteStateOk returns a tuple with the QuoteState field value
// and a boolean to check if the value has been set.
func (o *Quote) GetQuoteStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteState, true
}

// SetQuoteState sets field value
func (o *Quote) SetQuoteState(v string) {
	o.QuoteState = v
}

// GetProductName returns the ProductName field value
func (o *Quote) GetProductName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *Quote) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductName, true
}

// SetProductName sets field value
func (o *Quote) SetProductName(v string) {
	o.ProductName = v
}

// GetAccountLocator returns the AccountLocator field value
func (o *Quote) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *Quote) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *Quote) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *Quote) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *Quote) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *Quote) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *Quote) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *Quote) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *Quote) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *Quote) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *Quote) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *Quote) SetTimezone(v string) {
	o.Timezone = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Quote) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Quote) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Quote) SetCurrency(v string) {
	o.Currency = &v
}

// GetUnderwritingStatus returns the UnderwritingStatus field value if set, zero value otherwise.
func (o *Quote) GetUnderwritingStatus() string {
	if o == nil || IsNil(o.UnderwritingStatus) {
		var ret string
		return ret
	}
	return *o.UnderwritingStatus
}

// GetUnderwritingStatusOk returns a tuple with the UnderwritingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetUnderwritingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UnderwritingStatus) {
		return nil, false
	}
	return o.UnderwritingStatus, true
}

// HasUnderwritingStatus returns a boolean if a field has been set.
func (o *Quote) HasUnderwritingStatus() bool {
	if o != nil && !IsNil(o.UnderwritingStatus) {
		return true
	}

	return false
}

// SetUnderwritingStatus gets a reference to the given string and assigns it to the UnderwritingStatus field.
func (o *Quote) SetUnderwritingStatus(v string) {
	o.UnderwritingStatus = &v
}

// GetExpirationTime returns the ExpirationTime field value if set, zero value otherwise.
func (o *Quote) GetExpirationTime() time.Time {
	if o == nil || IsNil(o.ExpirationTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetExpirationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationTime) {
		return nil, false
	}
	return o.ExpirationTime, true
}

// HasExpirationTime returns a boolean if a field has been set.
func (o *Quote) HasExpirationTime() bool {
	if o != nil && !IsNil(o.ExpirationTime) {
		return true
	}

	return false
}

// SetExpirationTime gets a reference to the given time.Time and assigns it to the ExpirationTime field.
func (o *Quote) SetExpirationTime(v time.Time) {
	o.ExpirationTime = &v
}

// GetElement returns the Element field value
func (o *Quote) GetElement() Element {
	if o == nil {
		var ret Element
		return ret
	}

	return o.Element
}

// GetElementOk returns a tuple with the Element field value
// and a boolean to check if the value has been set.
func (o *Quote) GetElementOk() (*Element, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Element, true
}

// SetElement sets field value
func (o *Quote) SetElement(v Element) {
	o.Element = v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *Quote) GetPreferences() Preferences {
	if o == nil || IsNil(o.Preferences) {
		var ret Preferences
		return ret
	}
	return *o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetPreferencesOk() (*Preferences, bool) {
	if o == nil || IsNil(o.Preferences) {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *Quote) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given Preferences and assigns it to the Preferences field.
func (o *Quote) SetPreferences(v Preferences) {
	o.Preferences = &v
}

// GetPolicyLocator returns the PolicyLocator field value if set, zero value otherwise.
func (o *Quote) GetPolicyLocator() string {
	if o == nil || IsNil(o.PolicyLocator) {
		var ret string
		return ret
	}
	return *o.PolicyLocator
}

// GetPolicyLocatorOk returns a tuple with the PolicyLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetPolicyLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyLocator) {
		return nil, false
	}
	return o.PolicyLocator, true
}

// HasPolicyLocator returns a boolean if a field has been set.
func (o *Quote) HasPolicyLocator() bool {
	if o != nil && !IsNil(o.PolicyLocator) {
		return true
	}

	return false
}

// SetPolicyLocator gets a reference to the given string and assigns it to the PolicyLocator field.
func (o *Quote) SetPolicyLocator(v string) {
	o.PolicyLocator = &v
}

// GetDelinquencyPlanName returns the DelinquencyPlanName field value if set, zero value otherwise.
func (o *Quote) GetDelinquencyPlanName() string {
	if o == nil || IsNil(o.DelinquencyPlanName) {
		var ret string
		return ret
	}
	return *o.DelinquencyPlanName
}

// GetDelinquencyPlanNameOk returns a tuple with the DelinquencyPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetDelinquencyPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.DelinquencyPlanName) {
		return nil, false
	}
	return o.DelinquencyPlanName, true
}

// HasDelinquencyPlanName returns a boolean if a field has been set.
func (o *Quote) HasDelinquencyPlanName() bool {
	if o != nil && !IsNil(o.DelinquencyPlanName) {
		return true
	}

	return false
}

// SetDelinquencyPlanName gets a reference to the given string and assigns it to the DelinquencyPlanName field.
func (o *Quote) SetDelinquencyPlanName(v string) {
	o.DelinquencyPlanName = &v
}

// GetDurationBasis returns the DurationBasis field value if set, zero value otherwise.
func (o *Quote) GetDurationBasis() string {
	if o == nil || IsNil(o.DurationBasis) {
		var ret string
		return ret
	}
	return *o.DurationBasis
}

// GetDurationBasisOk returns a tuple with the DurationBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetDurationBasisOk() (*string, bool) {
	if o == nil || IsNil(o.DurationBasis) {
		return nil, false
	}
	return o.DurationBasis, true
}

// HasDurationBasis returns a boolean if a field has been set.
func (o *Quote) HasDurationBasis() bool {
	if o != nil && !IsNil(o.DurationBasis) {
		return true
	}

	return false
}

// SetDurationBasis gets a reference to the given string and assigns it to the DurationBasis field.
func (o *Quote) SetDurationBasis(v string) {
	o.DurationBasis = &v
}

// GetBillingTrigger returns the BillingTrigger field value if set, zero value otherwise.
func (o *Quote) GetBillingTrigger() string {
	if o == nil || IsNil(o.BillingTrigger) {
		var ret string
		return ret
	}
	return *o.BillingTrigger
}

// GetBillingTriggerOk returns a tuple with the BillingTrigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetBillingTriggerOk() (*string, bool) {
	if o == nil || IsNil(o.BillingTrigger) {
		return nil, false
	}
	return o.BillingTrigger, true
}

// HasBillingTrigger returns a boolean if a field has been set.
func (o *Quote) HasBillingTrigger() bool {
	if o != nil && !IsNil(o.BillingTrigger) {
		return true
	}

	return false
}

// SetBillingTrigger gets a reference to the given string and assigns it to the BillingTrigger field.
func (o *Quote) SetBillingTrigger(v string) {
	o.BillingTrigger = &v
}

// GetGroupLocator returns the GroupLocator field value
func (o *Quote) GetGroupLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupLocator
}

// GetGroupLocatorOk returns a tuple with the GroupLocator field value
// and a boolean to check if the value has been set.
func (o *Quote) GetGroupLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupLocator, true
}

// SetGroupLocator sets field value
func (o *Quote) SetGroupLocator(v string) {
	o.GroupLocator = v
}

// GetAutoRenewalPlanName returns the AutoRenewalPlanName field value if set, zero value otherwise.
func (o *Quote) GetAutoRenewalPlanName() string {
	if o == nil || IsNil(o.AutoRenewalPlanName) {
		var ret string
		return ret
	}
	return *o.AutoRenewalPlanName
}

// GetAutoRenewalPlanNameOk returns a tuple with the AutoRenewalPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetAutoRenewalPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.AutoRenewalPlanName) {
		return nil, false
	}
	return o.AutoRenewalPlanName, true
}

// HasAutoRenewalPlanName returns a boolean if a field has been set.
func (o *Quote) HasAutoRenewalPlanName() bool {
	if o != nil && !IsNil(o.AutoRenewalPlanName) {
		return true
	}

	return false
}

// SetAutoRenewalPlanName gets a reference to the given string and assigns it to the AutoRenewalPlanName field.
func (o *Quote) SetAutoRenewalPlanName(v string) {
	o.AutoRenewalPlanName = &v
}

// GetBillingLevel returns the BillingLevel field value
func (o *Quote) GetBillingLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingLevel
}

// GetBillingLevelOk returns a tuple with the BillingLevel field value
// and a boolean to check if the value has been set.
func (o *Quote) GetBillingLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingLevel, true
}

// SetBillingLevel sets field value
func (o *Quote) SetBillingLevel(v string) {
	o.BillingLevel = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Quote) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Quote) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *Quote) SetRegion(v string) {
	o.Region = &v
}

// GetQuoteNumber returns the QuoteNumber field value if set, zero value otherwise.
func (o *Quote) GetQuoteNumber() string {
	if o == nil || IsNil(o.QuoteNumber) {
		var ret string
		return ret
	}
	return *o.QuoteNumber
}

// GetQuoteNumberOk returns a tuple with the QuoteNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetQuoteNumberOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteNumber) {
		return nil, false
	}
	return o.QuoteNumber, true
}

// HasQuoteNumber returns a boolean if a field has been set.
func (o *Quote) HasQuoteNumber() bool {
	if o != nil && !IsNil(o.QuoteNumber) {
		return true
	}

	return false
}

// SetQuoteNumber gets a reference to the given string and assigns it to the QuoteNumber field.
func (o *Quote) SetQuoteNumber(v string) {
	o.QuoteNumber = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *Quote) GetDuration() float32 {
	if o == nil || IsNil(o.Duration) {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetDurationOk() (*float32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *Quote) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *Quote) SetDuration(v float32) {
	o.Duration = &v
}

// GetAcceptedTime returns the AcceptedTime field value if set, zero value otherwise.
func (o *Quote) GetAcceptedTime() time.Time {
	if o == nil || IsNil(o.AcceptedTime) {
		var ret time.Time
		return ret
	}
	return *o.AcceptedTime
}

// GetAcceptedTimeOk returns a tuple with the AcceptedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetAcceptedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AcceptedTime) {
		return nil, false
	}
	return o.AcceptedTime, true
}

// HasAcceptedTime returns a boolean if a field has been set.
func (o *Quote) HasAcceptedTime() bool {
	if o != nil && !IsNil(o.AcceptedTime) {
		return true
	}

	return false
}

// SetAcceptedTime gets a reference to the given time.Time and assigns it to the AcceptedTime field.
func (o *Quote) SetAcceptedTime(v time.Time) {
	o.AcceptedTime = &v
}

// GetIssuedTime returns the IssuedTime field value if set, zero value otherwise.
func (o *Quote) GetIssuedTime() time.Time {
	if o == nil || IsNil(o.IssuedTime) {
		var ret time.Time
		return ret
	}
	return *o.IssuedTime
}

// GetIssuedTimeOk returns a tuple with the IssuedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetIssuedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.IssuedTime) {
		return nil, false
	}
	return o.IssuedTime, true
}

// HasIssuedTime returns a boolean if a field has been set.
func (o *Quote) HasIssuedTime() bool {
	if o != nil && !IsNil(o.IssuedTime) {
		return true
	}

	return false
}

// SetIssuedTime gets a reference to the given time.Time and assigns it to the IssuedTime field.
func (o *Quote) SetIssuedTime(v time.Time) {
	o.IssuedTime = &v
}

// GetValidationResult returns the ValidationResult field value if set, zero value otherwise.
func (o *Quote) GetValidationResult() ValidationResult {
	if o == nil || IsNil(o.ValidationResult) {
		var ret ValidationResult
		return ret
	}
	return *o.ValidationResult
}

// GetValidationResultOk returns a tuple with the ValidationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetValidationResultOk() (*ValidationResult, bool) {
	if o == nil || IsNil(o.ValidationResult) {
		return nil, false
	}
	return o.ValidationResult, true
}

// HasValidationResult returns a boolean if a field has been set.
func (o *Quote) HasValidationResult() bool {
	if o != nil && !IsNil(o.ValidationResult) {
		return true
	}

	return false
}

// SetValidationResult gets a reference to the given ValidationResult and assigns it to the ValidationResult field.
func (o *Quote) SetValidationResult(v ValidationResult) {
	o.ValidationResult = &v
}

// GetQuickQuoteLocator returns the QuickQuoteLocator field value if set, zero value otherwise.
func (o *Quote) GetQuickQuoteLocator() string {
	if o == nil || IsNil(o.QuickQuoteLocator) {
		var ret string
		return ret
	}
	return *o.QuickQuoteLocator
}

// GetQuickQuoteLocatorOk returns a tuple with the QuickQuoteLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetQuickQuoteLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.QuickQuoteLocator) {
		return nil, false
	}
	return o.QuickQuoteLocator, true
}

// HasQuickQuoteLocator returns a boolean if a field has been set.
func (o *Quote) HasQuickQuoteLocator() bool {
	if o != nil && !IsNil(o.QuickQuoteLocator) {
		return true
	}

	return false
}

// SetQuickQuoteLocator gets a reference to the given string and assigns it to the QuickQuoteLocator field.
func (o *Quote) SetQuickQuoteLocator(v string) {
	o.QuickQuoteLocator = &v
}

// GetContacts returns the Contacts field value
func (o *Quote) GetContacts() []ContactRoles {
	if o == nil {
		var ret []ContactRoles
		return ret
	}

	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value
// and a boolean to check if the value has been set.
func (o *Quote) GetContactsOk() ([]ContactRoles, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contacts, true
}

// SetContacts sets field value
func (o *Quote) SetContacts(v []ContactRoles) {
	o.Contacts = v
}

// GetAnonymizedAt returns the AnonymizedAt field value if set, zero value otherwise.
func (o *Quote) GetAnonymizedAt() time.Time {
	if o == nil || IsNil(o.AnonymizedAt) {
		var ret time.Time
		return ret
	}
	return *o.AnonymizedAt
}

// GetAnonymizedAtOk returns a tuple with the AnonymizedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetAnonymizedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AnonymizedAt) {
		return nil, false
	}
	return o.AnonymizedAt, true
}

// HasAnonymizedAt returns a boolean if a field has been set.
func (o *Quote) HasAnonymizedAt() bool {
	if o != nil && !IsNil(o.AnonymizedAt) {
		return true
	}

	return false
}

// SetAnonymizedAt gets a reference to the given time.Time and assigns it to the AnonymizedAt field.
func (o *Quote) SetAnonymizedAt(v time.Time) {
	o.AnonymizedAt = &v
}

// GetInvoiceFeeAmount returns the InvoiceFeeAmount field value if set, zero value otherwise.
func (o *Quote) GetInvoiceFeeAmount() float32 {
	if o == nil || IsNil(o.InvoiceFeeAmount) {
		var ret float32
		return ret
	}
	return *o.InvoiceFeeAmount
}

// GetInvoiceFeeAmountOk returns a tuple with the InvoiceFeeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quote) GetInvoiceFeeAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.InvoiceFeeAmount) {
		return nil, false
	}
	return o.InvoiceFeeAmount, true
}

// HasInvoiceFeeAmount returns a boolean if a field has been set.
func (o *Quote) HasInvoiceFeeAmount() bool {
	if o != nil && !IsNil(o.InvoiceFeeAmount) {
		return true
	}

	return false
}

// SetInvoiceFeeAmount gets a reference to the given float32 and assigns it to the InvoiceFeeAmount field.
func (o *Quote) SetInvoiceFeeAmount(v float32) {
	o.InvoiceFeeAmount = &v
}

func (o Quote) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Quote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["quoteState"] = o.QuoteState
	toSerialize["productName"] = o.ProductName
	toSerialize["accountLocator"] = o.AccountLocator
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.UnderwritingStatus) {
		toSerialize["underwritingStatus"] = o.UnderwritingStatus
	}
	if !IsNil(o.ExpirationTime) {
		toSerialize["expirationTime"] = o.ExpirationTime
	}
	toSerialize["element"] = o.Element
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	if !IsNil(o.PolicyLocator) {
		toSerialize["policyLocator"] = o.PolicyLocator
	}
	if !IsNil(o.DelinquencyPlanName) {
		toSerialize["delinquencyPlanName"] = o.DelinquencyPlanName
	}
	if !IsNil(o.DurationBasis) {
		toSerialize["durationBasis"] = o.DurationBasis
	}
	if !IsNil(o.BillingTrigger) {
		toSerialize["billingTrigger"] = o.BillingTrigger
	}
	toSerialize["groupLocator"] = o.GroupLocator
	if !IsNil(o.AutoRenewalPlanName) {
		toSerialize["autoRenewalPlanName"] = o.AutoRenewalPlanName
	}
	toSerialize["billingLevel"] = o.BillingLevel
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.QuoteNumber) {
		toSerialize["quoteNumber"] = o.QuoteNumber
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.AcceptedTime) {
		toSerialize["acceptedTime"] = o.AcceptedTime
	}
	if !IsNil(o.IssuedTime) {
		toSerialize["issuedTime"] = o.IssuedTime
	}
	if !IsNil(o.ValidationResult) {
		toSerialize["validationResult"] = o.ValidationResult
	}
	if !IsNil(o.QuickQuoteLocator) {
		toSerialize["quickQuoteLocator"] = o.QuickQuoteLocator
	}
	toSerialize["contacts"] = o.Contacts
	if !IsNil(o.AnonymizedAt) {
		toSerialize["anonymizedAt"] = o.AnonymizedAt
	}
	if !IsNil(o.InvoiceFeeAmount) {
		toSerialize["invoiceFeeAmount"] = o.InvoiceFeeAmount
	}
	return toSerialize, nil
}

func (o *Quote) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"quoteState",
		"productName",
		"accountLocator",
		"element",
		"groupLocator",
		"billingLevel",
		"contacts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuote := _Quote{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQuote)

	if err != nil {
		return err
	}

	*o = Quote(varQuote)

	return err
}

type NullableQuote struct {
	value *Quote
	isSet bool
}

func (v NullableQuote) Get() *Quote {
	return v.value
}

func (v *NullableQuote) Set(val *Quote) {
	v.value = val
	v.isSet = true
}

func (v NullableQuote) IsSet() bool {
	return v.isSet
}

func (v *NullableQuote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuote(val *Quote) *NullableQuote {
	return &NullableQuote{value: val, isSet: true}
}

func (v NullableQuote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
