/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CreateAutoRenewalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAutoRenewalRequest{}

// CreateAutoRenewalRequest struct for CreateAutoRenewalRequest
type CreateAutoRenewalRequest struct {
	TermLocator                  string     `json:"termLocator"`
	PolicyLocator                string     `json:"policyLocator"`
	AutoRenewalState             *string    `json:"autoRenewalState,omitempty"`
	RenewalTransactionType       *string    `json:"renewalTransactionType,omitempty"`
	NewTermDuration              *int32     `json:"newTermDuration,omitempty"`
	RenewalTransactionCreateTime time.Time  `json:"renewalTransactionCreateTime"`
	RenewalTransactionAcceptTime *time.Time `json:"renewalTransactionAcceptTime,omitempty"`
	RenewalTransactionIssueTime  *time.Time `json:"renewalTransactionIssueTime,omitempty"`
	RenewalTransactionLocator    *string    `json:"renewalTransactionLocator,omitempty"`
}

type _CreateAutoRenewalRequest CreateAutoRenewalRequest

// NewCreateAutoRenewalRequest instantiates a new CreateAutoRenewalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAutoRenewalRequest(termLocator string, policyLocator string, renewalTransactionCreateTime time.Time) *CreateAutoRenewalRequest {
	this := CreateAutoRenewalRequest{}
	this.TermLocator = termLocator
	this.PolicyLocator = policyLocator
	this.RenewalTransactionCreateTime = renewalTransactionCreateTime
	return &this
}

// NewCreateAutoRenewalRequestWithDefaults instantiates a new CreateAutoRenewalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAutoRenewalRequestWithDefaults() *CreateAutoRenewalRequest {
	this := CreateAutoRenewalRequest{}
	return &this
}

// GetTermLocator returns the TermLocator field value
func (o *CreateAutoRenewalRequest) GetTermLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TermLocator
}

// GetTermLocatorOk returns a tuple with the TermLocator field value
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetTermLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TermLocator, true
}

// SetTermLocator sets field value
func (o *CreateAutoRenewalRequest) SetTermLocator(v string) {
	o.TermLocator = v
}

// GetPolicyLocator returns the PolicyLocator field value
func (o *CreateAutoRenewalRequest) GetPolicyLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyLocator
}

// GetPolicyLocatorOk returns a tuple with the PolicyLocator field value
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetPolicyLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyLocator, true
}

// SetPolicyLocator sets field value
func (o *CreateAutoRenewalRequest) SetPolicyLocator(v string) {
	o.PolicyLocator = v
}

// GetAutoRenewalState returns the AutoRenewalState field value if set, zero value otherwise.
func (o *CreateAutoRenewalRequest) GetAutoRenewalState() string {
	if o == nil || IsNil(o.AutoRenewalState) {
		var ret string
		return ret
	}
	return *o.AutoRenewalState
}

// GetAutoRenewalStateOk returns a tuple with the AutoRenewalState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetAutoRenewalStateOk() (*string, bool) {
	if o == nil || IsNil(o.AutoRenewalState) {
		return nil, false
	}
	return o.AutoRenewalState, true
}

// HasAutoRenewalState returns a boolean if a field has been set.
func (o *CreateAutoRenewalRequest) HasAutoRenewalState() bool {
	if o != nil && !IsNil(o.AutoRenewalState) {
		return true
	}

	return false
}

// SetAutoRenewalState gets a reference to the given string and assigns it to the AutoRenewalState field.
func (o *CreateAutoRenewalRequest) SetAutoRenewalState(v string) {
	o.AutoRenewalState = &v
}

// GetRenewalTransactionType returns the RenewalTransactionType field value if set, zero value otherwise.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionType() string {
	if o == nil || IsNil(o.RenewalTransactionType) {
		var ret string
		return ret
	}
	return *o.RenewalTransactionType
}

// GetRenewalTransactionTypeOk returns a tuple with the RenewalTransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RenewalTransactionType) {
		return nil, false
	}
	return o.RenewalTransactionType, true
}

// HasRenewalTransactionType returns a boolean if a field has been set.
func (o *CreateAutoRenewalRequest) HasRenewalTransactionType() bool {
	if o != nil && !IsNil(o.RenewalTransactionType) {
		return true
	}

	return false
}

// SetRenewalTransactionType gets a reference to the given string and assigns it to the RenewalTransactionType field.
func (o *CreateAutoRenewalRequest) SetRenewalTransactionType(v string) {
	o.RenewalTransactionType = &v
}

// GetNewTermDuration returns the NewTermDuration field value if set, zero value otherwise.
func (o *CreateAutoRenewalRequest) GetNewTermDuration() int32 {
	if o == nil || IsNil(o.NewTermDuration) {
		var ret int32
		return ret
	}
	return *o.NewTermDuration
}

// GetNewTermDurationOk returns a tuple with the NewTermDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetNewTermDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.NewTermDuration) {
		return nil, false
	}
	return o.NewTermDuration, true
}

// HasNewTermDuration returns a boolean if a field has been set.
func (o *CreateAutoRenewalRequest) HasNewTermDuration() bool {
	if o != nil && !IsNil(o.NewTermDuration) {
		return true
	}

	return false
}

// SetNewTermDuration gets a reference to the given int32 and assigns it to the NewTermDuration field.
func (o *CreateAutoRenewalRequest) SetNewTermDuration(v int32) {
	o.NewTermDuration = &v
}

// GetRenewalTransactionCreateTime returns the RenewalTransactionCreateTime field value
func (o *CreateAutoRenewalRequest) GetRenewalTransactionCreateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.RenewalTransactionCreateTime
}

// GetRenewalTransactionCreateTimeOk returns a tuple with the RenewalTransactionCreateTime field value
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionCreateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RenewalTransactionCreateTime, true
}

// SetRenewalTransactionCreateTime sets field value
func (o *CreateAutoRenewalRequest) SetRenewalTransactionCreateTime(v time.Time) {
	o.RenewalTransactionCreateTime = v
}

// GetRenewalTransactionAcceptTime returns the RenewalTransactionAcceptTime field value if set, zero value otherwise.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionAcceptTime() time.Time {
	if o == nil || IsNil(o.RenewalTransactionAcceptTime) {
		var ret time.Time
		return ret
	}
	return *o.RenewalTransactionAcceptTime
}

// GetRenewalTransactionAcceptTimeOk returns a tuple with the RenewalTransactionAcceptTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionAcceptTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RenewalTransactionAcceptTime) {
		return nil, false
	}
	return o.RenewalTransactionAcceptTime, true
}

// HasRenewalTransactionAcceptTime returns a boolean if a field has been set.
func (o *CreateAutoRenewalRequest) HasRenewalTransactionAcceptTime() bool {
	if o != nil && !IsNil(o.RenewalTransactionAcceptTime) {
		return true
	}

	return false
}

// SetRenewalTransactionAcceptTime gets a reference to the given time.Time and assigns it to the RenewalTransactionAcceptTime field.
func (o *CreateAutoRenewalRequest) SetRenewalTransactionAcceptTime(v time.Time) {
	o.RenewalTransactionAcceptTime = &v
}

// GetRenewalTransactionIssueTime returns the RenewalTransactionIssueTime field value if set, zero value otherwise.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionIssueTime() time.Time {
	if o == nil || IsNil(o.RenewalTransactionIssueTime) {
		var ret time.Time
		return ret
	}
	return *o.RenewalTransactionIssueTime
}

// GetRenewalTransactionIssueTimeOk returns a tuple with the RenewalTransactionIssueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionIssueTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RenewalTransactionIssueTime) {
		return nil, false
	}
	return o.RenewalTransactionIssueTime, true
}

// HasRenewalTransactionIssueTime returns a boolean if a field has been set.
func (o *CreateAutoRenewalRequest) HasRenewalTransactionIssueTime() bool {
	if o != nil && !IsNil(o.RenewalTransactionIssueTime) {
		return true
	}

	return false
}

// SetRenewalTransactionIssueTime gets a reference to the given time.Time and assigns it to the RenewalTransactionIssueTime field.
func (o *CreateAutoRenewalRequest) SetRenewalTransactionIssueTime(v time.Time) {
	o.RenewalTransactionIssueTime = &v
}

// GetRenewalTransactionLocator returns the RenewalTransactionLocator field value if set, zero value otherwise.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionLocator() string {
	if o == nil || IsNil(o.RenewalTransactionLocator) {
		var ret string
		return ret
	}
	return *o.RenewalTransactionLocator
}

// GetRenewalTransactionLocatorOk returns a tuple with the RenewalTransactionLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAutoRenewalRequest) GetRenewalTransactionLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.RenewalTransactionLocator) {
		return nil, false
	}
	return o.RenewalTransactionLocator, true
}

// HasRenewalTransactionLocator returns a boolean if a field has been set.
func (o *CreateAutoRenewalRequest) HasRenewalTransactionLocator() bool {
	if o != nil && !IsNil(o.RenewalTransactionLocator) {
		return true
	}

	return false
}

// SetRenewalTransactionLocator gets a reference to the given string and assigns it to the RenewalTransactionLocator field.
func (o *CreateAutoRenewalRequest) SetRenewalTransactionLocator(v string) {
	o.RenewalTransactionLocator = &v
}

func (o CreateAutoRenewalRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAutoRenewalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["termLocator"] = o.TermLocator
	toSerialize["policyLocator"] = o.PolicyLocator
	if !IsNil(o.AutoRenewalState) {
		toSerialize["autoRenewalState"] = o.AutoRenewalState
	}
	if !IsNil(o.RenewalTransactionType) {
		toSerialize["renewalTransactionType"] = o.RenewalTransactionType
	}
	if !IsNil(o.NewTermDuration) {
		toSerialize["newTermDuration"] = o.NewTermDuration
	}
	toSerialize["renewalTransactionCreateTime"] = o.RenewalTransactionCreateTime
	if !IsNil(o.RenewalTransactionAcceptTime) {
		toSerialize["renewalTransactionAcceptTime"] = o.RenewalTransactionAcceptTime
	}
	if !IsNil(o.RenewalTransactionIssueTime) {
		toSerialize["renewalTransactionIssueTime"] = o.RenewalTransactionIssueTime
	}
	if !IsNil(o.RenewalTransactionLocator) {
		toSerialize["renewalTransactionLocator"] = o.RenewalTransactionLocator
	}
	return toSerialize, nil
}

func (o *CreateAutoRenewalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"termLocator",
		"policyLocator",
		"renewalTransactionCreateTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAutoRenewalRequest := _CreateAutoRenewalRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAutoRenewalRequest)

	if err != nil {
		return err
	}

	*o = CreateAutoRenewalRequest(varCreateAutoRenewalRequest)

	return err
}

type NullableCreateAutoRenewalRequest struct {
	value *CreateAutoRenewalRequest
	isSet bool
}

func (v NullableCreateAutoRenewalRequest) Get() *CreateAutoRenewalRequest {
	return v.value
}

func (v *NullableCreateAutoRenewalRequest) Set(val *CreateAutoRenewalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAutoRenewalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAutoRenewalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAutoRenewalRequest(val *CreateAutoRenewalRequest) *NullableCreateAutoRenewalRequest {
	return &NullableCreateAutoRenewalRequest{value: val, isSet: true}
}

func (v NullableCreateAutoRenewalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAutoRenewalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
