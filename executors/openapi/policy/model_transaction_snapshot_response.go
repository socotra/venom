/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the TransactionSnapshotResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionSnapshotResponse{}

// TransactionSnapshotResponse struct for TransactionSnapshotResponse
type TransactionSnapshotResponse struct {
	Locator             string      `json:"locator"`
	TransactionCategory string      `json:"transactionCategory"`
	TransactionType     string      `json:"transactionType"`
	EffectiveTime       time.Time   `json:"effectiveTime"`
	IssuedTime          time.Time   `json:"issuedTime"`
	Preferences         Preferences `json:"preferences"`
	Segment             Segment     `json:"segment"`
}

type _TransactionSnapshotResponse TransactionSnapshotResponse

// NewTransactionSnapshotResponse instantiates a new TransactionSnapshotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionSnapshotResponse(locator string, transactionCategory string, transactionType string, effectiveTime time.Time, issuedTime time.Time, preferences Preferences, segment Segment) *TransactionSnapshotResponse {
	this := TransactionSnapshotResponse{}
	this.Locator = locator
	this.TransactionCategory = transactionCategory
	this.TransactionType = transactionType
	this.EffectiveTime = effectiveTime
	this.IssuedTime = issuedTime
	this.Preferences = preferences
	this.Segment = segment
	return &this
}

// NewTransactionSnapshotResponseWithDefaults instantiates a new TransactionSnapshotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionSnapshotResponseWithDefaults() *TransactionSnapshotResponse {
	this := TransactionSnapshotResponse{}
	return &this
}

// GetLocator returns the Locator field value
func (o *TransactionSnapshotResponse) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *TransactionSnapshotResponse) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *TransactionSnapshotResponse) SetLocator(v string) {
	o.Locator = v
}

// GetTransactionCategory returns the TransactionCategory field value
func (o *TransactionSnapshotResponse) GetTransactionCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionCategory
}

// GetTransactionCategoryOk returns a tuple with the TransactionCategory field value
// and a boolean to check if the value has been set.
func (o *TransactionSnapshotResponse) GetTransactionCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionCategory, true
}

// SetTransactionCategory sets field value
func (o *TransactionSnapshotResponse) SetTransactionCategory(v string) {
	o.TransactionCategory = v
}

// GetTransactionType returns the TransactionType field value
func (o *TransactionSnapshotResponse) GetTransactionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value
// and a boolean to check if the value has been set.
func (o *TransactionSnapshotResponse) GetTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionType, true
}

// SetTransactionType sets field value
func (o *TransactionSnapshotResponse) SetTransactionType(v string) {
	o.TransactionType = v
}

// GetEffectiveTime returns the EffectiveTime field value
func (o *TransactionSnapshotResponse) GetEffectiveTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EffectiveTime
}

// GetEffectiveTimeOk returns a tuple with the EffectiveTime field value
// and a boolean to check if the value has been set.
func (o *TransactionSnapshotResponse) GetEffectiveTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectiveTime, true
}

// SetEffectiveTime sets field value
func (o *TransactionSnapshotResponse) SetEffectiveTime(v time.Time) {
	o.EffectiveTime = v
}

// GetIssuedTime returns the IssuedTime field value
func (o *TransactionSnapshotResponse) GetIssuedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.IssuedTime
}

// GetIssuedTimeOk returns a tuple with the IssuedTime field value
// and a boolean to check if the value has been set.
func (o *TransactionSnapshotResponse) GetIssuedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuedTime, true
}

// SetIssuedTime sets field value
func (o *TransactionSnapshotResponse) SetIssuedTime(v time.Time) {
	o.IssuedTime = v
}

// GetPreferences returns the Preferences field value
func (o *TransactionSnapshotResponse) GetPreferences() Preferences {
	if o == nil {
		var ret Preferences
		return ret
	}

	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value
// and a boolean to check if the value has been set.
func (o *TransactionSnapshotResponse) GetPreferencesOk() (*Preferences, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Preferences, true
}

// SetPreferences sets field value
func (o *TransactionSnapshotResponse) SetPreferences(v Preferences) {
	o.Preferences = v
}

// GetSegment returns the Segment field value
func (o *TransactionSnapshotResponse) GetSegment() Segment {
	if o == nil {
		var ret Segment
		return ret
	}

	return o.Segment
}

// GetSegmentOk returns a tuple with the Segment field value
// and a boolean to check if the value has been set.
func (o *TransactionSnapshotResponse) GetSegmentOk() (*Segment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Segment, true
}

// SetSegment sets field value
func (o *TransactionSnapshotResponse) SetSegment(v Segment) {
	o.Segment = v
}

func (o TransactionSnapshotResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionSnapshotResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["transactionCategory"] = o.TransactionCategory
	toSerialize["transactionType"] = o.TransactionType
	toSerialize["effectiveTime"] = o.EffectiveTime
	toSerialize["issuedTime"] = o.IssuedTime
	toSerialize["preferences"] = o.Preferences
	toSerialize["segment"] = o.Segment
	return toSerialize, nil
}

func (o *TransactionSnapshotResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"transactionCategory",
		"transactionType",
		"effectiveTime",
		"issuedTime",
		"preferences",
		"segment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionSnapshotResponse := _TransactionSnapshotResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionSnapshotResponse)

	if err != nil {
		return err
	}

	*o = TransactionSnapshotResponse(varTransactionSnapshotResponse)

	return err
}

type NullableTransactionSnapshotResponse struct {
	value *TransactionSnapshotResponse
	isSet bool
}

func (v NullableTransactionSnapshotResponse) Get() *TransactionSnapshotResponse {
	return v.value
}

func (v *NullableTransactionSnapshotResponse) Set(val *TransactionSnapshotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionSnapshotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionSnapshotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionSnapshotResponse(val *TransactionSnapshotResponse) *NullableTransactionSnapshotResponse {
	return &NullableTransactionSnapshotResponse{value: val, isSet: true}
}

func (v NullableTransactionSnapshotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionSnapshotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
