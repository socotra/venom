/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PolicyReversalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyReversalRequest{}

// PolicyReversalRequest struct for PolicyReversalRequest
type PolicyReversalRequest struct {
	ToTransaction       string   `json:"toTransaction"`
	ReverseTransactions []string `json:"reverseTransactions"`
	BaseLocator         string   `json:"baseLocator"`
}

type _PolicyReversalRequest PolicyReversalRequest

// NewPolicyReversalRequest instantiates a new PolicyReversalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyReversalRequest(toTransaction string, reverseTransactions []string, baseLocator string) *PolicyReversalRequest {
	this := PolicyReversalRequest{}
	this.ToTransaction = toTransaction
	this.ReverseTransactions = reverseTransactions
	this.BaseLocator = baseLocator
	return &this
}

// NewPolicyReversalRequestWithDefaults instantiates a new PolicyReversalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyReversalRequestWithDefaults() *PolicyReversalRequest {
	this := PolicyReversalRequest{}
	return &this
}

// GetToTransaction returns the ToTransaction field value
func (o *PolicyReversalRequest) GetToTransaction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToTransaction
}

// GetToTransactionOk returns a tuple with the ToTransaction field value
// and a boolean to check if the value has been set.
func (o *PolicyReversalRequest) GetToTransactionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToTransaction, true
}

// SetToTransaction sets field value
func (o *PolicyReversalRequest) SetToTransaction(v string) {
	o.ToTransaction = v
}

// GetReverseTransactions returns the ReverseTransactions field value
func (o *PolicyReversalRequest) GetReverseTransactions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ReverseTransactions
}

// GetReverseTransactionsOk returns a tuple with the ReverseTransactions field value
// and a boolean to check if the value has been set.
func (o *PolicyReversalRequest) GetReverseTransactionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReverseTransactions, true
}

// SetReverseTransactions sets field value
func (o *PolicyReversalRequest) SetReverseTransactions(v []string) {
	o.ReverseTransactions = v
}

// GetBaseLocator returns the BaseLocator field value
func (o *PolicyReversalRequest) GetBaseLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseLocator
}

// GetBaseLocatorOk returns a tuple with the BaseLocator field value
// and a boolean to check if the value has been set.
func (o *PolicyReversalRequest) GetBaseLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseLocator, true
}

// SetBaseLocator sets field value
func (o *PolicyReversalRequest) SetBaseLocator(v string) {
	o.BaseLocator = v
}

func (o PolicyReversalRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyReversalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["toTransaction"] = o.ToTransaction
	toSerialize["reverseTransactions"] = o.ReverseTransactions
	toSerialize["baseLocator"] = o.BaseLocator
	return toSerialize, nil
}

func (o *PolicyReversalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"toTransaction",
		"reverseTransactions",
		"baseLocator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicyReversalRequest := _PolicyReversalRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPolicyReversalRequest)

	if err != nil {
		return err
	}

	*o = PolicyReversalRequest(varPolicyReversalRequest)

	return err
}

type NullablePolicyReversalRequest struct {
	value *PolicyReversalRequest
	isSet bool
}

func (v NullablePolicyReversalRequest) Get() *PolicyReversalRequest {
	return v.value
}

func (v *NullablePolicyReversalRequest) Set(val *PolicyReversalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyReversalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyReversalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyReversalRequest(val *PolicyReversalRequest) *NullablePolicyReversalRequest {
	return &NullablePolicyReversalRequest{value: val, isSet: true}
}

func (v NullablePolicyReversalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyReversalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
