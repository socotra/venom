/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the QuickQuoteQuoteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickQuoteQuoteResponse{}

// QuickQuoteQuoteResponse struct for QuickQuoteQuoteResponse
type QuickQuoteQuoteResponse struct {
	TenantLocator     string            `json:"tenantLocator"`
	QuickQuoteLocator string            `json:"quickQuoteLocator"`
	AccountLocator    *string           `json:"accountLocator,omitempty"`
	QuickQuoteState   string            `json:"quickQuoteState"`
	ProductName       string            `json:"productName"`
	StartTime         time.Time         `json:"startTime"`
	EndTime           time.Time         `json:"endTime"`
	Duration          float32           `json:"duration"`
	DurationBasis     string            `json:"durationBasis"`
	Quote             *Quote            `json:"quote,omitempty"`
	ValidationResult  *ValidationResult `json:"validationResult,omitempty"`
}

type _QuickQuoteQuoteResponse QuickQuoteQuoteResponse

// NewQuickQuoteQuoteResponse instantiates a new QuickQuoteQuoteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickQuoteQuoteResponse(tenantLocator string, quickQuoteLocator string, quickQuoteState string, productName string, startTime time.Time, endTime time.Time, duration float32, durationBasis string) *QuickQuoteQuoteResponse {
	this := QuickQuoteQuoteResponse{}
	this.TenantLocator = tenantLocator
	this.QuickQuoteLocator = quickQuoteLocator
	this.QuickQuoteState = quickQuoteState
	this.ProductName = productName
	this.StartTime = startTime
	this.EndTime = endTime
	this.Duration = duration
	this.DurationBasis = durationBasis
	return &this
}

// NewQuickQuoteQuoteResponseWithDefaults instantiates a new QuickQuoteQuoteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickQuoteQuoteResponseWithDefaults() *QuickQuoteQuoteResponse {
	this := QuickQuoteQuoteResponse{}
	return &this
}

// GetTenantLocator returns the TenantLocator field value
func (o *QuickQuoteQuoteResponse) GetTenantLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantLocator
}

// GetTenantLocatorOk returns a tuple with the TenantLocator field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetTenantLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantLocator, true
}

// SetTenantLocator sets field value
func (o *QuickQuoteQuoteResponse) SetTenantLocator(v string) {
	o.TenantLocator = v
}

// GetQuickQuoteLocator returns the QuickQuoteLocator field value
func (o *QuickQuoteQuoteResponse) GetQuickQuoteLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuickQuoteLocator
}

// GetQuickQuoteLocatorOk returns a tuple with the QuickQuoteLocator field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetQuickQuoteLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuickQuoteLocator, true
}

// SetQuickQuoteLocator sets field value
func (o *QuickQuoteQuoteResponse) SetQuickQuoteLocator(v string) {
	o.QuickQuoteLocator = v
}

// GetAccountLocator returns the AccountLocator field value if set, zero value otherwise.
func (o *QuickQuoteQuoteResponse) GetAccountLocator() string {
	if o == nil || IsNil(o.AccountLocator) {
		var ret string
		return ret
	}
	return *o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetAccountLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.AccountLocator) {
		return nil, false
	}
	return o.AccountLocator, true
}

// HasAccountLocator returns a boolean if a field has been set.
func (o *QuickQuoteQuoteResponse) HasAccountLocator() bool {
	if o != nil && !IsNil(o.AccountLocator) {
		return true
	}

	return false
}

// SetAccountLocator gets a reference to the given string and assigns it to the AccountLocator field.
func (o *QuickQuoteQuoteResponse) SetAccountLocator(v string) {
	o.AccountLocator = &v
}

// GetQuickQuoteState returns the QuickQuoteState field value
func (o *QuickQuoteQuoteResponse) GetQuickQuoteState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuickQuoteState
}

// GetQuickQuoteStateOk returns a tuple with the QuickQuoteState field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetQuickQuoteStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuickQuoteState, true
}

// SetQuickQuoteState sets field value
func (o *QuickQuoteQuoteResponse) SetQuickQuoteState(v string) {
	o.QuickQuoteState = v
}

// GetProductName returns the ProductName field value
func (o *QuickQuoteQuoteResponse) GetProductName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductName, true
}

// SetProductName sets field value
func (o *QuickQuoteQuoteResponse) SetProductName(v string) {
	o.ProductName = v
}

// GetStartTime returns the StartTime field value
func (o *QuickQuoteQuoteResponse) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *QuickQuoteQuoteResponse) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *QuickQuoteQuoteResponse) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *QuickQuoteQuoteResponse) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetDuration returns the Duration field value
func (o *QuickQuoteQuoteResponse) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *QuickQuoteQuoteResponse) SetDuration(v float32) {
	o.Duration = v
}

// GetDurationBasis returns the DurationBasis field value
func (o *QuickQuoteQuoteResponse) GetDurationBasis() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DurationBasis
}

// GetDurationBasisOk returns a tuple with the DurationBasis field value
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetDurationBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationBasis, true
}

// SetDurationBasis sets field value
func (o *QuickQuoteQuoteResponse) SetDurationBasis(v string) {
	o.DurationBasis = v
}

// GetQuote returns the Quote field value if set, zero value otherwise.
func (o *QuickQuoteQuoteResponse) GetQuote() Quote {
	if o == nil || IsNil(o.Quote) {
		var ret Quote
		return ret
	}
	return *o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetQuoteOk() (*Quote, bool) {
	if o == nil || IsNil(o.Quote) {
		return nil, false
	}
	return o.Quote, true
}

// HasQuote returns a boolean if a field has been set.
func (o *QuickQuoteQuoteResponse) HasQuote() bool {
	if o != nil && !IsNil(o.Quote) {
		return true
	}

	return false
}

// SetQuote gets a reference to the given Quote and assigns it to the Quote field.
func (o *QuickQuoteQuoteResponse) SetQuote(v Quote) {
	o.Quote = &v
}

// GetValidationResult returns the ValidationResult field value if set, zero value otherwise.
func (o *QuickQuoteQuoteResponse) GetValidationResult() ValidationResult {
	if o == nil || IsNil(o.ValidationResult) {
		var ret ValidationResult
		return ret
	}
	return *o.ValidationResult
}

// GetValidationResultOk returns a tuple with the ValidationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickQuoteQuoteResponse) GetValidationResultOk() (*ValidationResult, bool) {
	if o == nil || IsNil(o.ValidationResult) {
		return nil, false
	}
	return o.ValidationResult, true
}

// HasValidationResult returns a boolean if a field has been set.
func (o *QuickQuoteQuoteResponse) HasValidationResult() bool {
	if o != nil && !IsNil(o.ValidationResult) {
		return true
	}

	return false
}

// SetValidationResult gets a reference to the given ValidationResult and assigns it to the ValidationResult field.
func (o *QuickQuoteQuoteResponse) SetValidationResult(v ValidationResult) {
	o.ValidationResult = &v
}

func (o QuickQuoteQuoteResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickQuoteQuoteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantLocator"] = o.TenantLocator
	toSerialize["quickQuoteLocator"] = o.QuickQuoteLocator
	if !IsNil(o.AccountLocator) {
		toSerialize["accountLocator"] = o.AccountLocator
	}
	toSerialize["quickQuoteState"] = o.QuickQuoteState
	toSerialize["productName"] = o.ProductName
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["duration"] = o.Duration
	toSerialize["durationBasis"] = o.DurationBasis
	if !IsNil(o.Quote) {
		toSerialize["quote"] = o.Quote
	}
	if !IsNil(o.ValidationResult) {
		toSerialize["validationResult"] = o.ValidationResult
	}
	return toSerialize, nil
}

func (o *QuickQuoteQuoteResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantLocator",
		"quickQuoteLocator",
		"quickQuoteState",
		"productName",
		"startTime",
		"endTime",
		"duration",
		"durationBasis",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickQuoteQuoteResponse := _QuickQuoteQuoteResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQuickQuoteQuoteResponse)

	if err != nil {
		return err
	}

	*o = QuickQuoteQuoteResponse(varQuickQuoteQuoteResponse)

	return err
}

type NullableQuickQuoteQuoteResponse struct {
	value *QuickQuoteQuoteResponse
	isSet bool
}

func (v NullableQuickQuoteQuoteResponse) Get() *QuickQuoteQuoteResponse {
	return v.value
}

func (v *NullableQuickQuoteQuoteResponse) Set(val *QuickQuoteQuoteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickQuoteQuoteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickQuoteQuoteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickQuoteQuoteResponse(val *QuickQuoteQuoteResponse) *NullableQuickQuoteQuoteResponse {
	return &NullableQuickQuoteQuoteResponse{value: val, isSet: true}
}

func (v NullableQuickQuoteQuoteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickQuoteQuoteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
