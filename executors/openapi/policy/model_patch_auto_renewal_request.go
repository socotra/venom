/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"encoding/json"
	"time"
)

// checks if the PatchAutoRenewalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchAutoRenewalRequest{}

// PatchAutoRenewalRequest struct for PatchAutoRenewalRequest
type PatchAutoRenewalRequest struct {
	RenewalTransactionType       *string    `json:"renewalTransactionType,omitempty"`
	NewTermDuration              *int32     `json:"newTermDuration,omitempty"`
	RenewalTransactionCreateTime *time.Time `json:"renewalTransactionCreateTime,omitempty"`
	RenewalTransactionAcceptTime *time.Time `json:"renewalTransactionAcceptTime,omitempty"`
	RenewalTransactionIssueTime  *time.Time `json:"renewalTransactionIssueTime,omitempty"`
	RenewalTransactionLocator    *string    `json:"renewalTransactionLocator,omitempty"`
}

// NewPatchAutoRenewalRequest instantiates a new PatchAutoRenewalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchAutoRenewalRequest() *PatchAutoRenewalRequest {
	this := PatchAutoRenewalRequest{}
	return &this
}

// NewPatchAutoRenewalRequestWithDefaults instantiates a new PatchAutoRenewalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchAutoRenewalRequestWithDefaults() *PatchAutoRenewalRequest {
	this := PatchAutoRenewalRequest{}
	return &this
}

// GetRenewalTransactionType returns the RenewalTransactionType field value if set, zero value otherwise.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionType() string {
	if o == nil || IsNil(o.RenewalTransactionType) {
		var ret string
		return ret
	}
	return *o.RenewalTransactionType
}

// GetRenewalTransactionTypeOk returns a tuple with the RenewalTransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RenewalTransactionType) {
		return nil, false
	}
	return o.RenewalTransactionType, true
}

// HasRenewalTransactionType returns a boolean if a field has been set.
func (o *PatchAutoRenewalRequest) HasRenewalTransactionType() bool {
	if o != nil && !IsNil(o.RenewalTransactionType) {
		return true
	}

	return false
}

// SetRenewalTransactionType gets a reference to the given string and assigns it to the RenewalTransactionType field.
func (o *PatchAutoRenewalRequest) SetRenewalTransactionType(v string) {
	o.RenewalTransactionType = &v
}

// GetNewTermDuration returns the NewTermDuration field value if set, zero value otherwise.
func (o *PatchAutoRenewalRequest) GetNewTermDuration() int32 {
	if o == nil || IsNil(o.NewTermDuration) {
		var ret int32
		return ret
	}
	return *o.NewTermDuration
}

// GetNewTermDurationOk returns a tuple with the NewTermDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAutoRenewalRequest) GetNewTermDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.NewTermDuration) {
		return nil, false
	}
	return o.NewTermDuration, true
}

// HasNewTermDuration returns a boolean if a field has been set.
func (o *PatchAutoRenewalRequest) HasNewTermDuration() bool {
	if o != nil && !IsNil(o.NewTermDuration) {
		return true
	}

	return false
}

// SetNewTermDuration gets a reference to the given int32 and assigns it to the NewTermDuration field.
func (o *PatchAutoRenewalRequest) SetNewTermDuration(v int32) {
	o.NewTermDuration = &v
}

// GetRenewalTransactionCreateTime returns the RenewalTransactionCreateTime field value if set, zero value otherwise.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionCreateTime() time.Time {
	if o == nil || IsNil(o.RenewalTransactionCreateTime) {
		var ret time.Time
		return ret
	}
	return *o.RenewalTransactionCreateTime
}

// GetRenewalTransactionCreateTimeOk returns a tuple with the RenewalTransactionCreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RenewalTransactionCreateTime) {
		return nil, false
	}
	return o.RenewalTransactionCreateTime, true
}

// HasRenewalTransactionCreateTime returns a boolean if a field has been set.
func (o *PatchAutoRenewalRequest) HasRenewalTransactionCreateTime() bool {
	if o != nil && !IsNil(o.RenewalTransactionCreateTime) {
		return true
	}

	return false
}

// SetRenewalTransactionCreateTime gets a reference to the given time.Time and assigns it to the RenewalTransactionCreateTime field.
func (o *PatchAutoRenewalRequest) SetRenewalTransactionCreateTime(v time.Time) {
	o.RenewalTransactionCreateTime = &v
}

// GetRenewalTransactionAcceptTime returns the RenewalTransactionAcceptTime field value if set, zero value otherwise.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionAcceptTime() time.Time {
	if o == nil || IsNil(o.RenewalTransactionAcceptTime) {
		var ret time.Time
		return ret
	}
	return *o.RenewalTransactionAcceptTime
}

// GetRenewalTransactionAcceptTimeOk returns a tuple with the RenewalTransactionAcceptTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionAcceptTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RenewalTransactionAcceptTime) {
		return nil, false
	}
	return o.RenewalTransactionAcceptTime, true
}

// HasRenewalTransactionAcceptTime returns a boolean if a field has been set.
func (o *PatchAutoRenewalRequest) HasRenewalTransactionAcceptTime() bool {
	if o != nil && !IsNil(o.RenewalTransactionAcceptTime) {
		return true
	}

	return false
}

// SetRenewalTransactionAcceptTime gets a reference to the given time.Time and assigns it to the RenewalTransactionAcceptTime field.
func (o *PatchAutoRenewalRequest) SetRenewalTransactionAcceptTime(v time.Time) {
	o.RenewalTransactionAcceptTime = &v
}

// GetRenewalTransactionIssueTime returns the RenewalTransactionIssueTime field value if set, zero value otherwise.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionIssueTime() time.Time {
	if o == nil || IsNil(o.RenewalTransactionIssueTime) {
		var ret time.Time
		return ret
	}
	return *o.RenewalTransactionIssueTime
}

// GetRenewalTransactionIssueTimeOk returns a tuple with the RenewalTransactionIssueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionIssueTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RenewalTransactionIssueTime) {
		return nil, false
	}
	return o.RenewalTransactionIssueTime, true
}

// HasRenewalTransactionIssueTime returns a boolean if a field has been set.
func (o *PatchAutoRenewalRequest) HasRenewalTransactionIssueTime() bool {
	if o != nil && !IsNil(o.RenewalTransactionIssueTime) {
		return true
	}

	return false
}

// SetRenewalTransactionIssueTime gets a reference to the given time.Time and assigns it to the RenewalTransactionIssueTime field.
func (o *PatchAutoRenewalRequest) SetRenewalTransactionIssueTime(v time.Time) {
	o.RenewalTransactionIssueTime = &v
}

// GetRenewalTransactionLocator returns the RenewalTransactionLocator field value if set, zero value otherwise.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionLocator() string {
	if o == nil || IsNil(o.RenewalTransactionLocator) {
		var ret string
		return ret
	}
	return *o.RenewalTransactionLocator
}

// GetRenewalTransactionLocatorOk returns a tuple with the RenewalTransactionLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAutoRenewalRequest) GetRenewalTransactionLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.RenewalTransactionLocator) {
		return nil, false
	}
	return o.RenewalTransactionLocator, true
}

// HasRenewalTransactionLocator returns a boolean if a field has been set.
func (o *PatchAutoRenewalRequest) HasRenewalTransactionLocator() bool {
	if o != nil && !IsNil(o.RenewalTransactionLocator) {
		return true
	}

	return false
}

// SetRenewalTransactionLocator gets a reference to the given string and assigns it to the RenewalTransactionLocator field.
func (o *PatchAutoRenewalRequest) SetRenewalTransactionLocator(v string) {
	o.RenewalTransactionLocator = &v
}

func (o PatchAutoRenewalRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchAutoRenewalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RenewalTransactionType) {
		toSerialize["renewalTransactionType"] = o.RenewalTransactionType
	}
	if !IsNil(o.NewTermDuration) {
		toSerialize["newTermDuration"] = o.NewTermDuration
	}
	if !IsNil(o.RenewalTransactionCreateTime) {
		toSerialize["renewalTransactionCreateTime"] = o.RenewalTransactionCreateTime
	}
	if !IsNil(o.RenewalTransactionAcceptTime) {
		toSerialize["renewalTransactionAcceptTime"] = o.RenewalTransactionAcceptTime
	}
	if !IsNil(o.RenewalTransactionIssueTime) {
		toSerialize["renewalTransactionIssueTime"] = o.RenewalTransactionIssueTime
	}
	if !IsNil(o.RenewalTransactionLocator) {
		toSerialize["renewalTransactionLocator"] = o.RenewalTransactionLocator
	}
	return toSerialize, nil
}

type NullablePatchAutoRenewalRequest struct {
	value *PatchAutoRenewalRequest
	isSet bool
}

func (v NullablePatchAutoRenewalRequest) Get() *PatchAutoRenewalRequest {
	return v.value
}

func (v *NullablePatchAutoRenewalRequest) Set(val *PatchAutoRenewalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchAutoRenewalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchAutoRenewalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchAutoRenewalRequest(val *PatchAutoRenewalRequest) *NullablePatchAutoRenewalRequest {
	return &NullablePatchAutoRenewalRequest{value: val, isSet: true}
}

func (v NullablePatchAutoRenewalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchAutoRenewalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
