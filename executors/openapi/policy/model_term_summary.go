/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the TermSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TermSummary{}

// TermSummary struct for TermSummary
type TermSummary struct {
	PolicyLocator string              `json:"policyLocator"`
	Locator       string              `json:"locator"`
	StaticLocator string              `json:"staticLocator"`
	TermNumber    int32               `json:"termNumber"`
	StartTime     time.Time           `json:"startTime"`
	EndTime       time.Time           `json:"endTime"`
	Duration      float32             `json:"duration"`
	DurationBasis string              `json:"durationBasis"`
	Subsegments   []SubsegmentSummary `json:"subsegments"`
}

type _TermSummary TermSummary

// NewTermSummary instantiates a new TermSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTermSummary(policyLocator string, locator string, staticLocator string, termNumber int32, startTime time.Time, endTime time.Time, duration float32, durationBasis string, subsegments []SubsegmentSummary) *TermSummary {
	this := TermSummary{}
	this.PolicyLocator = policyLocator
	this.Locator = locator
	this.StaticLocator = staticLocator
	this.TermNumber = termNumber
	this.StartTime = startTime
	this.EndTime = endTime
	this.Duration = duration
	this.DurationBasis = durationBasis
	this.Subsegments = subsegments
	return &this
}

// NewTermSummaryWithDefaults instantiates a new TermSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTermSummaryWithDefaults() *TermSummary {
	this := TermSummary{}
	return &this
}

// GetPolicyLocator returns the PolicyLocator field value
func (o *TermSummary) GetPolicyLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyLocator
}

// GetPolicyLocatorOk returns a tuple with the PolicyLocator field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetPolicyLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyLocator, true
}

// SetPolicyLocator sets field value
func (o *TermSummary) SetPolicyLocator(v string) {
	o.PolicyLocator = v
}

// GetLocator returns the Locator field value
func (o *TermSummary) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *TermSummary) SetLocator(v string) {
	o.Locator = v
}

// GetStaticLocator returns the StaticLocator field value
func (o *TermSummary) GetStaticLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StaticLocator
}

// GetStaticLocatorOk returns a tuple with the StaticLocator field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetStaticLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StaticLocator, true
}

// SetStaticLocator sets field value
func (o *TermSummary) SetStaticLocator(v string) {
	o.StaticLocator = v
}

// GetTermNumber returns the TermNumber field value
func (o *TermSummary) GetTermNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TermNumber
}

// GetTermNumberOk returns a tuple with the TermNumber field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetTermNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TermNumber, true
}

// SetTermNumber sets field value
func (o *TermSummary) SetTermNumber(v int32) {
	o.TermNumber = v
}

// GetStartTime returns the StartTime field value
func (o *TermSummary) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *TermSummary) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *TermSummary) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *TermSummary) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetDuration returns the Duration field value
func (o *TermSummary) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *TermSummary) SetDuration(v float32) {
	o.Duration = v
}

// GetDurationBasis returns the DurationBasis field value
func (o *TermSummary) GetDurationBasis() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DurationBasis
}

// GetDurationBasisOk returns a tuple with the DurationBasis field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetDurationBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationBasis, true
}

// SetDurationBasis sets field value
func (o *TermSummary) SetDurationBasis(v string) {
	o.DurationBasis = v
}

// GetSubsegments returns the Subsegments field value
func (o *TermSummary) GetSubsegments() []SubsegmentSummary {
	if o == nil {
		var ret []SubsegmentSummary
		return ret
	}

	return o.Subsegments
}

// GetSubsegmentsOk returns a tuple with the Subsegments field value
// and a boolean to check if the value has been set.
func (o *TermSummary) GetSubsegmentsOk() ([]SubsegmentSummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subsegments, true
}

// SetSubsegments sets field value
func (o *TermSummary) SetSubsegments(v []SubsegmentSummary) {
	o.Subsegments = v
}

func (o TermSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TermSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policyLocator"] = o.PolicyLocator
	toSerialize["locator"] = o.Locator
	toSerialize["staticLocator"] = o.StaticLocator
	toSerialize["termNumber"] = o.TermNumber
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["duration"] = o.Duration
	toSerialize["durationBasis"] = o.DurationBasis
	toSerialize["subsegments"] = o.Subsegments
	return toSerialize, nil
}

func (o *TermSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"policyLocator",
		"locator",
		"staticLocator",
		"termNumber",
		"startTime",
		"endTime",
		"duration",
		"durationBasis",
		"subsegments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTermSummary := _TermSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTermSummary)

	if err != nil {
		return err
	}

	*o = TermSummary(varTermSummary)

	return err
}

type NullableTermSummary struct {
	value *TermSummary
	isSet bool
}

func (v NullableTermSummary) Get() *TermSummary {
	return v.value
}

func (v *NullableTermSummary) Set(val *TermSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTermSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTermSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTermSummary(val *TermSummary) *NullableTermSummary {
	return &NullableTermSummary{value: val, isSet: true}
}

func (v NullableTermSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTermSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
