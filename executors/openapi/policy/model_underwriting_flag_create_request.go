/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UnderwritingFlagCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnderwritingFlagCreateRequest{}

// UnderwritingFlagCreateRequest struct for UnderwritingFlagCreateRequest
type UnderwritingFlagCreateRequest struct {
	Level          string `json:"level"`
	Note           string `json:"note"`
	Tag            string `json:"tag"`
	ElementLocator string `json:"elementLocator"`
}

type _UnderwritingFlagCreateRequest UnderwritingFlagCreateRequest

// NewUnderwritingFlagCreateRequest instantiates a new UnderwritingFlagCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnderwritingFlagCreateRequest(level string, note string, tag string, elementLocator string) *UnderwritingFlagCreateRequest {
	this := UnderwritingFlagCreateRequest{}
	this.Level = level
	this.Note = note
	this.Tag = tag
	this.ElementLocator = elementLocator
	return &this
}

// NewUnderwritingFlagCreateRequestWithDefaults instantiates a new UnderwritingFlagCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnderwritingFlagCreateRequestWithDefaults() *UnderwritingFlagCreateRequest {
	this := UnderwritingFlagCreateRequest{}
	return &this
}

// GetLevel returns the Level field value
func (o *UnderwritingFlagCreateRequest) GetLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *UnderwritingFlagCreateRequest) GetLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *UnderwritingFlagCreateRequest) SetLevel(v string) {
	o.Level = v
}

// GetNote returns the Note field value
func (o *UnderwritingFlagCreateRequest) GetNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Note
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
func (o *UnderwritingFlagCreateRequest) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Note, true
}

// SetNote sets field value
func (o *UnderwritingFlagCreateRequest) SetNote(v string) {
	o.Note = v
}

// GetTag returns the Tag field value
func (o *UnderwritingFlagCreateRequest) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *UnderwritingFlagCreateRequest) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *UnderwritingFlagCreateRequest) SetTag(v string) {
	o.Tag = v
}

// GetElementLocator returns the ElementLocator field value
func (o *UnderwritingFlagCreateRequest) GetElementLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ElementLocator
}

// GetElementLocatorOk returns a tuple with the ElementLocator field value
// and a boolean to check if the value has been set.
func (o *UnderwritingFlagCreateRequest) GetElementLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElementLocator, true
}

// SetElementLocator sets field value
func (o *UnderwritingFlagCreateRequest) SetElementLocator(v string) {
	o.ElementLocator = v
}

func (o UnderwritingFlagCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnderwritingFlagCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["level"] = o.Level
	toSerialize["note"] = o.Note
	toSerialize["tag"] = o.Tag
	toSerialize["elementLocator"] = o.ElementLocator
	return toSerialize, nil
}

func (o *UnderwritingFlagCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"level",
		"note",
		"tag",
		"elementLocator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUnderwritingFlagCreateRequest := _UnderwritingFlagCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUnderwritingFlagCreateRequest)

	if err != nil {
		return err
	}

	*o = UnderwritingFlagCreateRequest(varUnderwritingFlagCreateRequest)

	return err
}

type NullableUnderwritingFlagCreateRequest struct {
	value *UnderwritingFlagCreateRequest
	isSet bool
}

func (v NullableUnderwritingFlagCreateRequest) Get() *UnderwritingFlagCreateRequest {
	return v.value
}

func (v *NullableUnderwritingFlagCreateRequest) Set(val *UnderwritingFlagCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnderwritingFlagCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnderwritingFlagCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnderwritingFlagCreateRequest(val *UnderwritingFlagCreateRequest) *NullableUnderwritingFlagCreateRequest {
	return &NullableUnderwritingFlagCreateRequest{value: val, isSet: true}
}

func (v NullableUnderwritingFlagCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnderwritingFlagCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
