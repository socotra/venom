/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"encoding/json"
)

// checks if the PolicyStatusEvents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyStatusEvents{}

// PolicyStatusEvents struct for PolicyStatusEvents
type PolicyStatusEvents struct {
	PolicyStatusUpdate *PolicyStatusData `json:"policy.status.update,omitempty"`
}

// NewPolicyStatusEvents instantiates a new PolicyStatusEvents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyStatusEvents() *PolicyStatusEvents {
	this := PolicyStatusEvents{}
	return &this
}

// NewPolicyStatusEventsWithDefaults instantiates a new PolicyStatusEvents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyStatusEventsWithDefaults() *PolicyStatusEvents {
	this := PolicyStatusEvents{}
	return &this
}

// GetPolicyStatusUpdate returns the PolicyStatusUpdate field value if set, zero value otherwise.
func (o *PolicyStatusEvents) GetPolicyStatusUpdate() PolicyStatusData {
	if o == nil || IsNil(o.PolicyStatusUpdate) {
		var ret PolicyStatusData
		return ret
	}
	return *o.PolicyStatusUpdate
}

// GetPolicyStatusUpdateOk returns a tuple with the PolicyStatusUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyStatusEvents) GetPolicyStatusUpdateOk() (*PolicyStatusData, bool) {
	if o == nil || IsNil(o.PolicyStatusUpdate) {
		return nil, false
	}
	return o.PolicyStatusUpdate, true
}

// HasPolicyStatusUpdate returns a boolean if a field has been set.
func (o *PolicyStatusEvents) HasPolicyStatusUpdate() bool {
	if o != nil && !IsNil(o.PolicyStatusUpdate) {
		return true
	}

	return false
}

// SetPolicyStatusUpdate gets a reference to the given PolicyStatusData and assigns it to the PolicyStatusUpdate field.
func (o *PolicyStatusEvents) SetPolicyStatusUpdate(v PolicyStatusData) {
	o.PolicyStatusUpdate = &v
}

func (o PolicyStatusEvents) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyStatusEvents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyStatusUpdate) {
		toSerialize["policy.status.update"] = o.PolicyStatusUpdate
	}
	return toSerialize, nil
}

type NullablePolicyStatusEvents struct {
	value *PolicyStatusEvents
	isSet bool
}

func (v NullablePolicyStatusEvents) Get() *PolicyStatusEvents {
	return v.value
}

func (v *NullablePolicyStatusEvents) Set(val *PolicyStatusEvents) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyStatusEvents) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyStatusEvents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyStatusEvents(val *PolicyStatusEvents) *NullablePolicyStatusEvents {
	return &NullablePolicyStatusEvents{value: val, isSet: true}
}

func (v NullablePolicyStatusEvents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyStatusEvents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
