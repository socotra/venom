/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"encoding/json"
)

// checks if the BillingPreferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPreferences{}

// BillingPreferences struct for BillingPreferences
type BillingPreferences struct {
	BillingPlanName *string `json:"billingPlanName,omitempty"`
	BillingLevel    *string `json:"billingLevel,omitempty"`
}

// NewBillingPreferences instantiates a new BillingPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPreferences() *BillingPreferences {
	this := BillingPreferences{}
	return &this
}

// NewBillingPreferencesWithDefaults instantiates a new BillingPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPreferencesWithDefaults() *BillingPreferences {
	this := BillingPreferences{}
	return &this
}

// GetBillingPlanName returns the BillingPlanName field value if set, zero value otherwise.
func (o *BillingPreferences) GetBillingPlanName() string {
	if o == nil || IsNil(o.BillingPlanName) {
		var ret string
		return ret
	}
	return *o.BillingPlanName
}

// GetBillingPlanNameOk returns a tuple with the BillingPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPreferences) GetBillingPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.BillingPlanName) {
		return nil, false
	}
	return o.BillingPlanName, true
}

// HasBillingPlanName returns a boolean if a field has been set.
func (o *BillingPreferences) HasBillingPlanName() bool {
	if o != nil && !IsNil(o.BillingPlanName) {
		return true
	}

	return false
}

// SetBillingPlanName gets a reference to the given string and assigns it to the BillingPlanName field.
func (o *BillingPreferences) SetBillingPlanName(v string) {
	o.BillingPlanName = &v
}

// GetBillingLevel returns the BillingLevel field value if set, zero value otherwise.
func (o *BillingPreferences) GetBillingLevel() string {
	if o == nil || IsNil(o.BillingLevel) {
		var ret string
		return ret
	}
	return *o.BillingLevel
}

// GetBillingLevelOk returns a tuple with the BillingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPreferences) GetBillingLevelOk() (*string, bool) {
	if o == nil || IsNil(o.BillingLevel) {
		return nil, false
	}
	return o.BillingLevel, true
}

// HasBillingLevel returns a boolean if a field has been set.
func (o *BillingPreferences) HasBillingLevel() bool {
	if o != nil && !IsNil(o.BillingLevel) {
		return true
	}

	return false
}

// SetBillingLevel gets a reference to the given string and assigns it to the BillingLevel field.
func (o *BillingPreferences) SetBillingLevel(v string) {
	o.BillingLevel = &v
}

func (o BillingPreferences) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPreferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingPlanName) {
		toSerialize["billingPlanName"] = o.BillingPlanName
	}
	if !IsNil(o.BillingLevel) {
		toSerialize["billingLevel"] = o.BillingLevel
	}
	return toSerialize, nil
}

type NullableBillingPreferences struct {
	value *BillingPreferences
	isSet bool
}

func (v NullableBillingPreferences) Get() *BillingPreferences {
	return v.value
}

func (v *NullableBillingPreferences) Set(val *BillingPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPreferences(val *BillingPreferences) *NullableBillingPreferences {
	return &NullableBillingPreferences{value: val, isSet: true}
}

func (v NullableBillingPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
