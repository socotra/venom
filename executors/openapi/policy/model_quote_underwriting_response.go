/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the QuoteUnderwritingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteUnderwritingResponse{}

// QuoteUnderwritingResponse struct for QuoteUnderwritingResponse
type QuoteUnderwritingResponse struct {
	TenantLocator      string                     `json:"tenantLocator"`
	QuoteLocator       string                     `json:"quoteLocator"`
	AccountLocator     string                     `json:"accountLocator"`
	QuoteState         string                     `json:"quoteState"`
	ProductName        string                     `json:"productName"`
	StartTime          time.Time                  `json:"startTime"`
	EndTime            time.Time                  `json:"endTime"`
	Duration           float32                    `json:"duration"`
	DurationBasis      string                     `json:"durationBasis"`
	UnderwritingStatus string                     `json:"underwritingStatus"`
	UnderwritingFlags  []UnderwritingFlagResponse `json:"underwritingFlags"`
	ValidationResult   *ValidationResult          `json:"validationResult,omitempty"`
}

type _QuoteUnderwritingResponse QuoteUnderwritingResponse

// NewQuoteUnderwritingResponse instantiates a new QuoteUnderwritingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteUnderwritingResponse(tenantLocator string, quoteLocator string, accountLocator string, quoteState string, productName string, startTime time.Time, endTime time.Time, duration float32, durationBasis string, underwritingStatus string, underwritingFlags []UnderwritingFlagResponse) *QuoteUnderwritingResponse {
	this := QuoteUnderwritingResponse{}
	this.TenantLocator = tenantLocator
	this.QuoteLocator = quoteLocator
	this.AccountLocator = accountLocator
	this.QuoteState = quoteState
	this.ProductName = productName
	this.StartTime = startTime
	this.EndTime = endTime
	this.Duration = duration
	this.DurationBasis = durationBasis
	this.UnderwritingStatus = underwritingStatus
	this.UnderwritingFlags = underwritingFlags
	return &this
}

// NewQuoteUnderwritingResponseWithDefaults instantiates a new QuoteUnderwritingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteUnderwritingResponseWithDefaults() *QuoteUnderwritingResponse {
	this := QuoteUnderwritingResponse{}
	return &this
}

// GetTenantLocator returns the TenantLocator field value
func (o *QuoteUnderwritingResponse) GetTenantLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantLocator
}

// GetTenantLocatorOk returns a tuple with the TenantLocator field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetTenantLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantLocator, true
}

// SetTenantLocator sets field value
func (o *QuoteUnderwritingResponse) SetTenantLocator(v string) {
	o.TenantLocator = v
}

// GetQuoteLocator returns the QuoteLocator field value
func (o *QuoteUnderwritingResponse) GetQuoteLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteLocator
}

// GetQuoteLocatorOk returns a tuple with the QuoteLocator field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetQuoteLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteLocator, true
}

// SetQuoteLocator sets field value
func (o *QuoteUnderwritingResponse) SetQuoteLocator(v string) {
	o.QuoteLocator = v
}

// GetAccountLocator returns the AccountLocator field value
func (o *QuoteUnderwritingResponse) GetAccountLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountLocator
}

// GetAccountLocatorOk returns a tuple with the AccountLocator field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetAccountLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountLocator, true
}

// SetAccountLocator sets field value
func (o *QuoteUnderwritingResponse) SetAccountLocator(v string) {
	o.AccountLocator = v
}

// GetQuoteState returns the QuoteState field value
func (o *QuoteUnderwritingResponse) GetQuoteState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteState
}

// GetQuoteStateOk returns a tuple with the QuoteState field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetQuoteStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteState, true
}

// SetQuoteState sets field value
func (o *QuoteUnderwritingResponse) SetQuoteState(v string) {
	o.QuoteState = v
}

// GetProductName returns the ProductName field value
func (o *QuoteUnderwritingResponse) GetProductName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductName, true
}

// SetProductName sets field value
func (o *QuoteUnderwritingResponse) SetProductName(v string) {
	o.ProductName = v
}

// GetStartTime returns the StartTime field value
func (o *QuoteUnderwritingResponse) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *QuoteUnderwritingResponse) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *QuoteUnderwritingResponse) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *QuoteUnderwritingResponse) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetDuration returns the Duration field value
func (o *QuoteUnderwritingResponse) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *QuoteUnderwritingResponse) SetDuration(v float32) {
	o.Duration = v
}

// GetDurationBasis returns the DurationBasis field value
func (o *QuoteUnderwritingResponse) GetDurationBasis() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DurationBasis
}

// GetDurationBasisOk returns a tuple with the DurationBasis field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetDurationBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationBasis, true
}

// SetDurationBasis sets field value
func (o *QuoteUnderwritingResponse) SetDurationBasis(v string) {
	o.DurationBasis = v
}

// GetUnderwritingStatus returns the UnderwritingStatus field value
func (o *QuoteUnderwritingResponse) GetUnderwritingStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnderwritingStatus
}

// GetUnderwritingStatusOk returns a tuple with the UnderwritingStatus field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetUnderwritingStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnderwritingStatus, true
}

// SetUnderwritingStatus sets field value
func (o *QuoteUnderwritingResponse) SetUnderwritingStatus(v string) {
	o.UnderwritingStatus = v
}

// GetUnderwritingFlags returns the UnderwritingFlags field value
func (o *QuoteUnderwritingResponse) GetUnderwritingFlags() []UnderwritingFlagResponse {
	if o == nil {
		var ret []UnderwritingFlagResponse
		return ret
	}

	return o.UnderwritingFlags
}

// GetUnderwritingFlagsOk returns a tuple with the UnderwritingFlags field value
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetUnderwritingFlagsOk() ([]UnderwritingFlagResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnderwritingFlags, true
}

// SetUnderwritingFlags sets field value
func (o *QuoteUnderwritingResponse) SetUnderwritingFlags(v []UnderwritingFlagResponse) {
	o.UnderwritingFlags = v
}

// GetValidationResult returns the ValidationResult field value if set, zero value otherwise.
func (o *QuoteUnderwritingResponse) GetValidationResult() ValidationResult {
	if o == nil || IsNil(o.ValidationResult) {
		var ret ValidationResult
		return ret
	}
	return *o.ValidationResult
}

// GetValidationResultOk returns a tuple with the ValidationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteUnderwritingResponse) GetValidationResultOk() (*ValidationResult, bool) {
	if o == nil || IsNil(o.ValidationResult) {
		return nil, false
	}
	return o.ValidationResult, true
}

// HasValidationResult returns a boolean if a field has been set.
func (o *QuoteUnderwritingResponse) HasValidationResult() bool {
	if o != nil && !IsNil(o.ValidationResult) {
		return true
	}

	return false
}

// SetValidationResult gets a reference to the given ValidationResult and assigns it to the ValidationResult field.
func (o *QuoteUnderwritingResponse) SetValidationResult(v ValidationResult) {
	o.ValidationResult = &v
}

func (o QuoteUnderwritingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteUnderwritingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantLocator"] = o.TenantLocator
	toSerialize["quoteLocator"] = o.QuoteLocator
	toSerialize["accountLocator"] = o.AccountLocator
	toSerialize["quoteState"] = o.QuoteState
	toSerialize["productName"] = o.ProductName
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["duration"] = o.Duration
	toSerialize["durationBasis"] = o.DurationBasis
	toSerialize["underwritingStatus"] = o.UnderwritingStatus
	toSerialize["underwritingFlags"] = o.UnderwritingFlags
	if !IsNil(o.ValidationResult) {
		toSerialize["validationResult"] = o.ValidationResult
	}
	return toSerialize, nil
}

func (o *QuoteUnderwritingResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantLocator",
		"quoteLocator",
		"accountLocator",
		"quoteState",
		"productName",
		"startTime",
		"endTime",
		"duration",
		"durationBasis",
		"underwritingStatus",
		"underwritingFlags",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteUnderwritingResponse := _QuoteUnderwritingResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQuoteUnderwritingResponse)

	if err != nil {
		return err
	}

	*o = QuoteUnderwritingResponse(varQuoteUnderwritingResponse)

	return err
}

type NullableQuoteUnderwritingResponse struct {
	value *QuoteUnderwritingResponse
	isSet bool
}

func (v NullableQuoteUnderwritingResponse) Get() *QuoteUnderwritingResponse {
	return v.value
}

func (v *NullableQuoteUnderwritingResponse) Set(val *QuoteUnderwritingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteUnderwritingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteUnderwritingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteUnderwritingResponse(val *QuoteUnderwritingResponse) *NullableQuoteUnderwritingResponse {
	return &NullableQuoteUnderwritingResponse{value: val, isSet: true}
}

func (v NullableQuoteUnderwritingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteUnderwritingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
