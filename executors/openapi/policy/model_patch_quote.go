/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PatchQuote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchQuote{}

// PatchQuote struct for PatchQuote
type PatchQuote struct {
	SetData             map[string]map[string]interface{} `json:"setData"`
	RemoveData          map[string]map[string]interface{} `json:"removeData"`
	SetCoverageTerms    map[string]map[string]interface{} `json:"setCoverageTerms"`
	RemoveCoverageTerms map[string]map[string]interface{} `json:"removeCoverageTerms"`
	Currency            string                            `json:"currency"`
	Timezone            string                            `json:"timezone"`
	StartTime           time.Time                         `json:"startTime"`
	EndTime             time.Time                         `json:"endTime"`
	ExpirationTime      time.Time                         `json:"expirationTime"`
	Elements            []PatchElement                    `json:"elements"`
	Preferences         Preferences                       `json:"preferences"`
	// Deprecated
	BillingTrigger      string         `json:"billingTrigger"`
	DelinquencyPlanName string         `json:"delinquencyPlanName"`
	AutoRenewalPlanName string         `json:"autoRenewalPlanName"`
	BillingLevel        string         `json:"billingLevel"`
	SetContacts         []ContactRoles `json:"setContacts"`
	RemoveContacts      []string       `json:"removeContacts"`
	InvoiceFeeAmount    float32        `json:"invoiceFeeAmount"`
}

type _PatchQuote PatchQuote

// NewPatchQuote instantiates a new PatchQuote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchQuote(setData map[string]map[string]interface{}, removeData map[string]map[string]interface{}, setCoverageTerms map[string]map[string]interface{}, removeCoverageTerms map[string]map[string]interface{}, currency string, timezone string, startTime time.Time, endTime time.Time, expirationTime time.Time, elements []PatchElement, preferences Preferences, billingTrigger string, delinquencyPlanName string, autoRenewalPlanName string, billingLevel string, setContacts []ContactRoles, removeContacts []string, invoiceFeeAmount float32) *PatchQuote {
	this := PatchQuote{}
	this.SetData = setData
	this.RemoveData = removeData
	this.SetCoverageTerms = setCoverageTerms
	this.RemoveCoverageTerms = removeCoverageTerms
	this.Currency = currency
	this.Timezone = timezone
	this.StartTime = startTime
	this.EndTime = endTime
	this.ExpirationTime = expirationTime
	this.Elements = elements
	this.Preferences = preferences
	this.BillingTrigger = billingTrigger
	this.DelinquencyPlanName = delinquencyPlanName
	this.AutoRenewalPlanName = autoRenewalPlanName
	this.BillingLevel = billingLevel
	this.SetContacts = setContacts
	this.RemoveContacts = removeContacts
	this.InvoiceFeeAmount = invoiceFeeAmount
	return &this
}

// NewPatchQuoteWithDefaults instantiates a new PatchQuote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchQuoteWithDefaults() *PatchQuote {
	this := PatchQuote{}
	return &this
}

// GetSetData returns the SetData field value
func (o *PatchQuote) GetSetData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.SetData
}

// GetSetDataOk returns a tuple with the SetData field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetSetDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.SetData, true
}

// SetSetData sets field value
func (o *PatchQuote) SetSetData(v map[string]map[string]interface{}) {
	o.SetData = v
}

// GetRemoveData returns the RemoveData field value
func (o *PatchQuote) GetRemoveData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.RemoveData
}

// GetRemoveDataOk returns a tuple with the RemoveData field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetRemoveDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.RemoveData, true
}

// SetRemoveData sets field value
func (o *PatchQuote) SetRemoveData(v map[string]map[string]interface{}) {
	o.RemoveData = v
}

// GetSetCoverageTerms returns the SetCoverageTerms field value
func (o *PatchQuote) GetSetCoverageTerms() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.SetCoverageTerms
}

// GetSetCoverageTermsOk returns a tuple with the SetCoverageTerms field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetSetCoverageTermsOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.SetCoverageTerms, true
}

// SetSetCoverageTerms sets field value
func (o *PatchQuote) SetSetCoverageTerms(v map[string]map[string]interface{}) {
	o.SetCoverageTerms = v
}

// GetRemoveCoverageTerms returns the RemoveCoverageTerms field value
func (o *PatchQuote) GetRemoveCoverageTerms() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.RemoveCoverageTerms
}

// GetRemoveCoverageTermsOk returns a tuple with the RemoveCoverageTerms field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetRemoveCoverageTermsOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.RemoveCoverageTerms, true
}

// SetRemoveCoverageTerms sets field value
func (o *PatchQuote) SetRemoveCoverageTerms(v map[string]map[string]interface{}) {
	o.RemoveCoverageTerms = v
}

// GetCurrency returns the Currency field value
func (o *PatchQuote) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *PatchQuote) SetCurrency(v string) {
	o.Currency = v
}

// GetTimezone returns the Timezone field value
func (o *PatchQuote) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *PatchQuote) SetTimezone(v string) {
	o.Timezone = v
}

// GetStartTime returns the StartTime field value
func (o *PatchQuote) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *PatchQuote) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *PatchQuote) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *PatchQuote) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetExpirationTime returns the ExpirationTime field value
func (o *PatchQuote) GetExpirationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetExpirationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTime, true
}

// SetExpirationTime sets field value
func (o *PatchQuote) SetExpirationTime(v time.Time) {
	o.ExpirationTime = v
}

// GetElements returns the Elements field value
func (o *PatchQuote) GetElements() []PatchElement {
	if o == nil {
		var ret []PatchElement
		return ret
	}

	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetElementsOk() ([]PatchElement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Elements, true
}

// SetElements sets field value
func (o *PatchQuote) SetElements(v []PatchElement) {
	o.Elements = v
}

// GetPreferences returns the Preferences field value
func (o *PatchQuote) GetPreferences() Preferences {
	if o == nil {
		var ret Preferences
		return ret
	}

	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetPreferencesOk() (*Preferences, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Preferences, true
}

// SetPreferences sets field value
func (o *PatchQuote) SetPreferences(v Preferences) {
	o.Preferences = v
}

// GetBillingTrigger returns the BillingTrigger field value
// Deprecated
func (o *PatchQuote) GetBillingTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingTrigger
}

// GetBillingTriggerOk returns a tuple with the BillingTrigger field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *PatchQuote) GetBillingTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingTrigger, true
}

// SetBillingTrigger sets field value
// Deprecated
func (o *PatchQuote) SetBillingTrigger(v string) {
	o.BillingTrigger = v
}

// GetDelinquencyPlanName returns the DelinquencyPlanName field value
func (o *PatchQuote) GetDelinquencyPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DelinquencyPlanName
}

// GetDelinquencyPlanNameOk returns a tuple with the DelinquencyPlanName field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetDelinquencyPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DelinquencyPlanName, true
}

// SetDelinquencyPlanName sets field value
func (o *PatchQuote) SetDelinquencyPlanName(v string) {
	o.DelinquencyPlanName = v
}

// GetAutoRenewalPlanName returns the AutoRenewalPlanName field value
func (o *PatchQuote) GetAutoRenewalPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AutoRenewalPlanName
}

// GetAutoRenewalPlanNameOk returns a tuple with the AutoRenewalPlanName field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetAutoRenewalPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoRenewalPlanName, true
}

// SetAutoRenewalPlanName sets field value
func (o *PatchQuote) SetAutoRenewalPlanName(v string) {
	o.AutoRenewalPlanName = v
}

// GetBillingLevel returns the BillingLevel field value
func (o *PatchQuote) GetBillingLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingLevel
}

// GetBillingLevelOk returns a tuple with the BillingLevel field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetBillingLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingLevel, true
}

// SetBillingLevel sets field value
func (o *PatchQuote) SetBillingLevel(v string) {
	o.BillingLevel = v
}

// GetSetContacts returns the SetContacts field value
func (o *PatchQuote) GetSetContacts() []ContactRoles {
	if o == nil {
		var ret []ContactRoles
		return ret
	}

	return o.SetContacts
}

// GetSetContactsOk returns a tuple with the SetContacts field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetSetContactsOk() ([]ContactRoles, bool) {
	if o == nil {
		return nil, false
	}
	return o.SetContacts, true
}

// SetSetContacts sets field value
func (o *PatchQuote) SetSetContacts(v []ContactRoles) {
	o.SetContacts = v
}

// GetRemoveContacts returns the RemoveContacts field value
func (o *PatchQuote) GetRemoveContacts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RemoveContacts
}

// GetRemoveContactsOk returns a tuple with the RemoveContacts field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetRemoveContactsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveContacts, true
}

// SetRemoveContacts sets field value
func (o *PatchQuote) SetRemoveContacts(v []string) {
	o.RemoveContacts = v
}

// GetInvoiceFeeAmount returns the InvoiceFeeAmount field value
func (o *PatchQuote) GetInvoiceFeeAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InvoiceFeeAmount
}

// GetInvoiceFeeAmountOk returns a tuple with the InvoiceFeeAmount field value
// and a boolean to check if the value has been set.
func (o *PatchQuote) GetInvoiceFeeAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceFeeAmount, true
}

// SetInvoiceFeeAmount sets field value
func (o *PatchQuote) SetInvoiceFeeAmount(v float32) {
	o.InvoiceFeeAmount = v
}

func (o PatchQuote) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchQuote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["setData"] = o.SetData
	toSerialize["removeData"] = o.RemoveData
	toSerialize["setCoverageTerms"] = o.SetCoverageTerms
	toSerialize["removeCoverageTerms"] = o.RemoveCoverageTerms
	toSerialize["currency"] = o.Currency
	toSerialize["timezone"] = o.Timezone
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["expirationTime"] = o.ExpirationTime
	toSerialize["elements"] = o.Elements
	toSerialize["preferences"] = o.Preferences
	toSerialize["billingTrigger"] = o.BillingTrigger
	toSerialize["delinquencyPlanName"] = o.DelinquencyPlanName
	toSerialize["autoRenewalPlanName"] = o.AutoRenewalPlanName
	toSerialize["billingLevel"] = o.BillingLevel
	toSerialize["setContacts"] = o.SetContacts
	toSerialize["removeContacts"] = o.RemoveContacts
	toSerialize["invoiceFeeAmount"] = o.InvoiceFeeAmount
	return toSerialize, nil
}

func (o *PatchQuote) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"setData",
		"removeData",
		"setCoverageTerms",
		"removeCoverageTerms",
		"currency",
		"timezone",
		"startTime",
		"endTime",
		"expirationTime",
		"elements",
		"preferences",
		"billingTrigger",
		"delinquencyPlanName",
		"autoRenewalPlanName",
		"billingLevel",
		"setContacts",
		"removeContacts",
		"invoiceFeeAmount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchQuote := _PatchQuote{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPatchQuote)

	if err != nil {
		return err
	}

	*o = PatchQuote(varPatchQuote)

	return err
}

type NullablePatchQuote struct {
	value *PatchQuote
	isSet bool
}

func (v NullablePatchQuote) Get() *PatchQuote {
	return v.value
}

func (v *NullablePatchQuote) Set(val *PatchQuote) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchQuote) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchQuote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchQuote(val *PatchQuote) *NullablePatchQuote {
	return &NullablePatchQuote{value: val, isSet: true}
}

func (v NullablePatchQuote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchQuote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
