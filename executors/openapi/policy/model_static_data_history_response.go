/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package policy

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the StaticDataHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StaticDataHistoryResponse{}

// StaticDataHistoryResponse struct for StaticDataHistoryResponse
type StaticDataHistoryResponse struct {
	HistoryLocator string                            `json:"historyLocator"`
	StaticData     map[string]map[string]interface{} `json:"staticData"`
	UpdatedBy      string                            `json:"updatedBy"`
	UpdatedAt      time.Time                         `json:"updatedAt"`
}

type _StaticDataHistoryResponse StaticDataHistoryResponse

// NewStaticDataHistoryResponse instantiates a new StaticDataHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStaticDataHistoryResponse(historyLocator string, staticData map[string]map[string]interface{}, updatedBy string, updatedAt time.Time) *StaticDataHistoryResponse {
	this := StaticDataHistoryResponse{}
	this.HistoryLocator = historyLocator
	this.StaticData = staticData
	this.UpdatedBy = updatedBy
	this.UpdatedAt = updatedAt
	return &this
}

// NewStaticDataHistoryResponseWithDefaults instantiates a new StaticDataHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStaticDataHistoryResponseWithDefaults() *StaticDataHistoryResponse {
	this := StaticDataHistoryResponse{}
	return &this
}

// GetHistoryLocator returns the HistoryLocator field value
func (o *StaticDataHistoryResponse) GetHistoryLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HistoryLocator
}

// GetHistoryLocatorOk returns a tuple with the HistoryLocator field value
// and a boolean to check if the value has been set.
func (o *StaticDataHistoryResponse) GetHistoryLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistoryLocator, true
}

// SetHistoryLocator sets field value
func (o *StaticDataHistoryResponse) SetHistoryLocator(v string) {
	o.HistoryLocator = v
}

// GetStaticData returns the StaticData field value
func (o *StaticDataHistoryResponse) GetStaticData() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.StaticData
}

// GetStaticDataOk returns a tuple with the StaticData field value
// and a boolean to check if the value has been set.
func (o *StaticDataHistoryResponse) GetStaticDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil {
		return map[string]map[string]interface{}{}, false
	}
	return o.StaticData, true
}

// SetStaticData sets field value
func (o *StaticDataHistoryResponse) SetStaticData(v map[string]map[string]interface{}) {
	o.StaticData = v
}

// GetUpdatedBy returns the UpdatedBy field value
func (o *StaticDataHistoryResponse) GetUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
func (o *StaticDataHistoryResponse) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedBy, true
}

// SetUpdatedBy sets field value
func (o *StaticDataHistoryResponse) SetUpdatedBy(v string) {
	o.UpdatedBy = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *StaticDataHistoryResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *StaticDataHistoryResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *StaticDataHistoryResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o StaticDataHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StaticDataHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["historyLocator"] = o.HistoryLocator
	toSerialize["staticData"] = o.StaticData
	toSerialize["updatedBy"] = o.UpdatedBy
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *StaticDataHistoryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"historyLocator",
		"staticData",
		"updatedBy",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStaticDataHistoryResponse := _StaticDataHistoryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStaticDataHistoryResponse)

	if err != nil {
		return err
	}

	*o = StaticDataHistoryResponse(varStaticDataHistoryResponse)

	return err
}

type NullableStaticDataHistoryResponse struct {
	value *StaticDataHistoryResponse
	isSet bool
}

func (v NullableStaticDataHistoryResponse) Get() *StaticDataHistoryResponse {
	return v.value
}

func (v *NullableStaticDataHistoryResponse) Set(val *StaticDataHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStaticDataHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStaticDataHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStaticDataHistoryResponse(val *StaticDataHistoryResponse) *NullableStaticDataHistoryResponse {
	return &NullableStaticDataHistoryResponse{value: val, isSet: true}
}

func (v NullableStaticDataHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStaticDataHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
