/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DocumentConfigRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentConfigRef{}

// DocumentConfigRef struct for DocumentConfigRef
type DocumentConfigRef struct {
	DisplayName        string             `json:"displayName"`
	Scope              string             `json:"scope"`
	Format             string             `json:"format"`
	Rendering          string             `json:"rendering"`
	SelectionTimeBasis string             `json:"selectionTimeBasis"`
	Trigger            string             `json:"trigger"`
	Portrait           *bool              `json:"portrait,omitempty"`
	PageSize           *string            `json:"pageSize,omitempty"`
	Margin             *DocumentMarginRef `json:"margin,omitempty"`
	TemplateSnippets   []string           `json:"templateSnippets"`
	CustomFonts        []string           `json:"customFonts"`
}

type _DocumentConfigRef DocumentConfigRef

// NewDocumentConfigRef instantiates a new DocumentConfigRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentConfigRef(displayName string, scope string, format string, rendering string, selectionTimeBasis string, trigger string, templateSnippets []string, customFonts []string) *DocumentConfigRef {
	this := DocumentConfigRef{}
	this.DisplayName = displayName
	this.Scope = scope
	this.Format = format
	this.Rendering = rendering
	this.SelectionTimeBasis = selectionTimeBasis
	this.Trigger = trigger
	this.TemplateSnippets = templateSnippets
	this.CustomFonts = customFonts
	return &this
}

// NewDocumentConfigRefWithDefaults instantiates a new DocumentConfigRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentConfigRefWithDefaults() *DocumentConfigRef {
	this := DocumentConfigRef{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *DocumentConfigRef) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *DocumentConfigRef) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetScope returns the Scope field value
func (o *DocumentConfigRef) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *DocumentConfigRef) SetScope(v string) {
	o.Scope = v
}

// GetFormat returns the Format field value
func (o *DocumentConfigRef) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *DocumentConfigRef) SetFormat(v string) {
	o.Format = v
}

// GetRendering returns the Rendering field value
func (o *DocumentConfigRef) GetRendering() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rendering
}

// GetRenderingOk returns a tuple with the Rendering field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetRenderingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rendering, true
}

// SetRendering sets field value
func (o *DocumentConfigRef) SetRendering(v string) {
	o.Rendering = v
}

// GetSelectionTimeBasis returns the SelectionTimeBasis field value
func (o *DocumentConfigRef) GetSelectionTimeBasis() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SelectionTimeBasis
}

// GetSelectionTimeBasisOk returns a tuple with the SelectionTimeBasis field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetSelectionTimeBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SelectionTimeBasis, true
}

// SetSelectionTimeBasis sets field value
func (o *DocumentConfigRef) SetSelectionTimeBasis(v string) {
	o.SelectionTimeBasis = v
}

// GetTrigger returns the Trigger field value
func (o *DocumentConfigRef) GetTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trigger, true
}

// SetTrigger sets field value
func (o *DocumentConfigRef) SetTrigger(v string) {
	o.Trigger = v
}

// GetPortrait returns the Portrait field value if set, zero value otherwise.
func (o *DocumentConfigRef) GetPortrait() bool {
	if o == nil || IsNil(o.Portrait) {
		var ret bool
		return ret
	}
	return *o.Portrait
}

// GetPortraitOk returns a tuple with the Portrait field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetPortraitOk() (*bool, bool) {
	if o == nil || IsNil(o.Portrait) {
		return nil, false
	}
	return o.Portrait, true
}

// HasPortrait returns a boolean if a field has been set.
func (o *DocumentConfigRef) HasPortrait() bool {
	if o != nil && !IsNil(o.Portrait) {
		return true
	}

	return false
}

// SetPortrait gets a reference to the given bool and assigns it to the Portrait field.
func (o *DocumentConfigRef) SetPortrait(v bool) {
	o.Portrait = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *DocumentConfigRef) GetPageSize() string {
	if o == nil || IsNil(o.PageSize) {
		var ret string
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetPageSizeOk() (*string, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *DocumentConfigRef) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given string and assigns it to the PageSize field.
func (o *DocumentConfigRef) SetPageSize(v string) {
	o.PageSize = &v
}

// GetMargin returns the Margin field value if set, zero value otherwise.
func (o *DocumentConfigRef) GetMargin() DocumentMarginRef {
	if o == nil || IsNil(o.Margin) {
		var ret DocumentMarginRef
		return ret
	}
	return *o.Margin
}

// GetMarginOk returns a tuple with the Margin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetMarginOk() (*DocumentMarginRef, bool) {
	if o == nil || IsNil(o.Margin) {
		return nil, false
	}
	return o.Margin, true
}

// HasMargin returns a boolean if a field has been set.
func (o *DocumentConfigRef) HasMargin() bool {
	if o != nil && !IsNil(o.Margin) {
		return true
	}

	return false
}

// SetMargin gets a reference to the given DocumentMarginRef and assigns it to the Margin field.
func (o *DocumentConfigRef) SetMargin(v DocumentMarginRef) {
	o.Margin = &v
}

// GetTemplateSnippets returns the TemplateSnippets field value
func (o *DocumentConfigRef) GetTemplateSnippets() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TemplateSnippets
}

// GetTemplateSnippetsOk returns a tuple with the TemplateSnippets field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetTemplateSnippetsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateSnippets, true
}

// SetTemplateSnippets sets field value
func (o *DocumentConfigRef) SetTemplateSnippets(v []string) {
	o.TemplateSnippets = v
}

// GetCustomFonts returns the CustomFonts field value
func (o *DocumentConfigRef) GetCustomFonts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CustomFonts
}

// GetCustomFontsOk returns a tuple with the CustomFonts field value
// and a boolean to check if the value has been set.
func (o *DocumentConfigRef) GetCustomFontsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFonts, true
}

// SetCustomFonts sets field value
func (o *DocumentConfigRef) SetCustomFonts(v []string) {
	o.CustomFonts = v
}

func (o DocumentConfigRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentConfigRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["displayName"] = o.DisplayName
	toSerialize["scope"] = o.Scope
	toSerialize["format"] = o.Format
	toSerialize["rendering"] = o.Rendering
	toSerialize["selectionTimeBasis"] = o.SelectionTimeBasis
	toSerialize["trigger"] = o.Trigger
	if !IsNil(o.Portrait) {
		toSerialize["portrait"] = o.Portrait
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.Margin) {
		toSerialize["margin"] = o.Margin
	}
	toSerialize["templateSnippets"] = o.TemplateSnippets
	toSerialize["customFonts"] = o.CustomFonts
	return toSerialize, nil
}

func (o *DocumentConfigRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayName",
		"scope",
		"format",
		"rendering",
		"selectionTimeBasis",
		"trigger",
		"templateSnippets",
		"customFonts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentConfigRef := _DocumentConfigRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentConfigRef)

	if err != nil {
		return err
	}

	*o = DocumentConfigRef(varDocumentConfigRef)

	return err
}

type NullableDocumentConfigRef struct {
	value *DocumentConfigRef
	isSet bool
}

func (v NullableDocumentConfigRef) Get() *DocumentConfigRef {
	return v.value
}

func (v *NullableDocumentConfigRef) Set(val *DocumentConfigRef) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentConfigRef) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentConfigRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentConfigRef(val *DocumentConfigRef) *NullableDocumentConfigRef {
	return &NullableDocumentConfigRef{value: val, isSet: true}
}

func (v NullableDocumentConfigRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentConfigRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
