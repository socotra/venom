/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ConsolidatedDocumentConfigRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsolidatedDocumentConfigRef{}

// ConsolidatedDocumentConfigRef struct for ConsolidatedDocumentConfigRef
type ConsolidatedDocumentConfigRef struct {
	DisplayName             string                       `json:"displayName"`
	ConsolidatedDocuments   []string                     `json:"consolidatedDocuments"`
	LeadingDocumentTemplate string                       `json:"leadingDocumentTemplate"`
	PageNumbering           ConsolidatedPageNumberingRef `json:"pageNumbering"`
}

type _ConsolidatedDocumentConfigRef ConsolidatedDocumentConfigRef

// NewConsolidatedDocumentConfigRef instantiates a new ConsolidatedDocumentConfigRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsolidatedDocumentConfigRef(displayName string, consolidatedDocuments []string, leadingDocumentTemplate string, pageNumbering ConsolidatedPageNumberingRef) *ConsolidatedDocumentConfigRef {
	this := ConsolidatedDocumentConfigRef{}
	this.DisplayName = displayName
	this.ConsolidatedDocuments = consolidatedDocuments
	this.LeadingDocumentTemplate = leadingDocumentTemplate
	this.PageNumbering = pageNumbering
	return &this
}

// NewConsolidatedDocumentConfigRefWithDefaults instantiates a new ConsolidatedDocumentConfigRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsolidatedDocumentConfigRefWithDefaults() *ConsolidatedDocumentConfigRef {
	this := ConsolidatedDocumentConfigRef{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *ConsolidatedDocumentConfigRef) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedDocumentConfigRef) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ConsolidatedDocumentConfigRef) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetConsolidatedDocuments returns the ConsolidatedDocuments field value
func (o *ConsolidatedDocumentConfigRef) GetConsolidatedDocuments() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ConsolidatedDocuments
}

// GetConsolidatedDocumentsOk returns a tuple with the ConsolidatedDocuments field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedDocumentConfigRef) GetConsolidatedDocumentsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConsolidatedDocuments, true
}

// SetConsolidatedDocuments sets field value
func (o *ConsolidatedDocumentConfigRef) SetConsolidatedDocuments(v []string) {
	o.ConsolidatedDocuments = v
}

// GetLeadingDocumentTemplate returns the LeadingDocumentTemplate field value
func (o *ConsolidatedDocumentConfigRef) GetLeadingDocumentTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LeadingDocumentTemplate
}

// GetLeadingDocumentTemplateOk returns a tuple with the LeadingDocumentTemplate field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedDocumentConfigRef) GetLeadingDocumentTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LeadingDocumentTemplate, true
}

// SetLeadingDocumentTemplate sets field value
func (o *ConsolidatedDocumentConfigRef) SetLeadingDocumentTemplate(v string) {
	o.LeadingDocumentTemplate = v
}

// GetPageNumbering returns the PageNumbering field value
func (o *ConsolidatedDocumentConfigRef) GetPageNumbering() ConsolidatedPageNumberingRef {
	if o == nil {
		var ret ConsolidatedPageNumberingRef
		return ret
	}

	return o.PageNumbering
}

// GetPageNumberingOk returns a tuple with the PageNumbering field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedDocumentConfigRef) GetPageNumberingOk() (*ConsolidatedPageNumberingRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageNumbering, true
}

// SetPageNumbering sets field value
func (o *ConsolidatedDocumentConfigRef) SetPageNumbering(v ConsolidatedPageNumberingRef) {
	o.PageNumbering = v
}

func (o ConsolidatedDocumentConfigRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsolidatedDocumentConfigRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["displayName"] = o.DisplayName
	toSerialize["consolidatedDocuments"] = o.ConsolidatedDocuments
	toSerialize["leadingDocumentTemplate"] = o.LeadingDocumentTemplate
	toSerialize["pageNumbering"] = o.PageNumbering
	return toSerialize, nil
}

func (o *ConsolidatedDocumentConfigRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayName",
		"consolidatedDocuments",
		"leadingDocumentTemplate",
		"pageNumbering",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConsolidatedDocumentConfigRef := _ConsolidatedDocumentConfigRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConsolidatedDocumentConfigRef)

	if err != nil {
		return err
	}

	*o = ConsolidatedDocumentConfigRef(varConsolidatedDocumentConfigRef)

	return err
}

type NullableConsolidatedDocumentConfigRef struct {
	value *ConsolidatedDocumentConfigRef
	isSet bool
}

func (v NullableConsolidatedDocumentConfigRef) Get() *ConsolidatedDocumentConfigRef {
	return v.value
}

func (v *NullableConsolidatedDocumentConfigRef) Set(val *ConsolidatedDocumentConfigRef) {
	v.value = val
	v.isSet = true
}

func (v NullableConsolidatedDocumentConfigRef) IsSet() bool {
	return v.isSet
}

func (v *NullableConsolidatedDocumentConfigRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsolidatedDocumentConfigRef(val *ConsolidatedDocumentConfigRef) *NullableConsolidatedDocumentConfigRef {
	return &NullableConsolidatedDocumentConfigRef{value: val, isSet: true}
}

func (v NullableConsolidatedDocumentConfigRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsolidatedDocumentConfigRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
