/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DelinquencyEventConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelinquencyEventConfiguration{}

// DelinquencyEventConfiguration struct for DelinquencyEventConfiguration
type DelinquencyEventConfiguration struct {
	OffsetDays  float32 `json:"offsetDays"`
	OffsetBasis string  `json:"offsetBasis"`
}

type _DelinquencyEventConfiguration DelinquencyEventConfiguration

// NewDelinquencyEventConfiguration instantiates a new DelinquencyEventConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelinquencyEventConfiguration(offsetDays float32, offsetBasis string) *DelinquencyEventConfiguration {
	this := DelinquencyEventConfiguration{}
	this.OffsetDays = offsetDays
	this.OffsetBasis = offsetBasis
	return &this
}

// NewDelinquencyEventConfigurationWithDefaults instantiates a new DelinquencyEventConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelinquencyEventConfigurationWithDefaults() *DelinquencyEventConfiguration {
	this := DelinquencyEventConfiguration{}
	return &this
}

// GetOffsetDays returns the OffsetDays field value
func (o *DelinquencyEventConfiguration) GetOffsetDays() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OffsetDays
}

// GetOffsetDaysOk returns a tuple with the OffsetDays field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventConfiguration) GetOffsetDaysOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OffsetDays, true
}

// SetOffsetDays sets field value
func (o *DelinquencyEventConfiguration) SetOffsetDays(v float32) {
	o.OffsetDays = v
}

// GetOffsetBasis returns the OffsetBasis field value
func (o *DelinquencyEventConfiguration) GetOffsetBasis() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OffsetBasis
}

// GetOffsetBasisOk returns a tuple with the OffsetBasis field value
// and a boolean to check if the value has been set.
func (o *DelinquencyEventConfiguration) GetOffsetBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OffsetBasis, true
}

// SetOffsetBasis sets field value
func (o *DelinquencyEventConfiguration) SetOffsetBasis(v string) {
	o.OffsetBasis = v
}

func (o DelinquencyEventConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelinquencyEventConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["offsetDays"] = o.OffsetDays
	toSerialize["offsetBasis"] = o.OffsetBasis
	return toSerialize, nil
}

func (o *DelinquencyEventConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"offsetDays",
		"offsetBasis",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDelinquencyEventConfiguration := _DelinquencyEventConfiguration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDelinquencyEventConfiguration)

	if err != nil {
		return err
	}

	*o = DelinquencyEventConfiguration(varDelinquencyEventConfiguration)

	return err
}

type NullableDelinquencyEventConfiguration struct {
	value *DelinquencyEventConfiguration
	isSet bool
}

func (v NullableDelinquencyEventConfiguration) Get() *DelinquencyEventConfiguration {
	return v.value
}

func (v *NullableDelinquencyEventConfiguration) Set(val *DelinquencyEventConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDelinquencyEventConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDelinquencyEventConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelinquencyEventConfiguration(val *DelinquencyEventConfiguration) *NullableDelinquencyEventConfiguration {
	return &NullableDelinquencyEventConfiguration{value: val, isSet: true}
}

func (v NullableDelinquencyEventConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelinquencyEventConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
