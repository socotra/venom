/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ProductRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductRef{}

// ProductRef struct for ProductRef
type ProductRef struct {
	Extend                 string `json:"extend"`
	Abstract               bool   `json:"abstract"`
	DefaultInstallmentPlan string `json:"defaultInstallmentPlan"`
	// Deprecated
	DefaultBillingPlan            string                 `json:"defaultBillingPlan"`
	DefaultTermDuration           float32                `json:"defaultTermDuration"`
	DefaultDelinquencyPlan        *string                `json:"defaultDelinquencyPlan,omitempty"`
	DefaultAutoRenewalPlan        *string                `json:"defaultAutoRenewalPlan,omitempty"`
	DefaultShortfallTolerancePlan *string                `json:"defaultShortfallTolerancePlan,omitempty"`
	DisplayName                   string                 `json:"displayName"`
	DefaultDurationBasis          string                 `json:"defaultDurationBasis"`
	CoverageTerms                 []string               `json:"coverageTerms"`
	EligibleAccountTypes          []string               `json:"eligibleAccountTypes"`
	Contents                      []string               `json:"contents"`
	Documents                     []string               `json:"documents"`
	Charges                       []string               `json:"charges"`
	Data                          map[string]PropertyRef `json:"data"`
	StaticData                    map[string]PropertyRef `json:"staticData"`
	DefaultSearchable             bool                   `json:"defaultSearchable"`
	// Deprecated
	PluralType                 string              `json:"pluralType"`
	DefaultBillingTrigger      string              `json:"defaultBillingTrigger"`
	NumberingPlan              *string             `json:"numberingPlan,omitempty"`
	NumberingString            *string             `json:"numberingString,omitempty"`
	Availability               *AvailabilityRef    `json:"availability,omitempty"`
	WithPrecommitReapplication *bool               `json:"withPrecommitReapplication,omitempty"`
	Contacts                   map[string][]string `json:"contacts"`
	NumberingTrigger           string              `json:"numberingTrigger"`
}

type _ProductRef ProductRef

// NewProductRef instantiates a new ProductRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductRef(extend string, abstract bool, defaultInstallmentPlan string, defaultBillingPlan string, defaultTermDuration float32, displayName string, defaultDurationBasis string, coverageTerms []string, eligibleAccountTypes []string, contents []string, documents []string, charges []string, data map[string]PropertyRef, staticData map[string]PropertyRef, defaultSearchable bool, pluralType string, defaultBillingTrigger string, contacts map[string][]string, numberingTrigger string) *ProductRef {
	this := ProductRef{}
	this.Extend = extend
	this.Abstract = abstract
	this.DefaultInstallmentPlan = defaultInstallmentPlan
	this.DefaultBillingPlan = defaultBillingPlan
	this.DefaultTermDuration = defaultTermDuration
	this.DisplayName = displayName
	this.DefaultDurationBasis = defaultDurationBasis
	this.CoverageTerms = coverageTerms
	this.EligibleAccountTypes = eligibleAccountTypes
	this.Contents = contents
	this.Documents = documents
	this.Charges = charges
	this.Data = data
	this.StaticData = staticData
	this.DefaultSearchable = defaultSearchable
	this.PluralType = pluralType
	this.DefaultBillingTrigger = defaultBillingTrigger
	this.Contacts = contacts
	this.NumberingTrigger = numberingTrigger
	return &this
}

// NewProductRefWithDefaults instantiates a new ProductRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductRefWithDefaults() *ProductRef {
	this := ProductRef{}
	return &this
}

// GetExtend returns the Extend field value
func (o *ProductRef) GetExtend() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Extend
}

// GetExtendOk returns a tuple with the Extend field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetExtendOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extend, true
}

// SetExtend sets field value
func (o *ProductRef) SetExtend(v string) {
	o.Extend = v
}

// GetAbstract returns the Abstract field value
func (o *ProductRef) GetAbstract() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Abstract
}

// GetAbstractOk returns a tuple with the Abstract field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetAbstractOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Abstract, true
}

// SetAbstract sets field value
func (o *ProductRef) SetAbstract(v bool) {
	o.Abstract = v
}

// GetDefaultInstallmentPlan returns the DefaultInstallmentPlan field value
func (o *ProductRef) GetDefaultInstallmentPlan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultInstallmentPlan
}

// GetDefaultInstallmentPlanOk returns a tuple with the DefaultInstallmentPlan field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultInstallmentPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultInstallmentPlan, true
}

// SetDefaultInstallmentPlan sets field value
func (o *ProductRef) SetDefaultInstallmentPlan(v string) {
	o.DefaultInstallmentPlan = v
}

// GetDefaultBillingPlan returns the DefaultBillingPlan field value
// Deprecated
func (o *ProductRef) GetDefaultBillingPlan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultBillingPlan
}

// GetDefaultBillingPlanOk returns a tuple with the DefaultBillingPlan field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *ProductRef) GetDefaultBillingPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultBillingPlan, true
}

// SetDefaultBillingPlan sets field value
// Deprecated
func (o *ProductRef) SetDefaultBillingPlan(v string) {
	o.DefaultBillingPlan = v
}

// GetDefaultTermDuration returns the DefaultTermDuration field value
func (o *ProductRef) GetDefaultTermDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DefaultTermDuration
}

// GetDefaultTermDurationOk returns a tuple with the DefaultTermDuration field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultTermDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultTermDuration, true
}

// SetDefaultTermDuration sets field value
func (o *ProductRef) SetDefaultTermDuration(v float32) {
	o.DefaultTermDuration = v
}

// GetDefaultDelinquencyPlan returns the DefaultDelinquencyPlan field value if set, zero value otherwise.
func (o *ProductRef) GetDefaultDelinquencyPlan() string {
	if o == nil || IsNil(o.DefaultDelinquencyPlan) {
		var ret string
		return ret
	}
	return *o.DefaultDelinquencyPlan
}

// GetDefaultDelinquencyPlanOk returns a tuple with the DefaultDelinquencyPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultDelinquencyPlanOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultDelinquencyPlan) {
		return nil, false
	}
	return o.DefaultDelinquencyPlan, true
}

// HasDefaultDelinquencyPlan returns a boolean if a field has been set.
func (o *ProductRef) HasDefaultDelinquencyPlan() bool {
	if o != nil && !IsNil(o.DefaultDelinquencyPlan) {
		return true
	}

	return false
}

// SetDefaultDelinquencyPlan gets a reference to the given string and assigns it to the DefaultDelinquencyPlan field.
func (o *ProductRef) SetDefaultDelinquencyPlan(v string) {
	o.DefaultDelinquencyPlan = &v
}

// GetDefaultAutoRenewalPlan returns the DefaultAutoRenewalPlan field value if set, zero value otherwise.
func (o *ProductRef) GetDefaultAutoRenewalPlan() string {
	if o == nil || IsNil(o.DefaultAutoRenewalPlan) {
		var ret string
		return ret
	}
	return *o.DefaultAutoRenewalPlan
}

// GetDefaultAutoRenewalPlanOk returns a tuple with the DefaultAutoRenewalPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultAutoRenewalPlanOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultAutoRenewalPlan) {
		return nil, false
	}
	return o.DefaultAutoRenewalPlan, true
}

// HasDefaultAutoRenewalPlan returns a boolean if a field has been set.
func (o *ProductRef) HasDefaultAutoRenewalPlan() bool {
	if o != nil && !IsNil(o.DefaultAutoRenewalPlan) {
		return true
	}

	return false
}

// SetDefaultAutoRenewalPlan gets a reference to the given string and assigns it to the DefaultAutoRenewalPlan field.
func (o *ProductRef) SetDefaultAutoRenewalPlan(v string) {
	o.DefaultAutoRenewalPlan = &v
}

// GetDefaultShortfallTolerancePlan returns the DefaultShortfallTolerancePlan field value if set, zero value otherwise.
func (o *ProductRef) GetDefaultShortfallTolerancePlan() string {
	if o == nil || IsNil(o.DefaultShortfallTolerancePlan) {
		var ret string
		return ret
	}
	return *o.DefaultShortfallTolerancePlan
}

// GetDefaultShortfallTolerancePlanOk returns a tuple with the DefaultShortfallTolerancePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultShortfallTolerancePlanOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultShortfallTolerancePlan) {
		return nil, false
	}
	return o.DefaultShortfallTolerancePlan, true
}

// HasDefaultShortfallTolerancePlan returns a boolean if a field has been set.
func (o *ProductRef) HasDefaultShortfallTolerancePlan() bool {
	if o != nil && !IsNil(o.DefaultShortfallTolerancePlan) {
		return true
	}

	return false
}

// SetDefaultShortfallTolerancePlan gets a reference to the given string and assigns it to the DefaultShortfallTolerancePlan field.
func (o *ProductRef) SetDefaultShortfallTolerancePlan(v string) {
	o.DefaultShortfallTolerancePlan = &v
}

// GetDisplayName returns the DisplayName field value
func (o *ProductRef) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ProductRef) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDefaultDurationBasis returns the DefaultDurationBasis field value
func (o *ProductRef) GetDefaultDurationBasis() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultDurationBasis
}

// GetDefaultDurationBasisOk returns a tuple with the DefaultDurationBasis field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultDurationBasisOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultDurationBasis, true
}

// SetDefaultDurationBasis sets field value
func (o *ProductRef) SetDefaultDurationBasis(v string) {
	o.DefaultDurationBasis = v
}

// GetCoverageTerms returns the CoverageTerms field value
func (o *ProductRef) GetCoverageTerms() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CoverageTerms
}

// GetCoverageTermsOk returns a tuple with the CoverageTerms field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetCoverageTermsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CoverageTerms, true
}

// SetCoverageTerms sets field value
func (o *ProductRef) SetCoverageTerms(v []string) {
	o.CoverageTerms = v
}

// GetEligibleAccountTypes returns the EligibleAccountTypes field value
func (o *ProductRef) GetEligibleAccountTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EligibleAccountTypes
}

// GetEligibleAccountTypesOk returns a tuple with the EligibleAccountTypes field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetEligibleAccountTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EligibleAccountTypes, true
}

// SetEligibleAccountTypes sets field value
func (o *ProductRef) SetEligibleAccountTypes(v []string) {
	o.EligibleAccountTypes = v
}

// GetContents returns the Contents field value
func (o *ProductRef) GetContents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetContentsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contents, true
}

// SetContents sets field value
func (o *ProductRef) SetContents(v []string) {
	o.Contents = v
}

// GetDocuments returns the Documents field value
func (o *ProductRef) GetDocuments() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDocumentsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Documents, true
}

// SetDocuments sets field value
func (o *ProductRef) SetDocuments(v []string) {
	o.Documents = v
}

// GetCharges returns the Charges field value
func (o *ProductRef) GetCharges() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Charges
}

// GetChargesOk returns a tuple with the Charges field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetChargesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Charges, true
}

// SetCharges sets field value
func (o *ProductRef) SetCharges(v []string) {
	o.Charges = v
}

// GetData returns the Data field value
func (o *ProductRef) GetData() map[string]PropertyRef {
	if o == nil {
		var ret map[string]PropertyRef
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDataOk() (*map[string]PropertyRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ProductRef) SetData(v map[string]PropertyRef) {
	o.Data = v
}

// GetStaticData returns the StaticData field value
func (o *ProductRef) GetStaticData() map[string]PropertyRef {
	if o == nil {
		var ret map[string]PropertyRef
		return ret
	}

	return o.StaticData
}

// GetStaticDataOk returns a tuple with the StaticData field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetStaticDataOk() (*map[string]PropertyRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StaticData, true
}

// SetStaticData sets field value
func (o *ProductRef) SetStaticData(v map[string]PropertyRef) {
	o.StaticData = v
}

// GetDefaultSearchable returns the DefaultSearchable field value
func (o *ProductRef) GetDefaultSearchable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultSearchable
}

// GetDefaultSearchableOk returns a tuple with the DefaultSearchable field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultSearchableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultSearchable, true
}

// SetDefaultSearchable sets field value
func (o *ProductRef) SetDefaultSearchable(v bool) {
	o.DefaultSearchable = v
}

// GetPluralType returns the PluralType field value
// Deprecated
func (o *ProductRef) GetPluralType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PluralType
}

// GetPluralTypeOk returns a tuple with the PluralType field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *ProductRef) GetPluralTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PluralType, true
}

// SetPluralType sets field value
// Deprecated
func (o *ProductRef) SetPluralType(v string) {
	o.PluralType = v
}

// GetDefaultBillingTrigger returns the DefaultBillingTrigger field value
func (o *ProductRef) GetDefaultBillingTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultBillingTrigger
}

// GetDefaultBillingTriggerOk returns a tuple with the DefaultBillingTrigger field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetDefaultBillingTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultBillingTrigger, true
}

// SetDefaultBillingTrigger sets field value
func (o *ProductRef) SetDefaultBillingTrigger(v string) {
	o.DefaultBillingTrigger = v
}

// GetNumberingPlan returns the NumberingPlan field value if set, zero value otherwise.
func (o *ProductRef) GetNumberingPlan() string {
	if o == nil || IsNil(o.NumberingPlan) {
		var ret string
		return ret
	}
	return *o.NumberingPlan
}

// GetNumberingPlanOk returns a tuple with the NumberingPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductRef) GetNumberingPlanOk() (*string, bool) {
	if o == nil || IsNil(o.NumberingPlan) {
		return nil, false
	}
	return o.NumberingPlan, true
}

// HasNumberingPlan returns a boolean if a field has been set.
func (o *ProductRef) HasNumberingPlan() bool {
	if o != nil && !IsNil(o.NumberingPlan) {
		return true
	}

	return false
}

// SetNumberingPlan gets a reference to the given string and assigns it to the NumberingPlan field.
func (o *ProductRef) SetNumberingPlan(v string) {
	o.NumberingPlan = &v
}

// GetNumberingString returns the NumberingString field value if set, zero value otherwise.
func (o *ProductRef) GetNumberingString() string {
	if o == nil || IsNil(o.NumberingString) {
		var ret string
		return ret
	}
	return *o.NumberingString
}

// GetNumberingStringOk returns a tuple with the NumberingString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductRef) GetNumberingStringOk() (*string, bool) {
	if o == nil || IsNil(o.NumberingString) {
		return nil, false
	}
	return o.NumberingString, true
}

// HasNumberingString returns a boolean if a field has been set.
func (o *ProductRef) HasNumberingString() bool {
	if o != nil && !IsNil(o.NumberingString) {
		return true
	}

	return false
}

// SetNumberingString gets a reference to the given string and assigns it to the NumberingString field.
func (o *ProductRef) SetNumberingString(v string) {
	o.NumberingString = &v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *ProductRef) GetAvailability() AvailabilityRef {
	if o == nil || IsNil(o.Availability) {
		var ret AvailabilityRef
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductRef) GetAvailabilityOk() (*AvailabilityRef, bool) {
	if o == nil || IsNil(o.Availability) {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *ProductRef) HasAvailability() bool {
	if o != nil && !IsNil(o.Availability) {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given AvailabilityRef and assigns it to the Availability field.
func (o *ProductRef) SetAvailability(v AvailabilityRef) {
	o.Availability = &v
}

// GetWithPrecommitReapplication returns the WithPrecommitReapplication field value if set, zero value otherwise.
func (o *ProductRef) GetWithPrecommitReapplication() bool {
	if o == nil || IsNil(o.WithPrecommitReapplication) {
		var ret bool
		return ret
	}
	return *o.WithPrecommitReapplication
}

// GetWithPrecommitReapplicationOk returns a tuple with the WithPrecommitReapplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductRef) GetWithPrecommitReapplicationOk() (*bool, bool) {
	if o == nil || IsNil(o.WithPrecommitReapplication) {
		return nil, false
	}
	return o.WithPrecommitReapplication, true
}

// HasWithPrecommitReapplication returns a boolean if a field has been set.
func (o *ProductRef) HasWithPrecommitReapplication() bool {
	if o != nil && !IsNil(o.WithPrecommitReapplication) {
		return true
	}

	return false
}

// SetWithPrecommitReapplication gets a reference to the given bool and assigns it to the WithPrecommitReapplication field.
func (o *ProductRef) SetWithPrecommitReapplication(v bool) {
	o.WithPrecommitReapplication = &v
}

// GetContacts returns the Contacts field value
func (o *ProductRef) GetContacts() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}

	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetContactsOk() (*map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contacts, true
}

// SetContacts sets field value
func (o *ProductRef) SetContacts(v map[string][]string) {
	o.Contacts = v
}

// GetNumberingTrigger returns the NumberingTrigger field value
func (o *ProductRef) GetNumberingTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NumberingTrigger
}

// GetNumberingTriggerOk returns a tuple with the NumberingTrigger field value
// and a boolean to check if the value has been set.
func (o *ProductRef) GetNumberingTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberingTrigger, true
}

// SetNumberingTrigger sets field value
func (o *ProductRef) SetNumberingTrigger(v string) {
	o.NumberingTrigger = v
}

func (o ProductRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["extend"] = o.Extend
	toSerialize["abstract"] = o.Abstract
	toSerialize["defaultInstallmentPlan"] = o.DefaultInstallmentPlan
	toSerialize["defaultBillingPlan"] = o.DefaultBillingPlan
	toSerialize["defaultTermDuration"] = o.DefaultTermDuration
	if !IsNil(o.DefaultDelinquencyPlan) {
		toSerialize["defaultDelinquencyPlan"] = o.DefaultDelinquencyPlan
	}
	if !IsNil(o.DefaultAutoRenewalPlan) {
		toSerialize["defaultAutoRenewalPlan"] = o.DefaultAutoRenewalPlan
	}
	if !IsNil(o.DefaultShortfallTolerancePlan) {
		toSerialize["defaultShortfallTolerancePlan"] = o.DefaultShortfallTolerancePlan
	}
	toSerialize["displayName"] = o.DisplayName
	toSerialize["defaultDurationBasis"] = o.DefaultDurationBasis
	toSerialize["coverageTerms"] = o.CoverageTerms
	toSerialize["eligibleAccountTypes"] = o.EligibleAccountTypes
	toSerialize["contents"] = o.Contents
	toSerialize["documents"] = o.Documents
	toSerialize["charges"] = o.Charges
	toSerialize["data"] = o.Data
	toSerialize["staticData"] = o.StaticData
	toSerialize["defaultSearchable"] = o.DefaultSearchable
	toSerialize["pluralType"] = o.PluralType
	toSerialize["defaultBillingTrigger"] = o.DefaultBillingTrigger
	if !IsNil(o.NumberingPlan) {
		toSerialize["numberingPlan"] = o.NumberingPlan
	}
	if !IsNil(o.NumberingString) {
		toSerialize["numberingString"] = o.NumberingString
	}
	if !IsNil(o.Availability) {
		toSerialize["availability"] = o.Availability
	}
	if !IsNil(o.WithPrecommitReapplication) {
		toSerialize["withPrecommitReapplication"] = o.WithPrecommitReapplication
	}
	toSerialize["contacts"] = o.Contacts
	toSerialize["numberingTrigger"] = o.NumberingTrigger
	return toSerialize, nil
}

func (o *ProductRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"extend",
		"abstract",
		"defaultInstallmentPlan",
		"defaultBillingPlan",
		"defaultTermDuration",
		"displayName",
		"defaultDurationBasis",
		"coverageTerms",
		"eligibleAccountTypes",
		"contents",
		"documents",
		"charges",
		"data",
		"staticData",
		"defaultSearchable",
		"pluralType",
		"defaultBillingTrigger",
		"contacts",
		"numberingTrigger",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductRef := _ProductRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductRef)

	if err != nil {
		return err
	}

	*o = ProductRef(varProductRef)

	return err
}

type NullableProductRef struct {
	value *ProductRef
	isSet bool
}

func (v NullableProductRef) Get() *ProductRef {
	return v.value
}

func (v *NullableProductRef) Set(val *ProductRef) {
	v.value = val
	v.isSet = true
}

func (v NullableProductRef) IsSet() bool {
	return v.isSet
}

func (v *NullableProductRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductRef(val *ProductRef) *NullableProductRef {
	return &NullableProductRef{value: val, isSet: true}
}

func (v NullableProductRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
