/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ReversalTypeRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReversalTypeRef{}

// ReversalTypeRef struct for ReversalTypeRef
type ReversalTypeRef struct {
	CreditType string `json:"creditType"`
}

type _ReversalTypeRef ReversalTypeRef

// NewReversalTypeRef instantiates a new ReversalTypeRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReversalTypeRef(creditType string) *ReversalTypeRef {
	this := ReversalTypeRef{}
	this.CreditType = creditType
	return &this
}

// NewReversalTypeRefWithDefaults instantiates a new ReversalTypeRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReversalTypeRefWithDefaults() *ReversalTypeRef {
	this := ReversalTypeRef{}
	return &this
}

// GetCreditType returns the CreditType field value
func (o *ReversalTypeRef) GetCreditType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditType
}

// GetCreditTypeOk returns a tuple with the CreditType field value
// and a boolean to check if the value has been set.
func (o *ReversalTypeRef) GetCreditTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditType, true
}

// SetCreditType sets field value
func (o *ReversalTypeRef) SetCreditType(v string) {
	o.CreditType = v
}

func (o ReversalTypeRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReversalTypeRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["creditType"] = o.CreditType
	return toSerialize, nil
}

func (o *ReversalTypeRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"creditType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReversalTypeRef := _ReversalTypeRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReversalTypeRef)

	if err != nil {
		return err
	}

	*o = ReversalTypeRef(varReversalTypeRef)

	return err
}

type NullableReversalTypeRef struct {
	value *ReversalTypeRef
	isSet bool
}

func (v NullableReversalTypeRef) Get() *ReversalTypeRef {
	return v.value
}

func (v *NullableReversalTypeRef) Set(val *ReversalTypeRef) {
	v.value = val
	v.isSet = true
}

func (v NullableReversalTypeRef) IsSet() bool {
	return v.isSet
}

func (v *NullableReversalTypeRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReversalTypeRef(val *ReversalTypeRef) *NullableReversalTypeRef {
	return &NullableReversalTypeRef{value: val, isSet: true}
}

func (v NullableReversalTypeRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReversalTypeRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
