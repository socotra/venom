/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TenantDeploymentResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantDeploymentResult{}

// TenantDeploymentResult struct for TenantDeploymentResult
type TenantDeploymentResult struct {
	Locator          string              `json:"locator"`
	Name             string              `json:"name"`
	DeploymentResult ConfigBuilderResult `json:"deploymentResult"`
	BootstrapResult  BootstrapResult     `json:"bootstrapResult"`
}

type _TenantDeploymentResult TenantDeploymentResult

// NewTenantDeploymentResult instantiates a new TenantDeploymentResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantDeploymentResult(locator string, name string, deploymentResult ConfigBuilderResult, bootstrapResult BootstrapResult) *TenantDeploymentResult {
	this := TenantDeploymentResult{}
	this.Locator = locator
	this.Name = name
	this.DeploymentResult = deploymentResult
	this.BootstrapResult = bootstrapResult
	return &this
}

// NewTenantDeploymentResultWithDefaults instantiates a new TenantDeploymentResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantDeploymentResultWithDefaults() *TenantDeploymentResult {
	this := TenantDeploymentResult{}
	return &this
}

// GetLocator returns the Locator field value
func (o *TenantDeploymentResult) GetLocator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locator
}

// GetLocatorOk returns a tuple with the Locator field value
// and a boolean to check if the value has been set.
func (o *TenantDeploymentResult) GetLocatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locator, true
}

// SetLocator sets field value
func (o *TenantDeploymentResult) SetLocator(v string) {
	o.Locator = v
}

// GetName returns the Name field value
func (o *TenantDeploymentResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TenantDeploymentResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TenantDeploymentResult) SetName(v string) {
	o.Name = v
}

// GetDeploymentResult returns the DeploymentResult field value
func (o *TenantDeploymentResult) GetDeploymentResult() ConfigBuilderResult {
	if o == nil {
		var ret ConfigBuilderResult
		return ret
	}

	return o.DeploymentResult
}

// GetDeploymentResultOk returns a tuple with the DeploymentResult field value
// and a boolean to check if the value has been set.
func (o *TenantDeploymentResult) GetDeploymentResultOk() (*ConfigBuilderResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentResult, true
}

// SetDeploymentResult sets field value
func (o *TenantDeploymentResult) SetDeploymentResult(v ConfigBuilderResult) {
	o.DeploymentResult = v
}

// GetBootstrapResult returns the BootstrapResult field value
func (o *TenantDeploymentResult) GetBootstrapResult() BootstrapResult {
	if o == nil {
		var ret BootstrapResult
		return ret
	}

	return o.BootstrapResult
}

// GetBootstrapResultOk returns a tuple with the BootstrapResult field value
// and a boolean to check if the value has been set.
func (o *TenantDeploymentResult) GetBootstrapResultOk() (*BootstrapResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BootstrapResult, true
}

// SetBootstrapResult sets field value
func (o *TenantDeploymentResult) SetBootstrapResult(v BootstrapResult) {
	o.BootstrapResult = v
}

func (o TenantDeploymentResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantDeploymentResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locator"] = o.Locator
	toSerialize["name"] = o.Name
	toSerialize["deploymentResult"] = o.DeploymentResult
	toSerialize["bootstrapResult"] = o.BootstrapResult
	return toSerialize, nil
}

func (o *TenantDeploymentResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locator",
		"name",
		"deploymentResult",
		"bootstrapResult",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTenantDeploymentResult := _TenantDeploymentResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTenantDeploymentResult)

	if err != nil {
		return err
	}

	*o = TenantDeploymentResult(varTenantDeploymentResult)

	return err
}

type NullableTenantDeploymentResult struct {
	value *TenantDeploymentResult
	isSet bool
}

func (v NullableTenantDeploymentResult) Get() *TenantDeploymentResult {
	return v.value
}

func (v *NullableTenantDeploymentResult) Set(val *TenantDeploymentResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantDeploymentResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantDeploymentResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantDeploymentResult(val *TenantDeploymentResult) *NullableTenantDeploymentResult {
	return &NullableTenantDeploymentResult{value: val, isSet: true}
}

func (v NullableTenantDeploymentResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantDeploymentResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
