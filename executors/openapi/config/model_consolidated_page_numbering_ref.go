/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ConsolidatedPageNumberingRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsolidatedPageNumberingRef{}

// ConsolidatedPageNumberingRef struct for ConsolidatedPageNumberingRef
type ConsolidatedPageNumberingRef struct {
	EnableNumbering      bool  `json:"enableNumbering"`
	LeadingDocumentPages bool  `json:"leadingDocumentPages"`
	XPosition            int32 `json:"xPosition"`
	YPosition            int32 `json:"yPosition"`
}

type _ConsolidatedPageNumberingRef ConsolidatedPageNumberingRef

// NewConsolidatedPageNumberingRef instantiates a new ConsolidatedPageNumberingRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsolidatedPageNumberingRef(enableNumbering bool, leadingDocumentPages bool, xPosition int32, yPosition int32) *ConsolidatedPageNumberingRef {
	this := ConsolidatedPageNumberingRef{}
	this.EnableNumbering = enableNumbering
	this.LeadingDocumentPages = leadingDocumentPages
	this.XPosition = xPosition
	this.YPosition = yPosition
	return &this
}

// NewConsolidatedPageNumberingRefWithDefaults instantiates a new ConsolidatedPageNumberingRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsolidatedPageNumberingRefWithDefaults() *ConsolidatedPageNumberingRef {
	this := ConsolidatedPageNumberingRef{}
	return &this
}

// GetEnableNumbering returns the EnableNumbering field value
func (o *ConsolidatedPageNumberingRef) GetEnableNumbering() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableNumbering
}

// GetEnableNumberingOk returns a tuple with the EnableNumbering field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedPageNumberingRef) GetEnableNumberingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableNumbering, true
}

// SetEnableNumbering sets field value
func (o *ConsolidatedPageNumberingRef) SetEnableNumbering(v bool) {
	o.EnableNumbering = v
}

// GetLeadingDocumentPages returns the LeadingDocumentPages field value
func (o *ConsolidatedPageNumberingRef) GetLeadingDocumentPages() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LeadingDocumentPages
}

// GetLeadingDocumentPagesOk returns a tuple with the LeadingDocumentPages field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedPageNumberingRef) GetLeadingDocumentPagesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LeadingDocumentPages, true
}

// SetLeadingDocumentPages sets field value
func (o *ConsolidatedPageNumberingRef) SetLeadingDocumentPages(v bool) {
	o.LeadingDocumentPages = v
}

// GetXPosition returns the XPosition field value
func (o *ConsolidatedPageNumberingRef) GetXPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.XPosition
}

// GetXPositionOk returns a tuple with the XPosition field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedPageNumberingRef) GetXPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.XPosition, true
}

// SetXPosition sets field value
func (o *ConsolidatedPageNumberingRef) SetXPosition(v int32) {
	o.XPosition = v
}

// GetYPosition returns the YPosition field value
func (o *ConsolidatedPageNumberingRef) GetYPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.YPosition
}

// GetYPositionOk returns a tuple with the YPosition field value
// and a boolean to check if the value has been set.
func (o *ConsolidatedPageNumberingRef) GetYPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.YPosition, true
}

// SetYPosition sets field value
func (o *ConsolidatedPageNumberingRef) SetYPosition(v int32) {
	o.YPosition = v
}

func (o ConsolidatedPageNumberingRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsolidatedPageNumberingRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enableNumbering"] = o.EnableNumbering
	toSerialize["leadingDocumentPages"] = o.LeadingDocumentPages
	toSerialize["xPosition"] = o.XPosition
	toSerialize["yPosition"] = o.YPosition
	return toSerialize, nil
}

func (o *ConsolidatedPageNumberingRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enableNumbering",
		"leadingDocumentPages",
		"xPosition",
		"yPosition",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConsolidatedPageNumberingRef := _ConsolidatedPageNumberingRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConsolidatedPageNumberingRef)

	if err != nil {
		return err
	}

	*o = ConsolidatedPageNumberingRef(varConsolidatedPageNumberingRef)

	return err
}

type NullableConsolidatedPageNumberingRef struct {
	value *ConsolidatedPageNumberingRef
	isSet bool
}

func (v NullableConsolidatedPageNumberingRef) Get() *ConsolidatedPageNumberingRef {
	return v.value
}

func (v *NullableConsolidatedPageNumberingRef) Set(val *ConsolidatedPageNumberingRef) {
	v.value = val
	v.isSet = true
}

func (v NullableConsolidatedPageNumberingRef) IsSet() bool {
	return v.isSet
}

func (v *NullableConsolidatedPageNumberingRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsolidatedPageNumberingRef(val *ConsolidatedPageNumberingRef) *NullableConsolidatedPageNumberingRef {
	return &NullableConsolidatedPageNumberingRef{value: val, isSet: true}
}

func (v NullableConsolidatedPageNumberingRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsolidatedPageNumberingRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
