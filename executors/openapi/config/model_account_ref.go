/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccountRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountRef{}

// AccountRef struct for AccountRef
type AccountRef struct {
	DisplayName            string                 `json:"displayName"`
	Abstract               bool                   `json:"abstract"`
	Extend                 string                 `json:"extend"`
	DefaultSearchable      bool                   `json:"defaultSearchable"`
	Data                   map[string]PropertyRef `json:"data"`
	DefaultInvoiceDocument string                 `json:"defaultInvoiceDocument"`
	NumberingPlan          string                 `json:"numberingPlan"`
	InvoiceNumberingPlan   string                 `json:"invoiceNumberingPlan"`
	Contacts               map[string][]string    `json:"contacts"`
	NumberingTrigger       string                 `json:"numberingTrigger"`
}

type _AccountRef AccountRef

// NewAccountRef instantiates a new AccountRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountRef(displayName string, abstract bool, extend string, defaultSearchable bool, data map[string]PropertyRef, defaultInvoiceDocument string, numberingPlan string, invoiceNumberingPlan string, contacts map[string][]string, numberingTrigger string) *AccountRef {
	this := AccountRef{}
	this.DisplayName = displayName
	this.Abstract = abstract
	this.Extend = extend
	this.DefaultSearchable = defaultSearchable
	this.Data = data
	this.DefaultInvoiceDocument = defaultInvoiceDocument
	this.NumberingPlan = numberingPlan
	this.InvoiceNumberingPlan = invoiceNumberingPlan
	this.Contacts = contacts
	this.NumberingTrigger = numberingTrigger
	return &this
}

// NewAccountRefWithDefaults instantiates a new AccountRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountRefWithDefaults() *AccountRef {
	this := AccountRef{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *AccountRef) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *AccountRef) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetAbstract returns the Abstract field value
func (o *AccountRef) GetAbstract() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Abstract
}

// GetAbstractOk returns a tuple with the Abstract field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetAbstractOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Abstract, true
}

// SetAbstract sets field value
func (o *AccountRef) SetAbstract(v bool) {
	o.Abstract = v
}

// GetExtend returns the Extend field value
func (o *AccountRef) GetExtend() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Extend
}

// GetExtendOk returns a tuple with the Extend field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetExtendOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extend, true
}

// SetExtend sets field value
func (o *AccountRef) SetExtend(v string) {
	o.Extend = v
}

// GetDefaultSearchable returns the DefaultSearchable field value
func (o *AccountRef) GetDefaultSearchable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultSearchable
}

// GetDefaultSearchableOk returns a tuple with the DefaultSearchable field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetDefaultSearchableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultSearchable, true
}

// SetDefaultSearchable sets field value
func (o *AccountRef) SetDefaultSearchable(v bool) {
	o.DefaultSearchable = v
}

// GetData returns the Data field value
func (o *AccountRef) GetData() map[string]PropertyRef {
	if o == nil {
		var ret map[string]PropertyRef
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetDataOk() (*map[string]PropertyRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *AccountRef) SetData(v map[string]PropertyRef) {
	o.Data = v
}

// GetDefaultInvoiceDocument returns the DefaultInvoiceDocument field value
func (o *AccountRef) GetDefaultInvoiceDocument() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultInvoiceDocument
}

// GetDefaultInvoiceDocumentOk returns a tuple with the DefaultInvoiceDocument field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetDefaultInvoiceDocumentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultInvoiceDocument, true
}

// SetDefaultInvoiceDocument sets field value
func (o *AccountRef) SetDefaultInvoiceDocument(v string) {
	o.DefaultInvoiceDocument = v
}

// GetNumberingPlan returns the NumberingPlan field value
func (o *AccountRef) GetNumberingPlan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NumberingPlan
}

// GetNumberingPlanOk returns a tuple with the NumberingPlan field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetNumberingPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberingPlan, true
}

// SetNumberingPlan sets field value
func (o *AccountRef) SetNumberingPlan(v string) {
	o.NumberingPlan = v
}

// GetInvoiceNumberingPlan returns the InvoiceNumberingPlan field value
func (o *AccountRef) GetInvoiceNumberingPlan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceNumberingPlan
}

// GetInvoiceNumberingPlanOk returns a tuple with the InvoiceNumberingPlan field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetInvoiceNumberingPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceNumberingPlan, true
}

// SetInvoiceNumberingPlan sets field value
func (o *AccountRef) SetInvoiceNumberingPlan(v string) {
	o.InvoiceNumberingPlan = v
}

// GetContacts returns the Contacts field value
func (o *AccountRef) GetContacts() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}

	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetContactsOk() (*map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contacts, true
}

// SetContacts sets field value
func (o *AccountRef) SetContacts(v map[string][]string) {
	o.Contacts = v
}

// GetNumberingTrigger returns the NumberingTrigger field value
func (o *AccountRef) GetNumberingTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NumberingTrigger
}

// GetNumberingTriggerOk returns a tuple with the NumberingTrigger field value
// and a boolean to check if the value has been set.
func (o *AccountRef) GetNumberingTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberingTrigger, true
}

// SetNumberingTrigger sets field value
func (o *AccountRef) SetNumberingTrigger(v string) {
	o.NumberingTrigger = v
}

func (o AccountRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["displayName"] = o.DisplayName
	toSerialize["abstract"] = o.Abstract
	toSerialize["extend"] = o.Extend
	toSerialize["defaultSearchable"] = o.DefaultSearchable
	toSerialize["data"] = o.Data
	toSerialize["defaultInvoiceDocument"] = o.DefaultInvoiceDocument
	toSerialize["numberingPlan"] = o.NumberingPlan
	toSerialize["invoiceNumberingPlan"] = o.InvoiceNumberingPlan
	toSerialize["contacts"] = o.Contacts
	toSerialize["numberingTrigger"] = o.NumberingTrigger
	return toSerialize, nil
}

func (o *AccountRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayName",
		"abstract",
		"extend",
		"defaultSearchable",
		"data",
		"defaultInvoiceDocument",
		"numberingPlan",
		"invoiceNumberingPlan",
		"contacts",
		"numberingTrigger",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountRef := _AccountRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountRef)

	if err != nil {
		return err
	}

	*o = AccountRef(varAccountRef)

	return err
}

type NullableAccountRef struct {
	value *AccountRef
	isSet bool
}

func (v NullableAccountRef) Get() *AccountRef {
	return v.value
}

func (v *NullableAccountRef) Set(val *AccountRef) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountRef) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountRef(val *AccountRef) *NullableAccountRef {
	return &NullableAccountRef{value: val, isSet: true}
}

func (v NullableAccountRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
