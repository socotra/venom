/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package config

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AutoRenewalPlanRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoRenewalPlanRef{}

// AutoRenewalPlanRef struct for AutoRenewalPlanRef
type AutoRenewalPlanRef struct {
	GenerateAutoRenewals   bool    `json:"generateAutoRenewals"`
	RenewalTransactionType *string `json:"renewalTransactionType,omitempty"`
	RenewalCreateLeadDays  *int32  `json:"renewalCreateLeadDays,omitempty"`
	RenewalAcceptLeadDays  *int32  `json:"renewalAcceptLeadDays,omitempty"`
	RenewalIssueLeadDays   *int32  `json:"renewalIssueLeadDays,omitempty"`
	NewTermDuration        *int32  `json:"newTermDuration,omitempty"`
}

type _AutoRenewalPlanRef AutoRenewalPlanRef

// NewAutoRenewalPlanRef instantiates a new AutoRenewalPlanRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoRenewalPlanRef(generateAutoRenewals bool) *AutoRenewalPlanRef {
	this := AutoRenewalPlanRef{}
	this.GenerateAutoRenewals = generateAutoRenewals
	return &this
}

// NewAutoRenewalPlanRefWithDefaults instantiates a new AutoRenewalPlanRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoRenewalPlanRefWithDefaults() *AutoRenewalPlanRef {
	this := AutoRenewalPlanRef{}
	return &this
}

// GetGenerateAutoRenewals returns the GenerateAutoRenewals field value
func (o *AutoRenewalPlanRef) GetGenerateAutoRenewals() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.GenerateAutoRenewals
}

// GetGenerateAutoRenewalsOk returns a tuple with the GenerateAutoRenewals field value
// and a boolean to check if the value has been set.
func (o *AutoRenewalPlanRef) GetGenerateAutoRenewalsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GenerateAutoRenewals, true
}

// SetGenerateAutoRenewals sets field value
func (o *AutoRenewalPlanRef) SetGenerateAutoRenewals(v bool) {
	o.GenerateAutoRenewals = v
}

// GetRenewalTransactionType returns the RenewalTransactionType field value if set, zero value otherwise.
func (o *AutoRenewalPlanRef) GetRenewalTransactionType() string {
	if o == nil || IsNil(o.RenewalTransactionType) {
		var ret string
		return ret
	}
	return *o.RenewalTransactionType
}

// GetRenewalTransactionTypeOk returns a tuple with the RenewalTransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoRenewalPlanRef) GetRenewalTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RenewalTransactionType) {
		return nil, false
	}
	return o.RenewalTransactionType, true
}

// HasRenewalTransactionType returns a boolean if a field has been set.
func (o *AutoRenewalPlanRef) HasRenewalTransactionType() bool {
	if o != nil && !IsNil(o.RenewalTransactionType) {
		return true
	}

	return false
}

// SetRenewalTransactionType gets a reference to the given string and assigns it to the RenewalTransactionType field.
func (o *AutoRenewalPlanRef) SetRenewalTransactionType(v string) {
	o.RenewalTransactionType = &v
}

// GetRenewalCreateLeadDays returns the RenewalCreateLeadDays field value if set, zero value otherwise.
func (o *AutoRenewalPlanRef) GetRenewalCreateLeadDays() int32 {
	if o == nil || IsNil(o.RenewalCreateLeadDays) {
		var ret int32
		return ret
	}
	return *o.RenewalCreateLeadDays
}

// GetRenewalCreateLeadDaysOk returns a tuple with the RenewalCreateLeadDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoRenewalPlanRef) GetRenewalCreateLeadDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RenewalCreateLeadDays) {
		return nil, false
	}
	return o.RenewalCreateLeadDays, true
}

// HasRenewalCreateLeadDays returns a boolean if a field has been set.
func (o *AutoRenewalPlanRef) HasRenewalCreateLeadDays() bool {
	if o != nil && !IsNil(o.RenewalCreateLeadDays) {
		return true
	}

	return false
}

// SetRenewalCreateLeadDays gets a reference to the given int32 and assigns it to the RenewalCreateLeadDays field.
func (o *AutoRenewalPlanRef) SetRenewalCreateLeadDays(v int32) {
	o.RenewalCreateLeadDays = &v
}

// GetRenewalAcceptLeadDays returns the RenewalAcceptLeadDays field value if set, zero value otherwise.
func (o *AutoRenewalPlanRef) GetRenewalAcceptLeadDays() int32 {
	if o == nil || IsNil(o.RenewalAcceptLeadDays) {
		var ret int32
		return ret
	}
	return *o.RenewalAcceptLeadDays
}

// GetRenewalAcceptLeadDaysOk returns a tuple with the RenewalAcceptLeadDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoRenewalPlanRef) GetRenewalAcceptLeadDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RenewalAcceptLeadDays) {
		return nil, false
	}
	return o.RenewalAcceptLeadDays, true
}

// HasRenewalAcceptLeadDays returns a boolean if a field has been set.
func (o *AutoRenewalPlanRef) HasRenewalAcceptLeadDays() bool {
	if o != nil && !IsNil(o.RenewalAcceptLeadDays) {
		return true
	}

	return false
}

// SetRenewalAcceptLeadDays gets a reference to the given int32 and assigns it to the RenewalAcceptLeadDays field.
func (o *AutoRenewalPlanRef) SetRenewalAcceptLeadDays(v int32) {
	o.RenewalAcceptLeadDays = &v
}

// GetRenewalIssueLeadDays returns the RenewalIssueLeadDays field value if set, zero value otherwise.
func (o *AutoRenewalPlanRef) GetRenewalIssueLeadDays() int32 {
	if o == nil || IsNil(o.RenewalIssueLeadDays) {
		var ret int32
		return ret
	}
	return *o.RenewalIssueLeadDays
}

// GetRenewalIssueLeadDaysOk returns a tuple with the RenewalIssueLeadDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoRenewalPlanRef) GetRenewalIssueLeadDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RenewalIssueLeadDays) {
		return nil, false
	}
	return o.RenewalIssueLeadDays, true
}

// HasRenewalIssueLeadDays returns a boolean if a field has been set.
func (o *AutoRenewalPlanRef) HasRenewalIssueLeadDays() bool {
	if o != nil && !IsNil(o.RenewalIssueLeadDays) {
		return true
	}

	return false
}

// SetRenewalIssueLeadDays gets a reference to the given int32 and assigns it to the RenewalIssueLeadDays field.
func (o *AutoRenewalPlanRef) SetRenewalIssueLeadDays(v int32) {
	o.RenewalIssueLeadDays = &v
}

// GetNewTermDuration returns the NewTermDuration field value if set, zero value otherwise.
func (o *AutoRenewalPlanRef) GetNewTermDuration() int32 {
	if o == nil || IsNil(o.NewTermDuration) {
		var ret int32
		return ret
	}
	return *o.NewTermDuration
}

// GetNewTermDurationOk returns a tuple with the NewTermDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoRenewalPlanRef) GetNewTermDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.NewTermDuration) {
		return nil, false
	}
	return o.NewTermDuration, true
}

// HasNewTermDuration returns a boolean if a field has been set.
func (o *AutoRenewalPlanRef) HasNewTermDuration() bool {
	if o != nil && !IsNil(o.NewTermDuration) {
		return true
	}

	return false
}

// SetNewTermDuration gets a reference to the given int32 and assigns it to the NewTermDuration field.
func (o *AutoRenewalPlanRef) SetNewTermDuration(v int32) {
	o.NewTermDuration = &v
}

func (o AutoRenewalPlanRef) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoRenewalPlanRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["generateAutoRenewals"] = o.GenerateAutoRenewals
	if !IsNil(o.RenewalTransactionType) {
		toSerialize["renewalTransactionType"] = o.RenewalTransactionType
	}
	if !IsNil(o.RenewalCreateLeadDays) {
		toSerialize["renewalCreateLeadDays"] = o.RenewalCreateLeadDays
	}
	if !IsNil(o.RenewalAcceptLeadDays) {
		toSerialize["renewalAcceptLeadDays"] = o.RenewalAcceptLeadDays
	}
	if !IsNil(o.RenewalIssueLeadDays) {
		toSerialize["renewalIssueLeadDays"] = o.RenewalIssueLeadDays
	}
	if !IsNil(o.NewTermDuration) {
		toSerialize["newTermDuration"] = o.NewTermDuration
	}
	return toSerialize, nil
}

func (o *AutoRenewalPlanRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"generateAutoRenewals",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoRenewalPlanRef := _AutoRenewalPlanRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoRenewalPlanRef)

	if err != nil {
		return err
	}

	*o = AutoRenewalPlanRef(varAutoRenewalPlanRef)

	return err
}

type NullableAutoRenewalPlanRef struct {
	value *AutoRenewalPlanRef
	isSet bool
}

func (v NullableAutoRenewalPlanRef) Get() *AutoRenewalPlanRef {
	return v.value
}

func (v *NullableAutoRenewalPlanRef) Set(val *AutoRenewalPlanRef) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoRenewalPlanRef) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoRenewalPlanRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoRenewalPlanRef(val *AutoRenewalPlanRef) *NullableAutoRenewalPlanRef {
	return &NullableAutoRenewalPlanRef{value: val, isSet: true}
}

func (v NullableAutoRenewalPlanRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoRenewalPlanRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
